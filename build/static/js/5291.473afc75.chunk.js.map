{"version":3,"file":"static/js/5291.473afc75.chunk.js","mappings":"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","sources":["api.js","pages/zoology/ZooWorksheet2.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React, { useState, useRef, useEffect } from \"react\";\nimport stemzLearningLogo from \"../../assets/logo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { call_api } from \"../../api\";\n\n// Configuration data\nconst questions = [\n  {\n    id: 1,\n    text: \"Which of the following is the ancestor of a human?\",\n    options: [\n      { letter: \"a\", text: \"hippo\" },\n      { letter: \"b\", text: \"dinosaur\" },\n      { letter: \"c\", text: \"ape\" },\n      { letter: \"d\", text: \"kangaroo\" },\n    ],\n    correctAnswer: \"c\",\n  },\n  {\n    id: 2,\n    text: \"Which of the following is the descendant of the dinosaurs? (hint: look for similar traits that were not eliminated through evolution!)\",\n    options: [\n      { letter: \"a\", text: \"penguin\" },\n      { letter: \"b\", text: \"crocodile\" },\n      { letter: \"c\", text: \"elephant\" },\n      { letter: \"d\", text: \"porcupine\" },\n    ],\n    correctAnswer: \"b\",\n  },\n  {\n    id: 3,\n    text: \"Which is an example of a neutral mutation for a lion?\",\n    options: [\n      { letter: \"a\", text: \"smaller teeth\" },\n      { letter: \"b\", text: \"stronger legs\" },\n      { letter: \"c\", text: \"sharper senses\" },\n      { letter: \"d\", text: \"darker hair\" },\n    ],\n    correctAnswer: \"d\",\n  },\n  {\n    id: 4,\n    text: \"Which islands did Charles Darwin travel to that led him to his discovery?\",\n    options: [\n      { letter: \"a\", text: \"Hawaiian Islands\" },\n      { letter: \"b\", text: \"Canary Islands\" },\n      { letter: \"c\", text: \"Caribbean Islands\" },\n      { letter: \"d\", text: \"Galapagos Islands\" },\n    ],\n    correctAnswer: \"d\",\n  },\n  {\n    id: 5,\n    text: \"Mosquitoes becoming immune to pesticides over time is an example of what?\",\n    options: [\n      { letter: \"a\", text: \"Harmful Mutation\" },\n      { letter: \"b\", text: \"Biodiversity\" },\n      { letter: \"c\", text: \"Evolution\" },\n      { letter: \"d\", text: \"None of the Above\" },\n    ],\n    correctAnswer: \"c\",\n  },\n];\n\nexport default function ZooWorkSheet2() {\n  // Navigation\n  const navigate = useNavigate();\n\n  // State variables\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [isHovering, setIsHovering] = useState(false);\n\n  // Progress tracking states\n  const [userProgress, setUserProgress] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [worksheetCompleted, setWorksheetCompleted] = useState(false);\n  const [pointsEarned, setPointsEarned] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  // Constants for progress tracking\n  const lessonNumber = \"lesson2\";\n  const courseKey = \"zoology\";\n\n  // Refs\n  const statusTimeoutRef = useRef(null);\n\n  // Show status message with auto-fade\n  const showStatus = (message, duration = 3000) => {\n    setStatusMessage(message);\n    if (statusTimeoutRef.current) clearTimeout(statusTimeoutRef.current);\n    statusTimeoutRef.current = setTimeout(() => setStatusMessage(\"\"), duration);\n  };\n\n  // Token verification\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      try {\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        if (response && response.success) {\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Token verification error:\", error);\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n\n  // Fetch user progress data\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    const fetchUserProgress = async () => {\n      try {\n        const response = await call_api(null, \"points\", \"GET\");\n        if (response) {\n          setUserProgress(response);\n\n          // Check if there's course data available\n          if (response.courses && response.courses[courseKey]) {\n            const lesson = response.courses[courseKey].lessons[lessonNumber];\n\n            if (lesson && lesson.activities && lesson.activities.worksheet) {\n              const savedCompleted =\n                lesson.activities.worksheet.completed || false;\n              const savedPoints = lesson.activities.worksheet.earned || 0;\n\n              setWorksheetCompleted(savedCompleted);\n              setPointsEarned(savedPoints);\n            }\n          }\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error fetching course progress:\", err);\n        setLoading(false);\n      }\n    };\n    fetchUserProgress();\n  }, [isAuthenticated, courseKey, lessonNumber]);\n\n  const handleOptionSelect = (questionId, letter) => {\n    if (!showResults) {\n      setSelectedOptions((prev) => ({\n        ...prev,\n        [questionId]: letter,\n      }));\n    }\n  };\n\n  // Check answers and award partial credit\n  const handleSubmit = () => {\n    setShowResults(true);\n\n    // First check if all questions are answered\n    if (Object.keys(selectedOptions).length !== questions.length) return;\n\n    // Count correct answers\n    let correctCount = 0;\n    questions.forEach((question) => {\n      if (selectedOptions[question.id] === question.correctAnswer) {\n        correctCount++;\n      }\n    });\n\n    // Award points based on correct answers (scaled to 5 total points)\n    const totalPossiblePoints = 5;\n    const earnedPoints = Math.round(\n      (correctCount / questions.length) * totalPossiblePoints\n    );\n\n    // Mark as completed with partial credit\n    setWorksheetCompleted(true);\n    setPointsEarned(earnedPoints);\n\n    // Update the backend\n    setTimeout(() => {\n      const updatedProgress = { ...userProgress };\n\n      // Ensure the path exists\n      if (!updatedProgress.courses) updatedProgress.courses = {};\n      if (!updatedProgress.courses[courseKey]) {\n        updatedProgress.courses[courseKey] = { lessons: {}, title: \"Zoology\" };\n      }\n      if (!updatedProgress.courses[courseKey].lessons) {\n        updatedProgress.courses[courseKey].lessons = {};\n      }\n      if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber] = {\n          activities: {},\n          title: \"Darwin's Theory of Evolution\",\n        };\n      }\n      if (\n        !updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n      ) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities =\n          {};\n      }\n\n      // Set worksheet data\n      updatedProgress.courses[courseKey].lessons[\n        lessonNumber\n      ].activities.worksheet = {\n        completed: true,\n        earned: earnedPoints,\n        points: 5, // Total possible points is 5\n        type: \"worksheet\",\n        title: \"Evolution Quiz\",\n      };\n\n      // Update lesson points\n      updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints =\n        earnedPoints;\n\n      // Mark lesson as completed if video is also completed\n      if (\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n          .video?.completed\n      ) {\n        updatedProgress.courses[courseKey].lessons[\n          lessonNumber\n        ].completed = true;\n      }\n\n      // Update course points\n      let coursePoints = 0;\n      Object.values(updatedProgress.courses[courseKey].lessons).forEach(\n        (lesson) => {\n          coursePoints += lesson.lessonPoints || 0;\n        }\n      );\n      updatedProgress.courses[courseKey].coursePoints = coursePoints;\n\n      // Update total points\n      let totalPoints = 0;\n      Object.values(updatedProgress.courses).forEach((course) => {\n        totalPoints += course.coursePoints || 0;\n      });\n      updatedProgress.totalPoints = totalPoints;\n\n      // Send to API\n      call_api(updatedProgress, \"points\", \"POST\")\n        .then((response) => {\n          if (response) {\n            setUserProgress(updatedProgress);\n            showStatus(\"✓ Progress saved!\", 3000);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Update error:\", error);\n          showStatus(\"❌ Error saving progress\", 3000);\n        });\n    }, 500);\n  };\n\n  const handleReset = () => {\n    setSelectedOptions({});\n    setShowResults(false);\n  };\n\n  const handleGoBack = () => {\n    window.history.back();\n  };\n\n  const getOptionStyle = (questionId, optionLetter) => {\n    const baseStyle = {\n      padding: \"15px\",\n      border: \"1px solid #ddd\",\n      borderRadius: \"5px\",\n      cursor: !showResults ? \"pointer\" : \"default\",\n      transition: \"all 0.3s ease\",\n      backgroundColor: \"white\",\n      marginBottom: \"8px\",\n    };\n\n    if (!showResults && selectedOptions[questionId] === optionLetter) {\n      return {\n        ...baseStyle,\n        backgroundColor: \"#e8f5e9\",\n        border: \"1px solid #3cb371\",\n      };\n    }\n\n    if (showResults) {\n      const question = questions.find((q) => q.id === questionId);\n      if (optionLetter === question.correctAnswer) {\n        return {\n          ...baseStyle,\n          backgroundColor: \"rgba(60, 179, 113, 0.2)\",\n          border: \"1px solid #3cb371\",\n        };\n      } else if (selectedOptions[questionId] === optionLetter) {\n        return {\n          ...baseStyle,\n          backgroundColor: \"rgba(207, 52, 52, 0.2)\",\n          border: \"1px solid #CF3434\",\n        };\n      }\n    }\n\n    return baseStyle;\n  };\n\n  // Check if all answers are correct\n  const isAllCorrect = () => {\n    if (Object.keys(selectedOptions).length !== questions.length) return false;\n    return questions.every(\n      (question) => selectedOptions[question.id] === question.correctAnswer\n    );\n  };\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div\n        style={{\n          minHeight: \"100vh\",\n          background: \"white\",\n          margin: 0,\n          padding: \"32px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <div\n            style={{\n              border: \"4px solid #f3f3f3\",\n              borderTop: \"4px solid #357717\",\n              borderRadius: \"50%\",\n              width: \"50px\",\n              height: \"50px\",\n              animation: \"spin 2s linear infinite\",\n              margin: \"0 auto 20px\",\n            }}\n          ></div>\n          <p>Loading worksheet content...</p>\n          <style>{`\n            @keyframes spin {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n          `}</style>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        background: \"white\",\n        margin: \"0\",\n        padding: \"32px\",\n        fontFamily: \"Arial, sans-serif\",\n        position: \"relative\",\n      }}\n    >\n      {/* Status message */}\n      {statusMessage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"150px\",\n            right: \"20px\",\n            padding: \"10px 15px\",\n            backgroundColor: statusMessage.includes(\"Error\")\n              ? \"rgba(231, 76, 60, 0.8)\"\n              : \"#357717\",\n            color: \"white\",\n            borderRadius: \"5px\",\n            fontWeight: \"bold\",\n            zIndex: 1000,\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.2)\",\n            animation: \"fadeIn 0.3s ease-out\",\n            fontSize: \"16px\",\n          }}\n        >\n          {statusMessage}\n        </div>\n      )}\n\n      {/* Back button */}\n      <button\n        onClick={handleGoBack}\n        style={{\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"50%\",\n          background: isHovering ? \"#3cb371\" : \"#357717\",\n          width: \"60px\",\n          height: \"60px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          cursor: \"pointer\",\n          transition: \"all 0.3s ease\",\n          fontSize: \"36px\",\n          fontWeight: \"bold\",\n          transform: isHovering ? \"scale(0.9)\" : \"scale(1)\",\n        }}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n      >\n        &#8592;\n      </button>\n\n      <div style={{ maxWidth: \"896px\", margin: \"0 auto\" }}>\n        {/* Header */}\n        <img\n          src={stemzLearningLogo}\n          alt=\"STEMZ Learning\"\n          style={{\n            maxWidth: \"300px\",\n            display: \"block\",\n            margin: \"0 auto 30px\",\n          }}\n        />\n        <h1\n          style={{\n            color: \"#254E17\",\n            fontSize: \"48px\",\n            marginBottom: \"10px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Darwin's Theory of Evolution\n        </h1>\n        <h2\n          style={{\n            color: \"#357717\",\n            fontSize: \"36px\",\n            marginBottom: \"30px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Zoology: Lesson 2\n        </h2>\n\n        {/* Progress status */}\n        <div\n          style={{\n            marginBottom: \"20px\",\n            padding: \"10px 15px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#f0f0f0\",\n            textAlign: \"center\",\n            borderLeft: worksheetCompleted\n              ? \"4px solid #3cb371\"\n              : \"4px solid #ccc\",\n          }}\n        >\n          <span\n            style={{\n              fontWeight: \"bold\",\n              marginRight: \"15px\",\n              color: \"#333333\",\n            }}\n          >\n            Worksheet:\n          </span>\n          <span\n            style={{\n              color: worksheetCompleted ? \"#3cb371\" : \"#666666\",\n              fontWeight: worksheetCompleted ? \"bold\" : \"normal\",\n            }}\n          >\n            {worksheetCompleted ? \"Completed\" : \"Not Completed\"}\n          </span>\n          <span\n            style={{\n              marginLeft: \"15px\",\n              color: \"#555555\",\n            }}\n          >\n            ({pointsEarned} {pointsEarned === 1 ? \"point\" : \"points\"})\n          </span>\n        </div>\n\n        {/* Instructions */}\n        <div\n          style={{\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n            padding: \"20px\",\n            marginBottom: \"30px\",\n          }}\n        >\n          <h3 style={{ color: \"#333333\", marginTop: 0, marginBottom: \"10px\" }}>\n            Instructions:\n          </h3>\n          <p style={{ margin: 0 }}>\n            Click on the correct answer for each question.\n          </p>\n        </div>\n\n        {/* Questions */}\n        {questions.map((question) => (\n          <div\n            key={question.id}\n            style={{\n              marginBottom: \"30px\",\n              padding: \"20px\",\n              backgroundColor: \"#f9f9f9\",\n              borderRadius: \"10px\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n            }}\n          >\n            <div\n              style={{\n                fontWeight: \"bold\",\n                marginBottom: \"15px\",\n              }}\n            >\n              {question.id}. {question.text}\n            </div>\n            <div\n              style={{\n                display: \"grid\",\n                gap: \"10px\",\n              }}\n            >\n              {question.options.map((option) => (\n                <div\n                  key={option.letter}\n                  onClick={() => handleOptionSelect(question.id, option.letter)}\n                  style={getOptionStyle(question.id, option.letter)}\n                >\n                  {option.letter}. {option.text}\n                </div>\n              ))}\n            </div>\n            {showResults && (\n              <div\n                style={{\n                  marginTop: \"10px\",\n                  fontSize: \"14px\",\n                  color:\n                    selectedOptions[question.id] === question.correctAnswer\n                      ? \"#3cb371\"\n                      : \"#CF3434\",\n                }}\n              >\n                {selectedOptions[question.id] === question.correctAnswer\n                  ? \"✓ Correct!\"\n                  : `✗ The correct answer is ${question.correctAnswer}.`}\n              </div>\n            )}\n          </div>\n        ))}\n\n        {/* Buttons */}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"20px\",\n            marginTop: \"30px\",\n          }}\n        >\n          <button\n            onClick={handleSubmit}\n            disabled={showResults}\n            style={{\n              padding: \"12px 25px\",\n              fontSize: \"16px\",\n              backgroundColor: showResults ? \"#cccccc\" : \"#3cb371\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: showResults ? \"default\" : \"pointer\",\n              transition: \"all 0.3s ease\",\n            }}\n          >\n            Check Answers\n          </button>\n          <button\n            onClick={handleReset}\n            style={{\n              padding: \"12px 25px\",\n              fontSize: \"16px\",\n              backgroundColor: \"#CF3434\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n              transition: \"all 0.3s ease\",\n            }}\n          >\n            Reset\n          </button>\n        </div>\n\n        {/* Results message */}\n        {showResults && (\n          <div\n            style={{\n              marginTop: \"30px\",\n              textAlign: \"center\",\n              padding: \"15px\",\n              backgroundColor: isAllCorrect() ? \"#e8f5e9\" : \"#ffebee\",\n              borderRadius: \"5px\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n            }}\n          >\n            <p\n              style={{\n                color: isAllCorrect() ? \"#3cb371\" : \"#CF3434\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {Object.keys(selectedOptions).length === 0\n                ? \"Please answer some questions before checking.\"\n                : isAllCorrect()\n                ? \"Congratulations! All answers are correct!\"\n                : Object.keys(selectedOptions).length < questions.length\n                ? \"Please answer all questions before checking.\"\n                : \"Some answers are incorrect. Please review and try again.\"}\n            </p>\n            {!isAllCorrect() &&\n              Object.keys(selectedOptions).length === questions.length && (\n                <p style={{ color: \"#555\", marginBottom: 0 }}>\n                  You got{\" \"}\n                  {\n                    questions.filter(\n                      (q) => selectedOptions[q.id] === q.correctAnswer\n                    ).length\n                  }{\" \"}\n                  out of {questions.length} correct.\n                </p>\n              )}\n          </div>\n        )}\n      </div>\n\n      <style jsx>{`\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        @keyframes fadeOut {\n          from {\n            opacity: 1;\n            transform: translateY(0);\n          }\n          to {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","questions","id","text","options","letter","correctAnswer","ZooWorkSheet2","navigate","useNavigate","selectedOptions","setSelectedOptions","useState","showResults","setShowResults","isHovering","setIsHovering","userProgress","setUserProgress","loading","setLoading","isAuthenticated","setIsAuthenticated","worksheetCompleted","setWorksheetCompleted","pointsEarned","setPointsEarned","statusMessage","setStatusMessage","lessonNumber","courseKey","statusTimeoutRef","useRef","showStatus","duration","arguments","length","undefined","current","clearTimeout","setTimeout","useEffect","success","console","verifyToken","courses","lesson","lessons","activities","worksheet","savedCompleted","completed","savedPoints","earned","err","fetchUserProgress","getOptionStyle","questionId","optionLetter","baseStyle","padding","border","borderRadius","cursor","transition","backgroundColor","marginBottom","find","q","isAllCorrect","Object","keys","every","question","_jsx","style","minHeight","background","margin","display","justifyContent","alignItems","fontFamily","children","_jsxs","textAlign","borderTop","width","height","animation","position","top","right","color","fontWeight","zIndex","boxShadow","fontSize","onClick","handleGoBack","history","back","left","transform","onMouseEnter","onMouseLeave","maxWidth","src","stemzLearningLogo","alt","borderLeft","marginRight","marginLeft","marginTop","map","gap","option","handleOptionSelect","prev","handleSubmit","correctCount","forEach","earnedPoints","Math","round","_updatedProgress$cour","updatedProgress","title","points","type","lessonPoints","video","coursePoints","values","totalPoints","course","catch","disabled","handleReset","filter","jsx"],"sourceRoot":""}