{"version":3,"file":"static/js/2168.5c3c133b.chunk.js","mappings":"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","sources":["api.js","components/Footer.js","components/HeroOther.js","components/Navbar.js","components/VideoLessonPage.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React from 'react';\nimport './Footer.css';\nimport {FaFacebook, FaLinkedin, FaTiktok, FaInstagram, FaTwitter} from 'react-icons/fa'\n\nconst Footer = () => {\n  return (\n    <div className='footer fixed-footer'>\n      <div className='footer-container'>\n        <div className='social'>\n          <a href=\"https://www.facebook.com/alice.gao.96558/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaFacebook size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.linkedin.com/company/stemz-learning/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaLinkedin size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.tiktok.com/@stemzlearning?_t=8edHU0jxuuUI&_r=1\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaTiktok size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.instagram.com/stemzlearning\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaInstagram size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.twitter.com/stemzlearning\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaTwitter size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react';\nimport './HeroOther.css'\n\nconst Hero = ({ overlayText }) => {\n  return (\n    <div className='hero-other'>\n        <div className=\"hero-overlay\">\n            <p className=\"overlay-text\">{overlayText}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default Hero\n","import React, { useState, useEffect } from 'react';\nimport './Navbar.css';\nimport {FaBars, FaTimes} from 'react-icons/fa';\nimport { Link, useNavigate } from 'react-router-dom';\nimport logo from '../assets/logo.png'\nimport axios from \"axios\";\n\nconst Navbar = () => {\n    const [check, setCheck] = useState(null);\n    const [click, setClick] = useState(false);\n    const [color, setColor] = useState(false);\n    const [activeDropdown, setActiveDropdown] = useState(null);\n    const navigate = useNavigate();\n  \n    const handleClick = () => setClick((prevState) => !prevState);\n  \n    const changeColor = () => {\n      if (window.scrollY >= 45) {\n        setColor(true);\n      } else {\n        setColor(false);\n      }\n    };\n  \n    window.addEventListener('scroll', changeColor);\n  \n    const scrollToTop = () => {\n      window.scrollTo(0, 0);\n      setClick(false); // Close mobile menu when clicking a link\n    };\n\n    const toggleDropdown = (index) => {\n      if (window.innerWidth <= 1100) {\n        setActiveDropdown(activeDropdown === index ? null : index);\n      }\n    };\n\n    const updateDashboard = () => {\n        window.location.href = '/dashboard';\n    };\n\n    const updateOnline = () => {\n        window.location.href = '/online-classes';\n        setClick(false); // Close mobile menu\n    };\n\n    const navigateToDashboard = (e) => {\n        e.preventDefault();\n        navigate('/dashboard');\n        setClick(false); // Close mobile menu\n    };\n    \n    const handleLogout = (e) => {\n      e.preventDefault();\n      // Clear the token from localStorage\n      localStorage.removeItem('token');\n      // Update authentication state\n      setCheck(false);\n      // Navigate to login page\n      navigate('/login');\n    };\n  \n    useEffect(() => {\n      // Check for token in localStorage first\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        // If token exists in localStorage, we consider user as logged in\n        setCheck(true);\n      } else {\n        // If no token in localStorage, check with the server\n        axios\n          .get('https://www.stemzlearning.org/dashboard', {\n            withCredentials: true,\n          })\n          .then((response) => {\n            if (response.data.success) {\n              setCheck(true);\n            } else {\n              setCheck(false);\n            }\n          })\n          .catch(() => {\n            setCheck(false);\n          });\n      }\n    }, []);\n  \n    if (check === null) {\n      return null; // Render nothing while fetching data\n    }\n  \n    return (\n        <div className={color ? 'header header-bg' : 'header'}>\n            <Link to='/'>\n                <img src={logo} alt=\"STEMz Learning\" className=\"logo\"/>\n            </Link>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li>\n                    <Link to='/' onClick={scrollToTop}>Home</Link>\n                </li>\n                <li>\n                    <Link to='/about-us' onClick={scrollToTop}>About Us</Link>\n                </li>\n                <li>\n                    <Link to='/online-classes' onClick={updateOnline}>Online Classes</Link>\n                </li>\n                <li className={activeDropdown === 0 ? 'active' : ''} onClick={() => toggleDropdown(0)}>\n                    <Link to='/self-paced-classes' onClick={(e) => window.innerWidth <= 1100 && e.preventDefault()}>\n                        Self-Paced Classes\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <Link to=\"/astronomy\" onClick={scrollToTop}>Astronomy</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/basicsofcoding\" onClick={scrollToTop}>Basics of Coding</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/biochemistry\" onClick={scrollToTop}>Biochemistry</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/chemistry\" onClick={scrollToTop}>Chemistry</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/circuits\" onClick={scrollToTop}>Circuits</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/environmentalscience\" onClick={scrollToTop}>Environmental Science</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/psychology\" onClick={scrollToTop}>Psychology</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/statistics\" onClick={scrollToTop}>Statistics</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/zoology\" onClick={scrollToTop}>Zoology</Link>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <Link to='/course-boxes' onClick={scrollToTop}>Course Boxes</Link>\n                </li>\n                <li>\n                    <Link to='https://substack.com/@STEMZLEARNING' onClick={scrollToTop}>News</Link>\n                </li>\n                <li className={activeDropdown === 1 ? 'active' : ''} onClick={() => toggleDropdown(1)}>\n                    <Link to='/get-involved' onClick={(e) => window.innerWidth <= 1100 && e.preventDefault()}>\n                        Get Involved\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <Link to=\"/volunteer\" onClick={scrollToTop}>Volunteers</Link>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <Link to='/contact' onClick={scrollToTop}>Contact</Link>\n                </li>\n                <li className=\"login-item\">\n                    {check ? (\n                        <Link to=\"/dashboard\" onClick={navigateToDashboard} className=\"login-link\">Dashboard</Link>\n                    ) : (\n                        <Link to=\"/login\" onClick={scrollToTop} className=\"login-link\">Log In</Link>\n                    )}\n                </li>\n            </ul>\n            <div className='hamburger' onClick={handleClick}>\n                {click ? (<FaTimes size={20} style={{color: 'black'}} />) : (<FaBars size={20} style={{color: 'black'}}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../components/Navbar';\nimport HeroOther from '../components/HeroOther';\nimport Footer from '../components/Footer';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { call_api } from '../api';\nimport '../pages/css/Allvideo.css';\n\n/* global YT */  // Tell ESLint that YT is a global variable\n\nconst VideoLessonPage = ({ \n  // Required props\n  lessonTitle,\n  lessonNumber = \"lesson1\",\n  courseKey = \"astronomy\",\n  videoUrl, \n  \n  // Resource URLs and paths\n  slideshowUrl,\n  worksheetPath = null,  // Set to null if no worksheet\n  quizPath = null,      // Set to null if no quiz\n  \n  // Notes configuration\n  notesUrl,\n  notesLabel,\n  \n  // Points configuration (same for both versions)\n  maxVideoPoints = 7,\n  worksheetPoints = 5,\n  quizPoints = 10,\n  completionThreshold = 95,\n  \n  // Version type (affects auth checks and which notes to display)\n  isParentVersion = false\n}) => {\n  // State variables\n  const [userProgress, setUserProgress] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [videoWatched, setVideoWatched] = useState(0);\n  const [worksheetCompleted, setWorksheetCompleted] = useState(false);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [pointsEarned, setPointsEarned] = useState({ video: 0, worksheet: 0, quiz: 0 });\n  const [savingPoints, setSavingPoints] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  \n  // Refs\n  const playerRef = useRef(null);\n  const progressIntervalRef = useRef(null);\n  const statusTimeoutRef = useRef(null);\n  \n  // Navigation\n  const navigate = useNavigate();\n  \n  // Feature flags\n  const hasWorksheet = worksheetPath !== null;\n  const hasQuiz = quizPath !== null;\n\n  // Log function for debugging\n  const log = (message) => {\n    const timestamp = new Date().toLocaleTimeString();\n    console.log(`[${timestamp}] ${message}`);\n  };\n\n  // Show status message with auto-fade\n  const showStatus = (message, duration = 3000) => {\n    setStatusMessage(message);\n    \n    // Clear any existing timeout\n    if (statusTimeoutRef.current) {\n      clearTimeout(statusTimeoutRef.current);\n    }\n    \n    // Set new timeout to clear message\n    statusTimeoutRef.current = setTimeout(() => {\n      setStatusMessage(\"\");\n    }, duration);\n  };\n\n  // Token verification\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        log(\"No token found, redirecting to login page\");\n        navigate(\"/login\");\n        return;\n      }\n      \n      try {\n        log(\"Token found, verifying...\");\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        \n        if (response && response.success) {\n          log(\"Token verification successful\");\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          log(\"Token verification failed\");\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Token verification error:\", error);\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    \n    verifyToken();\n  }, [navigate]);\n\n  // Fetch user progress data\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    \n    const fetchUserProgress = async () => {\n      try {\n        log(\"Fetching user progress...\");\n        const response = await call_api(null, \"points\", \"GET\");\n        \n        log(\"API response received\");\n        \n        if (response) {\n          setUserProgress(response);\n          \n          // Check if there's course data available\n          if (response.courses && response.courses[courseKey]) {\n            const lesson = response.courses[courseKey].lessons[lessonNumber];\n            \n            log(\"Lesson data found\");\n            \n            if (lesson) {\n              // Initialize video progress\n              if (lesson.activities && lesson.activities.video) {\n                const savedProgress = lesson.activities.video.percentWatched || 0;\n                const savedPoints = lesson.activities.video.earned || 0;\n                \n                log(`Loading saved video progress: ${savedProgress}%`);\n                log(`Loading saved video points: ${savedPoints}`);\n                \n                // Set video progress and points\n                setVideoWatched(savedProgress);\n                setPointsEarned(prev => ({ \n                  ...prev, \n                  video: savedPoints\n                }));\n              }\n              \n              // Initialize worksheet completion if has worksheet\n              if (hasWorksheet && lesson.activities && lesson.activities.worksheet) {\n                const savedCompleted = lesson.activities.worksheet.completed || false;\n                const savedPoints = lesson.activities.worksheet.earned || 0;\n                \n                log(`Loading saved worksheet completion: ${savedCompleted}`);\n                log(`Loading saved worksheet points: ${savedPoints}`);\n                \n                setWorksheetCompleted(savedCompleted);\n                setPointsEarned(prev => ({ \n                  ...prev, \n                  worksheet: savedPoints\n                }));\n              }\n              \n              // Initialize quiz completion if has quiz\n              if (hasQuiz && lesson.activities && lesson.activities.quiz) {\n                const savedCompleted = lesson.activities.quiz.completed || false;\n                const savedPoints = lesson.activities.quiz.earned || 0;\n                \n                log(`Loading saved quiz completion: ${savedCompleted}`);\n                log(`Loading saved quiz points: ${savedPoints}`);\n                \n                setQuizCompleted(savedCompleted);\n                setPointsEarned(prev => ({ \n                  ...prev, \n                  quiz: savedPoints\n                }));\n              }\n            }\n          }\n          \n          setLoading(false);\n        }\n      } catch (err) {\n        console.error('Error fetching course progress:', err);\n        setLoading(false);\n      }\n    };\n\n    fetchUserProgress();\n  }, [isAuthenticated, courseKey, lessonNumber, hasWorksheet, hasQuiz]);\n\n  // YouTube API initialization\n  useEffect(() => {\n    // Initialize YouTube API\n    const loadYouTubeAPI = () => {\n      log(\"Loading YouTube API\");\n      \n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      \n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n      \n      window.onYouTubeIframeAPIReady = initializePlayer;\n    };\n    \n    // Initialize player when API is ready\n    const initializePlayer = () => {\n      log(\"Initializing YouTube player\");\n      \n      const iframe = document.getElementById('youtube-player');\n      if (!iframe) {\n        log(\"YouTube iframe not found, will retry\");\n        setTimeout(initializePlayer, 1000);\n        return;\n      }\n      \n      try {\n        playerRef.current = new YT.Player('youtube-player', {\n          events: {\n            'onReady': onPlayerReady,\n            'onStateChange': onPlayerStateChange\n          }\n        });\n        \n        log(\"Player initialized\");\n      } catch (error) {\n        log(\"Error initializing player: \" + error.message);\n      }\n    };\n    \n    // Player ready handler\n    const onPlayerReady = (event) => {\n      log(\"Player ready\");\n      playerRef.current = event.target;\n    };\n    \n    // Player state change handler\n    const onPlayerStateChange = (event) => {\n      const stateNames = {\n        '-1': 'UNSTARTED',\n        '0': 'ENDED',\n        '1': 'PLAYING',\n        '2': 'PAUSED',\n        '3': 'BUFFERING',\n        '5': 'CUED'\n      };\n      \n      const stateName = stateNames[event.data] || event.data;\n      log(`Player state changed: ${stateName} (${event.data})`);\n      \n      // State handlers\n      if (event.data === 1) { // PLAYING\n        startProgressTracking();\n      } else if (event.data === 2 || event.data === 0) { // PAUSED or ENDED\n        checkVideoProgress();\n        stopProgressTracking();\n      }\n    };\n    \n    // Start initialization\n    if (window.YT && window.YT.Player) {\n      log(\"YouTube API already loaded\");\n      initializePlayer();\n    } else {\n      loadYouTubeAPI();\n    }\n    \n    // Cleanup\n    return () => {\n      log(\"Component unmounting, cleaning up\");\n      stopProgressTracking();\n      window.onYouTubeIframeAPIReady = null;\n      \n      if (statusTimeoutRef.current) {\n        clearTimeout(statusTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Start tracking progress\n  const startProgressTracking = () => {\n    log(\"Starting progress tracking\");\n    \n    // Clear any existing interval\n    if (progressIntervalRef.current) {\n      clearInterval(progressIntervalRef.current);\n    }\n    \n    // Set up new interval - check every 300 second\n    progressIntervalRef.current = setInterval(checkVideoProgress, 5000);\n  };\n  \n  // Stop tracking progress\n  const stopProgressTracking = () => {\n    if (!progressIntervalRef.current) return;\n    \n    clearInterval(progressIntervalRef.current);\n    progressIntervalRef.current = null;\n    log(\"Stopped progress tracking\");\n  };\n  \n  // Check video progress\n  const checkVideoProgress = () => {\n    if (!playerRef.current) {\n      log(\"No player available\");\n      return;\n    }\n    \n    try {\n      // Verify player methods are available\n      if (typeof playerRef.current.getCurrentTime !== 'function' || \n          typeof playerRef.current.getDuration !== 'function') {\n        log(\"Player methods not available\");\n        \n        // Attempt to recreate player if methods aren't available\n        if (window.YT && window.YT.Player) {\n          log(\"Recreating player instance\");\n          playerRef.current = new YT.Player('youtube-player', {\n            events: {\n              'onReady': (event) => {\n                log(\"Player recreated\");\n                playerRef.current = event.target;\n                setTimeout(checkVideoProgress, 500);\n              }\n            }\n          });\n        }\n        return;\n      }\n      \n      // Get times and calculate percentage\n      const currentTime = playerRef.current.getCurrentTime();\n      const duration = playerRef.current.getDuration();\n      \n      if (isNaN(currentTime) || isNaN(duration) || duration <= 0) {\n        log(\"Invalid time values\");\n        return;\n      }\n      \n      const currentPercent = Math.min(Math.floor((currentTime / duration) * 100), 100);\n      \n      log(`Current video position: ${currentPercent}% (${currentTime.toFixed(1)}/${duration.toFixed(1)})`);\n      \n      // Only update if current position is higher than saved max progress\n      if (currentPercent > videoWatched) {\n        log(`Updating progress: ${videoWatched}% → ${currentPercent}%`);\n        setVideoWatched(currentPercent);\n        \n        // Calculate points\n        const points = Math.min(maxVideoPoints, Math.floor((maxVideoPoints * currentPercent) / 100));\n        log(`Updating points: ${pointsEarned.video} → ${points}`);\n        setPointsEarned(prev => ({ ...prev, video: points }));\n        \n        // Handle completion\n        if (currentPercent >= completionThreshold) {\n          log(`Video fully watched (${currentPercent}% ≥ ${completionThreshold}%)`);\n          setVideoWatched(100);\n          setPointsEarned(prev => ({ ...prev, video: maxVideoPoints }));\n        }\n      } else {\n        log(`Current position (${currentPercent}%) is less than max progress (${videoWatched}%). No update needed.`);\n      }\n    } catch (error) {\n      log(\"Error checking progress: \" + error.message);\n    }\n  };\n\n  // Worksheet click handler\n  const handleWorksheetClick = () => {\n    log(\"Worksheet button clicked, navigating to worksheet\");\n    navigate(worksheetPath);\n  };\n  \n  // Quiz click handler\n  const handleQuizClick = () => {\n    log(\"Quiz button clicked, navigating to quiz\");\n    navigate(quizPath);\n  };\n\n  // Update points in backend when they change\n  useEffect(() => {\n    const updateBackend = async () => {\n      if (!userProgress || !isAuthenticated || savingPoints) return;\n      \n      // Get current lesson data\n      const currentLesson = userProgress.courses?.[courseKey]?.lessons?.[lessonNumber];\n      if (!currentLesson) return;\n      \n      // Check if points have changed\n      const videoPointsChanged = pointsEarned.video !== (currentLesson.activities?.video?.earned || 0);\n      const videoProgressChanged = videoWatched !== (currentLesson.activities?.video?.percentWatched || 0);\n      \n      // Only check worksheet changes if there's a worksheet\n      const worksheetPointsChanged = hasWorksheet ? \n        pointsEarned.worksheet !== (currentLesson.activities?.worksheet?.earned || 0) : false;\n      const worksheetCompletionChanged = hasWorksheet ? \n        worksheetCompleted !== (currentLesson.activities?.worksheet?.completed || false) : false;\n      \n      // Only check quiz changes if there's a quiz\n      const quizPointsChanged = hasQuiz ? \n        pointsEarned.quiz !== (currentLesson.activities?.quiz?.earned || 0) : false;\n      const quizCompletionChanged = hasQuiz ? \n        quizCompleted !== (currentLesson.activities?.quiz?.completed || false) : false;\n      \n      const hasChanges = videoPointsChanged || worksheetPointsChanged || quizPointsChanged || \n                         videoProgressChanged || worksheetCompletionChanged || quizCompletionChanged;\n      \n      log(\"Changes detected: \" + hasChanges);\n      \n      if (hasChanges) {\n        log(\"Updating backend with changes\");\n        setSavingPoints(true);\n        showStatus(\"Saving progress...\");\n        \n        try {\n          // Create a deep clone of the userProgress\n          const updatedProgress = JSON.parse(JSON.stringify(userProgress));\n          \n          // Ensure all needed objects exist\n          if (!updatedProgress.courses[courseKey]) {\n            updatedProgress.courses[courseKey] = { lessons: {} };\n          }\n          \n          if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n            updatedProgress.courses[courseKey].lessons[lessonNumber] = { activities: {} };\n          }\n          \n          if (!updatedProgress.courses[courseKey].lessons[lessonNumber].activities) {\n            updatedProgress.courses[courseKey].lessons[lessonNumber].activities = {};\n          }\n          \n          // Ensure video activity exists\n          if (!updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video) {\n            updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video = {};\n          }\n          \n          // Ensure worksheet activity exists if there's a worksheet\n          if (hasWorksheet && !updatedProgress.courses[courseKey].lessons[lessonNumber].activities.worksheet) {\n            updatedProgress.courses[courseKey].lessons[lessonNumber].activities.worksheet = {};\n          }\n          \n          // Ensure quiz activity exists if there's a quiz\n          if (hasQuiz && !updatedProgress.courses[courseKey].lessons[lessonNumber].activities.quiz) {\n            updatedProgress.courses[courseKey].lessons[lessonNumber].activities.quiz = {};\n          }\n          \n          // Update video progress\n          updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video.percentWatched = videoWatched;\n          updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video.earned = pointsEarned.video;\n          updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video.completed = videoWatched >= completionThreshold;\n          \n          // Update worksheet progress if there's a worksheet\n          if (hasWorksheet) {\n            updatedProgress.courses[courseKey].lessons[lessonNumber].activities.worksheet.completed = worksheetCompleted;\n            updatedProgress.courses[courseKey].lessons[lessonNumber].activities.worksheet.earned = pointsEarned.worksheet;\n          }\n          \n          // Update quiz progress if there's a quiz\n          if (hasQuiz) {\n            updatedProgress.courses[courseKey].lessons[lessonNumber].activities.quiz.completed = quizCompleted;\n            updatedProgress.courses[courseKey].lessons[lessonNumber].activities.quiz.earned = pointsEarned.quiz;\n          }\n          \n          // Calculate total points for this lesson\n          const lessonTotalPoints = pointsEarned.video + \n            (hasWorksheet ? pointsEarned.worksheet : 0) + \n            (hasQuiz ? pointsEarned.quiz : 0);\n          \n          // Update lesson points\n          updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints = lessonTotalPoints;\n          \n          // Check if lesson is completed\n          const isVideoComplete = videoWatched >= completionThreshold;\n          const isWorksheetComplete = !hasWorksheet || worksheetCompleted;\n          const isQuizComplete = !hasQuiz || quizCompleted;\n          \n          const isLessonComplete = isVideoComplete && isWorksheetComplete && isQuizComplete;\n          updatedProgress.courses[courseKey].lessons[lessonNumber].completed = isLessonComplete;\n          \n          // Recalculate course points\n          let coursePoints = 0;\n          Object.values(updatedProgress.courses[courseKey].lessons).forEach(lesson => {\n            coursePoints += lesson.lessonPoints || 0;\n          });\n          updatedProgress.courses[courseKey].coursePoints = coursePoints;\n          \n          // Check if course is completed\n          const allLessonsCompleted = Object.values(updatedProgress.courses[courseKey].lessons)\n            .every(lesson => lesson.completed);\n          updatedProgress.courses[courseKey].completed = allLessonsCompleted;\n          \n          // Recalculate total points\n          let totalPoints = 0;\n          Object.values(updatedProgress.courses).forEach(course => {\n            totalPoints += course.coursePoints || 0;\n          });\n          updatedProgress.totalPoints = totalPoints;\n          \n          log(\"Sending updated progress to backend\");\n          \n          // Send to backend\n          const response = await call_api(updatedProgress, \"points\", \"POST\");\n          \n          if (response) {\n            log(\"Points updated successfully\");\n            setUserProgress(updatedProgress);\n            showStatus(\"✓ Progress saved!\", 3000);\n          }\n        } catch (error) {\n          console.error(\"Error updating points:\", error);\n          showStatus(\"❌ Error saving progress\", 3000);\n        } finally {\n          setSavingPoints(false);\n        }\n      }\n    };\n    \n    updateBackend();\n  }, [\n    pointsEarned, \n    videoWatched, \n    worksheetCompleted,\n    quizCompleted, \n    userProgress, \n    isAuthenticated, \n    savingPoints, \n    courseKey, \n    lessonNumber, \n    hasWorksheet,\n    hasQuiz,\n    completionThreshold\n  ]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (statusTimeoutRef.current) {\n        clearTimeout(statusTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <div>\n        <Navbar />\n        <HeroOther overlayText={lessonTitle}/>\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading lesson content...</p>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Extract YouTube video ID from URL if needed\n  const getYoutubeId = (url) => {\n    if (!url.includes('youtube.com/') && !url.includes('youtu.be/')) {\n      // Already an ID\n      return url;\n    }\n    \n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return (match && match[2].length === 11) ? match[2] : null;\n  };\n\n  const videoId = getYoutubeId(videoUrl);\n  const embedUrl = `https://www.youtube.com/embed/${videoId}?enablejsapi=1&origin=${window.location.origin}`;\n\n  // Calculate total possible points\n  const totalPossiblePoints = maxVideoPoints + \n    (hasWorksheet ? worksheetPoints : 0) + \n    (hasQuiz ? quizPoints : 0);\n\n  return (\n    <div>\n      <Navbar/>\n      <HeroOther overlayText={lessonTitle}/>\n      \n      {/* Status message notification */}\n      {statusMessage && (\n        <div className=\"status-notification\" style={{\n          position: 'fixed',\n          top: '150px',\n          right: '20px',\n          padding: '10px 15px',\n          backgroundColor: statusMessage.includes(\"Error\") ? 'rgba(231, 76, 60, 0.8)' : '#357717',\n          color: 'white',\n          borderRadius: '5px',\n          fontWeight: 'bold',\n          zIndex: 1000,\n          boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n          animation: 'fadeIn 0.3s ease-out',\n          fontSize: '16px'\n        }}>\n          {statusMessage}\n        </div>\n      )}\n      \n      {/* Progress display - show for both versions */}\n      <div className=\"points-status\">\n        <div className=\"points-row\">\n          <span className=\"points-label\">Video progress:</span> \n          <span className=\"points-value\">{videoWatched}%</span>\n          <span className=\"points-earned\">({pointsEarned.video} points)</span>\n        </div>\n        \n        {hasWorksheet && (\n          <div className=\"points-row\">\n            <span className=\"points-label\">Worksheet:</span> \n            <span className=\"points-value\">{worksheetCompleted ? \"Completed\" : \"Not completed\"}</span>\n            <span className=\"points-earned\">({pointsEarned.worksheet} points)</span>\n          </div>\n        )}\n        \n        {hasQuiz && (\n          <div className=\"points-row\">\n            <span className=\"points-label\">Quiz:</span> \n            <span className=\"points-value\">{quizCompleted ? \"Completed\" : \"Not completed\"}</span>\n            <span className=\"points-earned\">({pointsEarned.quiz} points)</span>\n          </div>\n        )}\n        \n        <div className=\"points-row total\">\n          <span className=\"points-label\">Total lesson points:</span>\n          <span className=\"points-value\">\n            {\n              pointsEarned.video + \n              (hasWorksheet ? pointsEarned.worksheet : 0) + \n              (hasQuiz ? pointsEarned.quiz : 0)\n            } out of {totalPossiblePoints}\n          </span>\n        </div>\n      </div>\n      \n      <div className=\"vidbig\">\n        <div id=\"youtube-player-container\">\n          <iframe \n            id=\"youtube-player\"\n            className=\"astrovid\" \n            width=\"700\" \n            height=\"480\" \n            src={embedUrl}\n            frameBorder=\"0\" \n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n            allowFullScreen\n          ></iframe>\n        </div>\n      </div>\n      \n      <div className=\"centered-container\">\n        {slideshowUrl && (\n          <Link to={slideshowUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            <button className=\"course-button\">Slideshow</button>\n          </Link>\n        )}\n        \n        {hasWorksheet && (\n          <button className=\"course-button\" onClick={handleWorksheetClick}>\n            Worksheet\n          </button>\n        )}\n        \n        {hasQuiz && (\n          <button className=\"course-button\" onClick={handleQuizClick}>\n            Quiz\n          </button>\n        )}\n        \n        {notesUrl && (\n          <Link to={notesUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            <button className=\"course-button\">{notesLabel}</button>\n          </Link>\n        )}\n      </div>\n      \n      <style jsx>{`\n        @keyframes fadeIn {\n          from { opacity: 0; transform: translateY(-10px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        @keyframes fadeOut {\n          from { opacity: 1; transform: translateY(0); }\n          to { opacity: 0; transform: translateY(-10px); }\n        }\n      `}</style>\n      \n      <div style={{ paddingBottom: '200px' }} />\n      <Footer/>\n    </div>\n  );\n};\n\nexport default VideoLessonPage;"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","Footer","_jsx","className","children","_jsxs","rel","FaFacebook","size","style","color","marginRight","FaLinkedin","FaTiktok","FaInstagram","FaTwitter","_ref","overlayText","Navbar","check","setCheck","useState","click","setClick","setColor","activeDropdown","setActiveDropdown","navigate","useNavigate","addEventListener","changeColor","scrollY","scrollToTop","scrollTo","toggleDropdown","index","innerWidth","useEffect","axios","get","withCredentials","success","catch","Link","to","src","logo","alt","onClick","updateOnline","e","preventDefault","handleClick","prevState","FaTimes","FaBars","lessonTitle","lessonNumber","courseKey","videoUrl","slideshowUrl","worksheetPath","quizPath","notesUrl","notesLabel","maxVideoPoints","worksheetPoints","quizPoints","completionThreshold","isParentVersion","userProgress","setUserProgress","loading","setLoading","isAuthenticated","setIsAuthenticated","videoWatched","setVideoWatched","worksheetCompleted","setWorksheetCompleted","quizCompleted","setQuizCompleted","pointsEarned","setPointsEarned","video","worksheet","quiz","savingPoints","setSavingPoints","statusMessage","setStatusMessage","playerRef","useRef","progressIntervalRef","statusTimeoutRef","hasWorksheet","hasQuiz","log","timestamp","Date","toLocaleTimeString","console","showStatus","duration","arguments","length","undefined","current","clearTimeout","setTimeout","verifyToken","courses","lesson","lessons","activities","savedProgress","percentWatched","savedPoints","earned","prev","savedCompleted","completed","err","fetchUserProgress","initializePlayer","document","getElementById","YT","Player","events","onPlayerReady","onPlayerStateChange","event","stateName","startProgressTracking","checkVideoProgress","stopProgressTracking","loadYouTubeAPI","tag","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","clearInterval","setInterval","getCurrentTime","getDuration","currentTime","isNaN","currentPercent","Math","min","floor","toFixed","points","_userProgress$courses","_userProgress$courses2","_userProgress$courses3","_currentLesson$activi","_currentLesson$activi2","_currentLesson$activi3","_currentLesson$activi4","_currentLesson$activi5","_currentLesson$activi6","_currentLesson$activi7","_currentLesson$activi8","_currentLesson$activi9","_currentLesson$activi10","_currentLesson$activi11","_currentLesson$activi12","currentLesson","videoPointsChanged","videoProgressChanged","worksheetPointsChanged","worksheetCompletionChanged","quizPointsChanged","quizCompletionChanged","hasChanges","updatedProgress","parse","lessonTotalPoints","lessonPoints","isLessonComplete","coursePoints","Object","values","forEach","allLessonsCompleted","every","totalPoints","course","updateBackend","HeroOther","embedUrl","match","getYoutubeId","origin","totalPossiblePoints","position","top","right","padding","backgroundColor","borderRadius","fontWeight","zIndex","boxShadow","animation","fontSize","id","width","height","frameBorder","allow","allowFullScreen","handleWorksheetClick","handleQuizClick","jsx","paddingBottom"],"sourceRoot":""}