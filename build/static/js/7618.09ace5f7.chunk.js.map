{"version":3,"file":"static/js/7618.09ace5f7.chunk.js","mappings":"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","sources":["api.js","pages/statistics/StatWorksheet1.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React, { useState, useEffect } from \"react\";\nimport stemzLearningLogo from \"../../assets/logo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { call_api } from \"../../api\";\n\nconst colorCodes = [\n  { color: \"Red\", pieces: 2, tips: \"\" },\n  { color: \"Blue\", pieces: 3, tips: \"\" },\n  { color: \"Green\", pieces: 4, tips: \"\" },\n  { color: \"Purple\", pieces: 6, tips: \"Cut in half then cut each piece in 3\" },\n  {\n    color: \"Black\",\n    pieces: 8,\n    tips: \"Cut into 4 pieces then cut each piece in half\",\n  },\n];\n\nconst handleDownload = () => {\n  window.open(\n    \"https://docs.google.com/document/d/e/2PACX-1vQqKPBJD-85m_sQdbX__cWr0pS2SNtdPQubY2gr6r3_00jc9zWbn5cfOEUx8Ffs_xM9Fs8H29KCC_vc/pub\",\n    \"_blank\"\n  );\n};\n\nconst CircleDiagram = ({ slices }) => {\n  const midX = 50;\n  const midY = 50;\n  const radius = 40;\n\n  const getSlicePath = (slice, total) => {\n    const startAngle = (slice * 360) / total;\n    const endAngle = ((slice + 1) * 360) / total;\n    const startRad = ((startAngle - 90) * Math.PI) / 180;\n    const endRad = ((endAngle - 90) * Math.PI) / 180;\n\n    const x1 = midX + radius * Math.cos(startRad);\n    const y1 = midY + radius * Math.sin(startRad);\n    const x2 = midX + radius * Math.cos(endRad);\n    const y2 = midY + radius * Math.sin(endRad);\n\n    const largeArc = endAngle - startAngle <= 180 ? 0 : 1;\n\n    return `M ${midX} ${midY} L ${x1} ${y1} A ${radius} ${radius} 0 ${largeArc} 1 ${x2} ${y2} Z`;\n  };\n\n  return (\n    <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\n      {Array.from({ length: slices }, (_, i) => (\n        <path\n          key={i}\n          d={getSlicePath(i, slices)}\n          stroke=\"black\"\n          strokeWidth=\"1\"\n          fill=\"none\"\n        />\n      ))}\n    </svg>\n  );\n};\n\nexport default function StatWorkSheet1() {\n  const [isHovering, setIsHovering] = useState(false);\n  const [completionTimer, setCompletionTimer] = useState(null);\n  const [completed, setCompleted] = useState(false);\n  const [completionStatus, setCompletionStatus] = useState(\n    \"Please stay on this page & continue reading to earn worksheet points...\"\n  );\n  const [countdown, setCountdown] = useState(300);\n  const [showStatusMessage, setShowStatusMessage] = useState(true);\n  const [statusFading, setStatusFading] = useState(false);\n  const navigate = useNavigate();\n\n  // Constants\n  const courseKey = \"statistics\";\n  const lessonNumber = \"lesson1\";\n  const WORKSHEET_POINTS = 5;\n\n  // Log function for debugging\n  const log = (message) => {\n    const timestamp = new Date().toLocaleTimeString();\n    console.log(`[WS ${timestamp}] ${message}`);\n  };\n\n  // Countdown timer effect\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n        setCompletionStatus(\n          `Please stay on this page & continue reading to earn worksheet points... (${countdown}s)`\n        );\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    } else if (countdown === 0) {\n      // When countdown reaches 0, mark as completed\n      markWorksheetAsCompleted();\n    }\n  }, [countdown]);\n\n  // Auto-complete the worksheet after countdown reaches 0\n  useEffect(() => {\n    log(\"Worksheet loaded, countdown started\");\n\n    // Cleanup function\n    return () => {\n      log(\"Cleaning up timers\");\n      if (completionTimer) {\n        clearTimeout(completionTimer);\n      }\n    };\n  }, []);\n\n  // Function to fade out status message\n  const fadeOutStatusMessage = () => {\n    setStatusFading(true);\n    setTimeout(() => {\n      setShowStatusMessage(false);\n      setStatusFading(false);\n    }, 500); // Match this to the CSS transition time\n  };\n\n  // Function to mark worksheet as completed and update backend\n  const markWorksheetAsCompleted = async () => {\n    if (completed) return;\n\n    log(\"Marking worksheet as completed\");\n    setCompleted(true);\n    setCompletionStatus(\"✓ Marking worksheet as completed...\");\n\n    try {\n      // Get current progress data\n      log(\"Fetching current progress data\");\n      const userProgress = await call_api(null, \"points\", \"GET\");\n\n      if (!userProgress) {\n        log(\"No user progress data returned\");\n        setCompletionStatus(\"❌ Error: Could not fetch user progress\");\n\n        // Fade out after showing error for a bit longer\n        setTimeout(() => fadeOutStatusMessage(), 30000);\n        return;\n      }\n\n      log(\"Progress data received, updating worksheet completion\");\n\n      // Create a deep clone of the userProgress\n      const updatedProgress = JSON.parse(JSON.stringify(userProgress));\n\n      // Ensure all needed objects exist\n      if (!updatedProgress.courses[courseKey]) {\n        updatedProgress.courses[courseKey] = { lessons: {} };\n      }\n\n      if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber] = {\n          activities: {},\n        };\n      }\n\n      if (\n        !updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n      ) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities =\n          {};\n      }\n\n      // Ensure worksheet activity exists\n      if (\n        !updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n          .worksheet\n      ) {\n        updatedProgress.courses[courseKey].lessons[\n          lessonNumber\n        ].activities.worksheet = {};\n      }\n\n      // Update worksheet progress\n      updatedProgress.courses[courseKey].lessons[\n        lessonNumber\n      ].activities.worksheet.completed = true;\n      updatedProgress.courses[courseKey].lessons[\n        lessonNumber\n      ].activities.worksheet.earned = WORKSHEET_POINTS;\n\n      // Update lesson points\n      const videoPoints =\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n          .video?.earned || 0;\n      updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints =\n        videoPoints + WORKSHEET_POINTS;\n\n      // Check if lesson is completed\n      const isVideoCompleted =\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n          .video?.completed || false;\n\n      // Only mark lesson as complete if both video and worksheet are complete\n      updatedProgress.courses[courseKey].lessons[lessonNumber].completed =\n        isVideoCompleted && true; // worksheet is now completed\n\n      // Recalculate course points\n      let coursePoints = 0;\n      Object.values(updatedProgress.courses[courseKey].lessons).forEach(\n        (lesson) => {\n          coursePoints += lesson.lessonPoints || 0;\n        }\n      );\n      updatedProgress.courses[courseKey].coursePoints = coursePoints;\n\n      // Check if course is completed\n      const allLessonsCompleted = Object.values(\n        updatedProgress.courses[courseKey].lessons\n      ).every((lesson) => lesson.completed);\n      updatedProgress.courses[courseKey].completed = allLessonsCompleted;\n\n      // Recalculate total points\n      let totalPoints = 0;\n      Object.values(updatedProgress.courses).forEach((course) => {\n        totalPoints += course.coursePoints || 0;\n      });\n      updatedProgress.totalPoints = totalPoints;\n\n      log(\"Sending updated progress to backend\");\n      setCompletionStatus(\"✓ Saving progress...\");\n\n      // Send to backend\n      const response = await call_api(updatedProgress, \"points\", \"POST\");\n\n      if (response) {\n        log(\"Points updated successfully\");\n        setCompletionStatus(\"✓ Worksheet completed! (5 points earned)\");\n\n        // Fade out the status message after 300 seconds\n        setTimeout(() => fadeOutStatusMessage(), 30000);\n      }\n    } catch (error) {\n      console.error(\"Error updating worksheet completion:\", error);\n      setCompletionStatus(\"❌ Error updating progress\");\n\n      // Fade out after showing error for a bit longer\n      setTimeout(() => fadeOutStatusMessage(), 30000);\n    }\n  };\n\n  const handleGoBack = () => {\n    log(\"Back button clicked\");\n\n    // Ensure worksheet is marked as completed before navigating back\n    if (!completed) {\n      // markWorksheetAsCompleted();\n    }\n\n    // Wait briefly to ensure the update has been sent\n    setTimeout(() => {\n      window.history.back();\n    }, 500);\n  };\n\n  const styles = {\n    container: {\n      minHeight: \"100vh\",\n      background: \"white\",\n      margin: \"0\",\n      padding: \"32px\",\n      fontFamily: \"Arial, sans-serif\",\n      position: \"relative\",\n    },\n    content: {\n      maxWidth: \"896px\",\n      margin: \"0 auto\",\n    },\n    logo: {\n      maxWidth: \"300px\",\n      marginBottom: \"30px\",\n      display: \"block\",\n      margin: \"0 auto 30px\",\n    },\n    title: {\n      color: \"#254E17\",\n      fontSize: \"48px\",\n      marginBottom: \"10px\",\n      fontFamily: \"Orbitron, sans-serif\",\n      textAlign: \"center\",\n    },\n    subtitle: {\n      color: \"#357717\",\n      fontSize: \"36px\",\n      marginBottom: \"30px\",\n      fontFamily: \"Orbitron, sans-serif\",\n      textAlign: \"center\",\n    },\n    instructions: {\n      marginBottom: \"30px\",\n      lineHeight: \"1.6\",\n    },\n    table: {\n      width: \"100%\",\n      borderCollapse: \"collapse\",\n      marginBottom: \"30px\",\n    },\n    th: {\n      border: \"1px solid #ddd\",\n      padding: \"12px\",\n      backgroundColor: \"#f5f5f5\",\n      textAlign: \"left\",\n    },\n    td: {\n      border: \"1px solid #ddd\",\n      padding: \"12px\",\n    },\n    circlesContainer: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: \"20px\",\n      justifyContent: \"center\",\n      marginTop: \"30px\",\n    },\n    backButton: {\n      position: \"absolute\",\n      top: \"20px\",\n      left: \"20px\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"50%\",\n      background: isHovering ? \"#3cb371\" : \"#357717\",\n      width: \"60px\",\n      height: \"60px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\",\n      transition: \"all 0.3s ease\",\n      fontSize: \"36px\",\n      fontWeight: \"bold\",\n      transform: isHovering ? \"scale(0.9)\" : \"scale(1)\",\n    },\n    instructions: {\n      marginBottom: \"30px\",\n      lineHeight: \"1.6\",\n      backgroundColor: \"#f9f9f9\",\n      padding: \"20px\",\n      borderRadius: \"10px\",\n    },\n    printButton: {\n      backgroundColor: \"#357717\",\n      color: \"white\",\n      padding: \"10px 20px\",\n      borderRadius: \"5px\",\n      border: \"none\",\n      cursor: \"pointer\",\n      display: \"block\",\n      margin: \"20px auto\",\n      fontSize: \"12px\",\n      transition: \"all 0.3s ease\",\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n    },\n    mainContent: {\n      backgroundColor: \"#f9f9f9\",\n      padding: \"20px\",\n      borderRadius: \"10px\",\n      marginBottom: \"20px\",\n    },\n    completionStatus: {\n      position: \"fixed\",\n      top: \"20px\",\n      right: \"20px\",\n      padding: \"10px 15px\",\n      backgroundColor: completed\n        ? \"rgba(53, 119, 23, 0.8)\"\n        : \"rgba(41, 128, 185, 0.8)\",\n      color: \"white\",\n      borderRadius: \"5px\",\n      fontWeight: \"bold\",\n      zIndex: 1000,\n      boxShadow: \"0 2px 10px rgba(0,0,0,0.2)\",\n      fontSize: \"16px\",\n      opacity: statusFading ? 0 : 1,\n      transform: statusFading ? \"translateY(-10px)\" : \"translateY(0)\",\n      transition: \"opacity 0.5s ease, transform 0.5s ease\",\n      display: showStatusMessage ? \"block\" : \"none\",\n    },\n  };\n\n  return (\n    <div style={styles.container}>\n      <button\n        onClick={handleGoBack}\n        style={styles.backButton}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n      >\n        &#8592;\n      </button>\n\n      {/* Completion status notification */}\n      <div style={styles.completionStatus}>{completionStatus}</div>\n\n      <div style={styles.content}>\n        <img src={stemzLearningLogo} alt=\"STEMZ Learning\" style={styles.logo} />\n        <h1 style={styles.title}>Fraction Game</h1>\n        <h2 style={styles.subtitle}>Statistics: Lesson 1</h2>\n\n        <div style={styles.instructions}>\n          <h3>Instructions:</h3>\n          <p>\n            If you are able, print the page with circles on it. If not, you can\n            draw it yourself.\n          </p>\n\n          <p>\n            <strong>Option 1: Draw your own circles</strong>\n          </p>\n          <ul>\n            <li>\n              Draw and trace 5 circles on paper. Color the circles in the colors\n              listed below.\n            </li>\n            <li>\n              Cut the circles out, you should have 5 circles colored red, blue,\n              purple, black, and green.\n            </li>\n            <li>\n              Cut the circles according to the color code below (ex. Cut the red\n              circle into 2, the blue circle into 3, ext.)\n            </li>\n          </ul>\n\n          <p>\n            <strong>Option 2: Use the printed version</strong>\n          </p>\n          <ul>\n            <li>\n              Color the circles based on the color code below (ex. Color the\n              circle split in 2, red; color the circle split in 3, blue; ext.)\n            </li>\n            <li>\n              Cut along the black lines. You should have 5 circles. One should\n              be cut into 2 pieces, one into 3 pieces, one into 4 pieces, one\n              into 6 pieces, and one into 8 pieces.\n            </li>\n          </ul>\n\n          <button onClick={handleDownload} style={styles.printButton}>\n            Download PDF Version\n          </button>\n        </div>\n\n        <div style={styles.mainContent}>\n          <h3>Color Code</h3>\n          <table style={styles.table}>\n            <thead>\n              <tr>\n                <th style={styles.th}>Color</th>\n                <th style={styles.th}>Cut into this many equal pieces</th>\n                <th style={styles.th}>Tips</th>\n              </tr>\n            </thead>\n            <tbody>\n              {colorCodes.map((item, index) => (\n                <tr key={index}>\n                  <td\n                    style={{\n                      ...styles.td,\n                      color:\n                        item.color === \"Black\"\n                          ? \"black\"\n                          : item.color.toLowerCase(),\n                    }}\n                  >\n                    <strong>{item.color}</strong>\n                  </td>\n                  <td style={styles.td}>Cut into {item.pieces} pieces</td>\n                  <td style={styles.td}>{item.tips}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <div style={styles.circlesContainer}>\n            <CircleDiagram slices={2} />\n            <CircleDiagram slices={3} />\n            <CircleDiagram slices={4} />\n            <CircleDiagram slices={6} />\n            <CircleDiagram slices={8} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","colorCodes","color","pieces","tips","handleDownload","open","CircleDiagram","_ref","slices","radius","getSlicePath","slice","total","startAngle","endAngle","startRad","Math","PI","endRad","cos","sin","_jsx","width","height","viewBox","children","Array","from","length","_","i","d","stroke","strokeWidth","fill","StatWorkSheet1","isHovering","setIsHovering","useState","completionTimer","setCompletionTimer","completed","setCompleted","completionStatus","setCompletionStatus","countdown","setCountdown","showStatusMessage","setShowStatusMessage","statusFading","setStatusFading","courseKey","useNavigate","lessonNumber","log","timestamp","Date","toLocaleTimeString","console","useEffect","timer","setTimeout","clearTimeout","markWorksheetAsCompleted","fadeOutStatusMessage","_updatedProgress$cour","_updatedProgress$cour2","userProgress","updatedProgress","parse","courses","lessons","activities","worksheet","earned","videoPoints","video","lessonPoints","isVideoCompleted","coursePoints","Object","values","forEach","lesson","allLessonsCompleted","every","totalPoints","course","styles","container","minHeight","background","margin","padding","fontFamily","position","content","maxWidth","logo","marginBottom","display","title","fontSize","textAlign","subtitle","instructions","lineHeight","table","borderCollapse","th","border","backgroundColor","td","circlesContainer","flexWrap","gap","justifyContent","marginTop","backButton","top","left","borderRadius","alignItems","cursor","transition","fontWeight","transform","printButton","boxShadow","mainContent","right","zIndex","opacity","_jsxs","style","onClick","handleGoBack","history","back","onMouseEnter","onMouseLeave","src","stemzLearningLogo","alt","map","item","index"],"sourceRoot":""}