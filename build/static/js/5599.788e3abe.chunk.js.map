{"version":3,"file":"static/js/5599.788e3abe.chunk.js","mappings":"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","sources":["api.js","components/Footer.js","components/HeroOther.js","components/Navbar.js","pages/main/OnlineClasses.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React from 'react';\nimport './Footer.css';\nimport {FaFacebook, FaLinkedin, FaTiktok, FaInstagram, FaTwitter} from 'react-icons/fa'\n\nconst Footer = () => {\n  return (\n    <div className='footer fixed-footer'>\n      <div className='footer-container'>\n        <div className='social'>\n          <a href=\"https://www.facebook.com/alice.gao.96558/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaFacebook size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.linkedin.com/company/stemz-learning/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaLinkedin size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.tiktok.com/@stemzlearning?_t=8edHU0jxuuUI&_r=1\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaTiktok size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.instagram.com/stemzlearning\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaInstagram size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.twitter.com/stemzlearning\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaTwitter size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react';\nimport './HeroOther.css'\n\nconst Hero = ({ overlayText }) => {\n  return (\n    <div className='hero-other'>\n        <div className=\"hero-overlay\">\n            <p className=\"overlay-text\">{overlayText}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default Hero\n","import React, { useState, useEffect } from 'react';\nimport './Navbar.css';\nimport {FaBars, FaTimes} from 'react-icons/fa';\nimport { Link, useNavigate } from 'react-router-dom';\nimport logo from '../assets/logo.png'\nimport axios from \"axios\";\n\nconst Navbar = () => {\n    const [check, setCheck] = useState(null);\n    const [click, setClick] = useState(false);\n    const [color, setColor] = useState(false);\n    const [activeDropdown, setActiveDropdown] = useState(null);\n    const navigate = useNavigate();\n  \n    const handleClick = () => setClick((prevState) => !prevState);\n  \n    const changeColor = () => {\n      if (window.scrollY >= 45) {\n        setColor(true);\n      } else {\n        setColor(false);\n      }\n    };\n  \n    window.addEventListener('scroll', changeColor);\n  \n    const scrollToTop = () => {\n      window.scrollTo(0, 0);\n      setClick(false); // Close mobile menu when clicking a link\n    };\n\n    const toggleDropdown = (index) => {\n      if (window.innerWidth <= 1100) {\n        setActiveDropdown(activeDropdown === index ? null : index);\n      }\n    };\n\n    const updateDashboard = () => {\n        window.location.href = '/dashboard';\n    };\n\n    const updateOnline = () => {\n        window.location.href = '/online-classes';\n        setClick(false); // Close mobile menu\n    };\n\n    const navigateToDashboard = (e) => {\n        e.preventDefault();\n        navigate('/dashboard');\n        setClick(false); // Close mobile menu\n    };\n    \n    const handleLogout = (e) => {\n      e.preventDefault();\n      // Clear the token from localStorage\n      localStorage.removeItem('token');\n      // Update authentication state\n      setCheck(false);\n      // Navigate to login page\n      navigate('/login');\n    };\n  \n    useEffect(() => {\n      // Check for token in localStorage first\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        // If token exists in localStorage, we consider user as logged in\n        setCheck(true);\n      } else {\n        // If no token in localStorage, check with the server\n        axios\n          .get('https://www.stemzlearning.org/dashboard', {\n            withCredentials: true,\n          })\n          .then((response) => {\n            if (response.data.success) {\n              setCheck(true);\n            } else {\n              setCheck(false);\n            }\n          })\n          .catch(() => {\n            setCheck(false);\n          });\n      }\n    }, []);\n  \n    if (check === null) {\n      return null; // Render nothing while fetching data\n    }\n  \n    return (\n        <div className={color ? 'header header-bg' : 'header'}>\n            <Link to='/'>\n                <img src={logo} alt=\"STEMz Learning\" className=\"logo\"/>\n            </Link>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li>\n                    <Link to='/' onClick={scrollToTop}>Home</Link>\n                </li>\n                <li>\n                    <Link to='/about-us' onClick={scrollToTop}>About Us</Link>\n                </li>\n                <li>\n                    <Link to='/online-classes' onClick={updateOnline}>Online Classes</Link>\n                </li>\n                <li className={activeDropdown === 0 ? 'active' : ''} onClick={() => toggleDropdown(0)}>\n                    <Link to='/self-paced-classes' onClick={(e) => window.innerWidth <= 1100 && e.preventDefault()}>\n                        Self-Paced Classes\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <Link to=\"/astronomy\" onClick={scrollToTop}>Astronomy</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/basicsofcoding\" onClick={scrollToTop}>Basics of Coding</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/biochemistry\" onClick={scrollToTop}>Biochemistry</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/chemistry\" onClick={scrollToTop}>Chemistry</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/circuits\" onClick={scrollToTop}>Circuits</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/environmentalscience\" onClick={scrollToTop}>Environmental Science</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/psychology\" onClick={scrollToTop}>Psychology</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/statistics\" onClick={scrollToTop}>Statistics</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/zoology\" onClick={scrollToTop}>Zoology</Link>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <Link to='/course-boxes' onClick={scrollToTop}>Course Boxes</Link>\n                </li>\n                <li>\n                    <Link to='https://substack.com/@STEMZLEARNING' onClick={scrollToTop}>News</Link>\n                </li>\n                <li className={activeDropdown === 1 ? 'active' : ''} onClick={() => toggleDropdown(1)}>\n                    <Link to='/get-involved' onClick={(e) => window.innerWidth <= 1100 && e.preventDefault()}>\n                        Get Involved\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <Link to=\"/volunteer\" onClick={scrollToTop}>Volunteers</Link>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <Link to='/contact' onClick={scrollToTop}>Contact</Link>\n                </li>\n                <li className=\"login-item\">\n                    {check ? (\n                        <Link to=\"/dashboard\" onClick={navigateToDashboard} className=\"login-link\">Dashboard</Link>\n                    ) : (\n                        <Link to=\"/login\" onClick={scrollToTop} className=\"login-link\">Log In</Link>\n                    )}\n                </li>\n            </ul>\n            <div className='hamburger' onClick={handleClick}>\n                {click ? (<FaTimes size={20} style={{color: 'black'}} />) : (<FaBars size={20} style={{color: 'black'}}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React, { useState, useEffect, useRef } from 'react';\nimport '../css/OnlineClasses.css';\nimport Navbar from '../../components/Navbar'\nimport HeroOther from '../../components/HeroOther'\nimport Footer from '../../components/Footer'\nimport CodingBasics1 from '../../assets/coding.jpg'\nimport CodingBasics2 from '../../assets/coding2.jpg'\nimport Biochemistry from '../../assets/biochem.PNG'\nimport Genetics from '../../assets/genetics.jpg'\nimport Microbiology from '../../assets/microbiology.png'\nimport DefaultCourseImg from '../../assets/defaultcourseimg.png'\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { call_api } from \"../../api\";\nimport axios from \"axios\";\n\nfunction OnlineClasses() {\n  const [Courses, setCourses] = useState([]);\n  const [StudentCourses, setStudentCourses] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [isLoading2, setLoading2] = useState(true);\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [dashboardData, setDashboardData] = useState(null);\n  const location = useLocation();\n  const [token, setToken] = useState(null);\n  const [registrationStatus, setRegistrationStatus] = useState({});\n  \n  // Create refs for each course section\n  const coding1Ref = useRef(null);\n  const coding2Ref = useRef(null);\n  const biochemistryRef = useRef(null);\n  const geneticsRef = useRef(null);\n  const microbiologyRef = useRef(null);\n\n  // Removed the hardcoded courseInfoMap\n\n  useEffect(() => {\n    // Check for token in localStorage\n    const authToken = localStorage.getItem('token');\n    if (authToken) {\n      setToken(authToken);\n    }\n\n    const fetchDashboardData = async () => {\n      try {\n        const response = await axios.get('https://www.stemzlearning.org/dashboard', {\n          withCredentials: true,\n        });\n        if (response.data.success) {\n          setUser(response.data.dashboardData.user);\n          setDashboardData(response.data.dashboardData);\n        }\n      } catch (error) {\n        console.log(\"user is not logged\")\n        // Handle error, e.g., redirect to login if token is invalid\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  // Fetch user's registered courses\n  useEffect(() => {\n    const fetchUserCourses = async () => {\n      if (!token) {\n        setLoading2(false);\n        return;\n      }\n      \n      try {\n        const response = await call_api(null, \"classrooms/user/getUserClassrooms\", \"GET\");\n        console.log(\"User's registered courses:\", response);\n        if (response && response.enrolled) {\n          const courseIds = response.enrolled.map(course => course._id).filter(id => id);\n          setStudentCourses(courseIds);\n        }\n        setLoading2(false);\n      } catch (error) {\n        console.error('Error fetching user courses:', error);\n        setLoading2(false);\n      }\n    };\n\n    fetchUserCourses();\n  }, [token]);\n\n  // Fetch all courses from the API\n  useEffect(() => {\n    const getAllCourses = async () => {\n      try {\n        const response = await call_api(null, \"classrooms/allIDs\", \"GET\");\n        if (response) {\n          console.log(\"Courses:\", response);\n          setCourses(response);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching courses:', error);\n        setLoading(false);\n      }\n    };\n\n    getAllCourses();\n  }, []);\n\n  // Scroll to the specific section if needed\n  useEffect(() => {\n    if (location.state && location.state.scrollToId) {\n      const scrollToId = location.state.scrollToId;\n      \n      setTimeout(() => {\n        const refMap = {\n          coding1: coding1Ref,\n          coding2: coding2Ref,\n          biochemistry: biochemistryRef,\n          genetics: geneticsRef,\n          microbiology: microbiologyRef\n        };\n        \n        if (refMap[scrollToId] && refMap[scrollToId].current) {\n          refMap[scrollToId].current.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }\n      }, 500);\n    }\n  }, [location.state, isLoading]);\n\n  // Function to register user for a course\n  const registerForCourse = async (courseId, e) => {\n    e.preventDefault();\n    \n    // Check if user is logged in\n    if (!token) {\n      navigate('/login', { state: { returnUrl: '/online-classes' } });\n      return;\n    }\n\n    // If already registered, don't try to register again\n    if (StudentCourses.includes(courseId)) {\n      setRegistrationStatus({\n        ...registrationStatus,\n        [courseId]: { status: \"already-registered\", message: \"You're already registered for this course\" }\n      });\n      return;\n    }\n\n    try {\n      setRegistrationStatus({\n        ...registrationStatus,\n        [courseId]: { status: \"loading\", message: \"Registering...\" }\n      });\n\n      // Make API call to enroll in the course\n      const response = await call_api(\n        null, \n        `classrooms/${courseId}/enroll`, \n        \"POST\"\n      );\n\n      if (response) {\n        console.log(\"Registration success:\", response);\n        \n        // Update local state\n        setStudentCourses(prev => [...prev, courseId]);\n        \n        setRegistrationStatus({\n          ...registrationStatus,\n          [courseId]: { status: \"success\", message: \"Successfully registered!\" }\n        });\n      }\n    } catch (error) {\n      console.error('Error registering for course:', error);\n      let errorMessage = \"Failed to register. Please try again.\";\n      \n      // Check if the error response contains a message\n      if (error.response && error.response.data && error.response.data.message) {\n        errorMessage = error.response.data.message;\n      }\n      \n      setRegistrationStatus({\n        ...registrationStatus,\n        [courseId]: { status: \"error\", message: errorMessage }\n      });\n    }\n  };\n\n  // Function to determine which image to use based on course name\n  const getCourseImage = (courseName) => {\n    // Convert course name to lowercase for case-insensitive matching\n    const name = courseName.toLowerCase();\n\n    if (name.includes('coding') && name.includes('1') || name.includes('basics of coding i')) {\n      return CodingBasics1;\n    } else if (name.includes('coding') && name.includes('2') || name.includes('basics of coding ii')) {\n      return CodingBasics2;\n    } else if (name.includes('biochem')) {\n      return Biochemistry;\n    } else if (name.includes('genetic')) {\n      return Genetics;\n    } else if (name.includes('micro') && name.includes('bio')) {\n      return Microbiology;\n    } else {\n      return DefaultCourseImg;\n    }\n  };\n\n  // Function to determine which CSS class to use based on course name\n  const getImageClass = (courseName) => {\n    const name = courseName.toLowerCase();\n    \n    if (name.includes('coding') && name.includes('1') || name.includes('basics of coding i')) {\n      return \"coding1-course-img\";\n    } else if (name.includes('coding') && name.includes('2') || name.includes('basics of coding ii')) {\n      return \"coding2-course-img\";\n    } else if (name.includes('biochem')) {\n      return \"biochem-course-img\";\n    } else if (name.includes('genetic')) {\n      return \"genetic-course-img\";\n    } else if (name.includes('micro') && name.includes('bio')) {\n      return \"microbio-course-img\";\n    } else {\n      return \"course-online-img\";\n    }\n  };\n\n  // Function to get course type key (kept for scrolling functionality)\n  const getCourseTypeKey = (courseName) => {\n    const name = courseName.toLowerCase();\n    \n    if (name.includes('coding') && name.includes('1') || name.includes('basics of coding i')) {\n      return \"coding1\";\n    } else if (name.includes('coding') && name.includes('2') || name.includes('basics of coding ii')) {\n      return \"coding2\";\n    } else if (name.includes('biochem')) {\n      return \"biochemistry\";\n    } else if (name.includes('genetic')) {\n      return \"genetics\";\n    } else if (name.includes('micro') && name.includes('bio')) {\n      return \"microbiology\";\n    } else {\n      return null;\n    }\n  };\n\n  // Get button text based on registration status\n  const getButtonText = (courseId) => {\n    if (StudentCourses.includes(courseId)) {\n      return \"You are registered!\";\n    }\n    \n    if (registrationStatus[courseId]) {\n      const status = registrationStatus[courseId];\n      if (status.status === \"loading\") return \"Registering...\";\n      if (status.status === \"success\") return \"Successfully Registered!\";\n      if (status.status === \"error\") return \"Registration Failed\";\n    }\n    \n    return \"Register\";\n  };\n\n  // Get button style based on registration status\n  const getButtonStyle = (courseId) => {\n    if (StudentCourses.includes(courseId)) {\n      return { backgroundColor: '#5D86C5' };\n    }\n    \n    if (registrationStatus[courseId]) {\n      const status = registrationStatus[courseId];\n      if (status.status === \"loading\") return { backgroundColor: '#888888' };\n      if (status.status === \"success\") return { backgroundColor: '#5D86C5' };\n      if (status.status === \"error\") return { backgroundColor: '#d32f2f' };\n    }\n    \n    return {};\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <HeroOther overlayText=\"Online Classes\"/>\n      <div className='course-online-main'>\n        <h3>Sign Up for Classes!</h3>\n      </div>\n      <div className='course-online-listing'>\n        {isLoading ? (\n          <div className=\"course-loading-message\">Loading courses...</div>\n        ) : (\n          Courses.map(course => {\n            const courseTypeKey = getCourseTypeKey(course.name);\n            \n            return (\n              <div \n                key={course._id} \n                className='course-online-card'\n                id={courseTypeKey || course._id}\n                ref={\n                  courseTypeKey === \"coding1\" ? coding1Ref :\n                  courseTypeKey === \"coding2\" ? coding2Ref :\n                  courseTypeKey === \"biochemistry\" ? biochemistryRef :\n                  courseTypeKey === \"genetics\" ? geneticsRef :\n                  courseTypeKey === \"microbiology\" ? microbiologyRef :\n                  null\n                }\n              >\n                <img \n                  src={getCourseImage(course.name)} \n                  alt={course.name} \n                  className={getImageClass(course.name)}\n                />\n                <div className=\"course-online-text\">\n                  <h1>{course.name}</h1>\n                  <h2>When: {course.schedule || \"Dates to be announced\"}</h2>\n                  <h2>Recommended Grade Level: {course.recommendedGradeLevel || \"All grades\"}</h2>\n                  <h2>{course.description}</h2>\n                  \n                  {registrationStatus[course._id] && registrationStatus[course._id].status === \"error\" && (\n                    <p className=\"course-error-message\">{registrationStatus[course._id].message}</p>\n                  )}\n                </div>\n                <div className=\"course-button-container\">\n                  <button \n                    className=\"course-register-button\" \n                    disabled={StudentCourses.includes(course._id) || registrationStatus[course._id]?.status === \"loading\"}\n                    style={getButtonStyle(course._id)}\n                    onClick={(e) => registerForCourse(course._id, e)}\n                  >\n                    {getButtonText(course._id)}\n                  </button>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n      <div style={{ paddingBottom: '230px' }} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default OnlineClasses;"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","Footer","_jsx","className","children","_jsxs","rel","FaFacebook","size","style","color","marginRight","FaLinkedin","FaTiktok","FaInstagram","FaTwitter","_ref","overlayText","Navbar","check","setCheck","useState","click","setClick","setColor","activeDropdown","setActiveDropdown","navigate","useNavigate","addEventListener","changeColor","scrollY","scrollToTop","scrollTo","toggleDropdown","index","innerWidth","useEffect","axios","get","withCredentials","success","catch","Link","to","src","logo","alt","onClick","updateOnline","e","preventDefault","handleClick","prevState","FaTimes","FaBars","Courses","setCourses","StudentCourses","setStudentCourses","isLoading","setLoading","isLoading2","setLoading2","user","setUser","dashboardData","setDashboardData","useLocation","setToken","registrationStatus","setRegistrationStatus","coding1Ref","useRef","coding2Ref","biochemistryRef","geneticsRef","microbiologyRef","authToken","console","log","fetchDashboardData","enrolled","courseIds","map","course","_id","filter","id","fetchUserCourses","getAllCourses","state","scrollToId","setTimeout","refMap","coding1","coding2","biochemistry","genetics","microbiology","current","scrollIntoView","behavior","block","getCourseImage","courseName","name","CodingBasics1","CodingBasics2","Biochemistry","Genetics","Microbiology","DefaultCourseImg","getImageClass","getButtonText","courseId","getButtonStyle","backgroundColor","HeroOther","_registrationStatus$c","courseTypeKey","getCourseTypeKey","ref","schedule","recommendedGradeLevel","description","disabled","prev","errorMessage","registerForCourse","paddingBottom"],"sourceRoot":""}