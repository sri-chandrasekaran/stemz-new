{"version":3,"file":"static/js/9078.8bbb2803.chunk.js","mappings":"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","sources":["api.js","components/Footer.js","components/Navbar.js","components/Dashbar.js","pages/main/Dashboard.js","../node_modules/jwt-decode/build/esm/index.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React from 'react';\nimport './Footer.css';\nimport {FaFacebook, FaLinkedin, FaTiktok, FaInstagram, FaTwitter} from 'react-icons/fa'\n\nconst Footer = () => {\n  return (\n    <div className='footer fixed-footer'>\n      <div className='footer-container'>\n        <div className='social'>\n          <a href=\"https://www.facebook.com/alice.gao.96558/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaFacebook size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.linkedin.com/company/stemz-learning/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaLinkedin size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.tiktok.com/@stemzlearning?_t=8edHU0jxuuUI&_r=1\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaTiktok size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.instagram.com/stemzlearning\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaInstagram size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.twitter.com/stemzlearning\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaTwitter size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react';\nimport './Navbar.css';\nimport {FaBars, FaTimes} from 'react-icons/fa';\nimport { Link, useNavigate } from 'react-router-dom';\nimport logo from '../assets/logo.png'\nimport axios from \"axios\";\n\nconst Navbar = () => {\n    const [check, setCheck] = useState(null);\n    const [click, setClick] = useState(false);\n    const [color, setColor] = useState(false);\n    const [activeDropdown, setActiveDropdown] = useState(null);\n    const navigate = useNavigate();\n  \n    const handleClick = () => setClick((prevState) => !prevState);\n  \n    const changeColor = () => {\n      if (window.scrollY >= 45) {\n        setColor(true);\n      } else {\n        setColor(false);\n      }\n    };\n  \n    window.addEventListener('scroll', changeColor);\n  \n    const scrollToTop = () => {\n      window.scrollTo(0, 0);\n      setClick(false); // Close mobile menu when clicking a link\n    };\n\n    const toggleDropdown = (index) => {\n      if (window.innerWidth <= 1100) {\n        setActiveDropdown(activeDropdown === index ? null : index);\n      }\n    };\n\n    const updateDashboard = () => {\n        window.location.href = '/dashboard';\n    };\n\n    const updateOnline = () => {\n        window.location.href = '/online-classes';\n        setClick(false); // Close mobile menu\n    };\n\n    const navigateToDashboard = (e) => {\n        e.preventDefault();\n        navigate('/dashboard');\n        setClick(false); // Close mobile menu\n    };\n    \n    const handleLogout = (e) => {\n      e.preventDefault();\n      // Clear the token from localStorage\n      localStorage.removeItem('token');\n      // Update authentication state\n      setCheck(false);\n      // Navigate to login page\n      navigate('/login');\n    };\n  \n    useEffect(() => {\n      // Check for token in localStorage first\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        // If token exists in localStorage, we consider user as logged in\n        setCheck(true);\n      } else {\n        // If no token in localStorage, check with the server\n        axios\n          .get('https://www.stemzlearning.org/dashboard', {\n            withCredentials: true,\n          })\n          .then((response) => {\n            if (response.data.success) {\n              setCheck(true);\n            } else {\n              setCheck(false);\n            }\n          })\n          .catch(() => {\n            setCheck(false);\n          });\n      }\n    }, []);\n  \n    if (check === null) {\n      return null; // Render nothing while fetching data\n    }\n  \n    return (\n        <div className={color ? 'header header-bg' : 'header'}>\n            <Link to='/'>\n                <img src={logo} alt=\"STEMz Learning\" className=\"logo\"/>\n            </Link>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li>\n                    <Link to='/' onClick={scrollToTop}>Home</Link>\n                </li>\n                <li>\n                    <Link to='/about-us' onClick={scrollToTop}>About Us</Link>\n                </li>\n                <li>\n                    <Link to='/online-classes' onClick={updateOnline}>Online Classes</Link>\n                </li>\n                <li className={activeDropdown === 0 ? 'active' : ''} onClick={() => toggleDropdown(0)}>\n                    <Link to='/self-paced-classes' onClick={(e) => window.innerWidth <= 1100 && e.preventDefault()}>\n                        Self-Paced Classes\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <Link to=\"/astronomy\" onClick={scrollToTop}>Astronomy</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/basicsofcoding\" onClick={scrollToTop}>Basics of Coding</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/biochemistry\" onClick={scrollToTop}>Biochemistry</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/chemistry\" onClick={scrollToTop}>Chemistry</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/circuits\" onClick={scrollToTop}>Circuits</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/environmentalscience\" onClick={scrollToTop}>Environmental Science</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/psychology\" onClick={scrollToTop}>Psychology</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/statistics\" onClick={scrollToTop}>Statistics</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/zoology\" onClick={scrollToTop}>Zoology</Link>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <Link to='/course-boxes' onClick={scrollToTop}>Course Boxes</Link>\n                </li>\n                <li>\n                    <Link to='https://substack.com/@STEMZLEARNING' onClick={scrollToTop}>News</Link>\n                </li>\n                <li className={activeDropdown === 1 ? 'active' : ''} onClick={() => toggleDropdown(1)}>\n                    <Link to='/get-involved' onClick={(e) => window.innerWidth <= 1100 && e.preventDefault()}>\n                        Get Involved\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <Link to=\"/volunteer\" onClick={scrollToTop}>Volunteers</Link>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <Link to='/contact' onClick={scrollToTop}>Contact</Link>\n                </li>\n                <li className=\"login-item\">\n                    {check ? (\n                        <Link to=\"/dashboard\" onClick={navigateToDashboard} className=\"login-link\">Dashboard</Link>\n                    ) : (\n                        <Link to=\"/login\" onClick={scrollToTop} className=\"login-link\">Log In</Link>\n                    )}\n                </li>\n            </ul>\n            <div className='hamburger' onClick={handleClick}>\n                {click ? (<FaTimes size={20} style={{color: 'black'}} />) : (<FaBars size={20} style={{color: 'black'}}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { call_api } from '../api';\nimport { jwtDecode } from 'jwt-decode';\nimport './Dashbar.css';\nimport defaultProfile from '../assets/defaultprofile.jpg';\n\nconst Dashbar = () => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  \n  // Token verification\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log(\"No token found, redirecting to login page\");\n        navigate('/login');\n        return;\n      }\n\n      try {\n        console.log(\"token is found\");\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        if (response && response.success) {\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          localStorage.removeItem('token');\n          navigate('/login');\n        }\n      } catch (error) {\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    };\n\n    verifyToken();\n  }, [navigate]);\n\n  // Fetch user data\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const decoded = jwtDecode(token);\n        const userId = decoded.id;\n        \n        const userResponse = await call_api(\n          null, \n          `users/id/${userId}`,\n          \"GET\"\n        );\n        if (userResponse) {\n          setUser(userResponse);\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, [isAuthenticated]);\n\n  const handleSignOut = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  if (isLoading) {\n    // return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"grid-side\">\n      <img \n        src={defaultProfile} \n        alt=\"Profile\"\n        style={{\n          width: '120px',\n          height: '120px',\n          borderRadius: '50%',\n          marginTop: '100px',\n          marginBottom: '10px',\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }}\n      />\n      <div className=\"info\">\n        <p>Name: {user?.name}</p>\n        <p>Email: {user?.email}</p>\n      </div>\n      <div>\n        <button className=\"bar-buttons\" onClick={handleSignOut}>\n          Sign Out\n        </button>\n        <br />\n        {/*<button className=\"bar-buttons\">Delete Account</button>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashbar;","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Dashbar from \"../../components/Dashbar\";\nimport Footer from \"../../components/Footer\";\nimport \"../css/Dashboard.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { call_api } from \"../../api\";\nimport { jwtDecode } from \"jwt-decode\";\n\n// Import all images\nimport Coding from \"../../assets/coding.jpg\";\nimport CodingBasics1 from \"../../assets/coding.jpg\";\nimport CodingBasics2 from \"../../assets/coding2.jpg\";\nimport Biochemistry from \"../../assets/biochem.PNG\";\nimport Genetics from \"../../assets/genetics.jpg\";\nimport Microbiology from \"../../assets/microbiology.png\";\nimport DefaultCourseImg from \"../../assets/defaultcourseimg.png\";\nimport AstronomyImage from \"../../assets/astronomy.PNG\";\nimport Chemistry from \"../../assets/chemistry.jpeg\";\nimport Zoology from \"../../assets/zoology.jpg\";\nimport ES from \"../../assets/environmentalscience.jpg\";\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [registeredCourses, setRegisteredCourses] = useState([]);\n  const [coursesLoaded, setCoursesLoaded] = useState(false);\n  // State to track which courses are being removed\n  const [removingCourses, setRemovingCourses] = useState([]);\n  // State for tooltip messages\n  const [tooltipMessages, setTooltipMessages] = useState({});\n  // New state for user progress/points\n  const [userProgress, setUserProgress] = useState(null);\n\n  // CSS for spinner animation\n  useEffect(() => {\n    const spinnerStyle = document.createElement('style');\n    spinnerStyle.textContent = `\n      @keyframes enrolled-spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n    `;\n    document.head.appendChild(spinnerStyle);\n    \n    return () => {\n      document.head.removeChild(spinnerStyle);\n    };\n  }, []);\n\n  // Token verification\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        console.log(\"No token found, redirecting to login page\");\n        navigate(\"/login\");\n        return;\n      }\n\n      try {\n        console.log(\"token is found\");\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        if (response && response.success) {\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n\n    verifyToken();\n  }, [navigate]);\n\n  // Dashboard data fetch\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    \n    const token = localStorage.getItem(\"token\");\n    const decoded = jwtDecode(token);\n    const userId = decoded.id;\n    \n    const fetchDashboardData = async () => {\n      try {\n        const userResponse = await call_api(null, `users/id/${userId}`, \"GET\");\n        if (userResponse) {\n          setUser(userResponse);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n\n    const fetchRegisteredCourses = async () => {\n      try {\n        const response = await call_api(\n          null,\n          \"classrooms/user/getUserClassrooms\",\n          \"GET\"\n        );\n        setRegisteredCourses(response.enrolled || []);\n      } catch (error) {\n        console.error(\"Error fetching registered courses:\", error);\n        setRegisteredCourses([]);\n      } finally {\n        setLoading(false);\n        setCoursesLoaded(true); // Mark courses as loaded regardless of result\n      }\n    };\n\n    // New function to fetch user progress/points\n    const fetchUserProgress = async () => {\n      try {\n        const response = await call_api(null, \"points\", \"GET\");\n        if (response) {\n          console.log(\"User progress data:\", response);\n          setUserProgress(response);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user progress:\", error);\n      }\n    };\n\n    fetchDashboardData();\n    fetchRegisteredCourses();\n    fetchUserProgress(); // Add this call\n  }, [isAuthenticated]);\n\n  // Function to determine which image to use based on course name\n  const getCourseImage = (courseName) => {\n    const name = courseName.toLowerCase();\n\n    const courseImageMap = {\n      'coding 1': CodingBasics1,\n      'basics of coding i': CodingBasics1,\n      'coding 2': CodingBasics2,\n      'basics of coding ii': CodingBasics2,\n      'biochem': Biochemistry,\n      'genetic': Genetics,\n      'micro bio': Microbiology,\n      'microbiology': Microbiology,\n      'astronomy': AstronomyImage,\n      'chemistry': Chemistry,\n      'zoology': Zoology,\n      'environmental': ES,\n      'environment': ES\n    };\n\n    for (const [key, image] of Object.entries(courseImageMap)) {\n      if (name.includes(key)) return image;\n    }\n\n    return DefaultCourseImg;\n  };\n\n  // Function to determine which CSS class to use based on course name\n  const getImageClass = (courseName) => {\n    const name = courseName.toLowerCase();\n    \n    const imageClassMap = {\n      'coding 1': \"enrolled-coding1-img\",\n      'basics of coding i': \"enrolled-coding1-img\",\n      'coding 2': \"enrolled-coding2-img\",\n      'basics of coding ii': \"enrolled-coding2-img\",\n      'biochem': \"enrolled-biochem-img\",\n      'genetic': \"enrolled-genetic-img\",\n      'micro bio': \"enrolled-microbio-img\",\n      'microbiology': \"enrolled-microbio-img\"\n    };\n\n    for (const [key, cssClass] of Object.entries(imageClassMap)) {\n      if (name.includes(key)) return cssClass;\n    }\n\n    return \"enrolled-course-image\";\n  };\n\n  // Remove course from dashboard\n  const removeCourse = async (courseId) => {\n    if (window.confirm(\"Are you sure you want to remove this course?\")) {\n      // Add this course to the removing state immediately\n      setRemovingCourses(prev => [...prev, courseId]);\n      \n      try {\n        await call_api(null, `classrooms/${courseId}/unenroll`, \"POST\");\n        // On success, remove the course from the list\n        setRegisteredCourses((prev) =>\n          prev.filter((course) => course._id !== courseId)\n        );\n      } catch (error) {\n        console.error(\"Error removing course:\", error);\n        // If there's an error, remove the courseId from the removing state\n        // so the user can try again\n        setRemovingCourses(prev => prev.filter(id => id !== courseId));\n      }\n    }\n  };\n\n  // Handle button click with \"Coming Soon\" message\n  const handleButtonClick = (courseId, buttonType) => {\n    const message = `${buttonType} coming soon!`;\n    alert(message);\n    \n    // You could also set a temporary tooltip message\n    setTooltipMessages(prev => ({\n      ...prev,\n      [courseId + buttonType]: message\n    }));\n    \n    // Clear the message after a while\n    setTimeout(() => {\n      setTooltipMessages(prev => {\n        const newMessages = {...prev};\n        delete newMessages[courseId + buttonType];\n        return newMessages;\n      });\n    }, 3000);\n  };\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div>\n        <Navbar />\n        <Dashbar />\n        <div className=\"hello\">\n          <h1 className=\"hello-text\">Hello {user?.name || ''}!</h1>\n        </div>\n        <div className=\"grid-container-wrapper\">\n          <h3 className=\"header-courses\">Courses Enrolled</h3>\n          <div className=\"enrolled-loading-message\">\n            <p>Loading your courses right now...</p>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <Dashbar />\n      <div className=\"hello\">\n        <h1 className=\"hello-text\">Hello {user?.name || ''}!</h1>\n        \n        {/* Points Dashboard - New Section */}\n        {userProgress && (\n          <div className=\"points-dashboard\">\n            <div className=\"points-icon\">🏆</div>\n            <div className=\"points-info\">\n              <span className=\"points-count\">{userProgress.totalPoints || 0}</span>\n              <span className=\"points-label\">Total Learning Points</span>\n            </div>\n            <Link to=\"/self-paced-classes\" className=\"points-button\">\n              View All Courses\n            </Link>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"grid-container-wrapper\">\n        <h3 className=\"header-courses\">Courses Enrolled</h3>\n  \n        {!coursesLoaded ? (\n          // Still loading courses after authentication\n          <div className=\"enrolled-loading-message\">\n            <p>Loading your classes...</p>\n          </div>\n        ) : registeredCourses.length === 0 ? (\n          // No courses found after loading completed\n          <div className=\"enrolled-empty-state\">\n            <p className=\"enrolled-empty-message\">\n              You are not registered for any classes!\n            </p>\n            <Link to=\"../online-classes\">\n              <button className=\"enrolled-explore-btn\">\n                Click here to explore more classes\n              </button>\n            </Link>\n          </div>\n        ) : (\n          <div className=\"enrolled-courses-grid\">\n            {registeredCourses.map((course) => {\n              return (\n                <div \n                  key={course._id} \n                  className=\"enrolled-course-card\"\n                >\n                  {removingCourses.includes(course._id) ? (\n                    <div className=\"enrolled-loading-spinner\"></div>\n                  ) : (\n                    <button\n                      onClick={() => removeCourse(course._id)}\n                      className=\"enrolled-delete-btn\"\n                    >\n                      ❌\n                    </button>\n                  )}\n                  <img \n                    src={getCourseImage(course.name)} \n                    alt={course.name} \n                    className={getImageClass(course.name)}\n                  />\n                  <div className=\"enrolled-course-content\">\n                    <h1>{course.name}</h1>\n                    <h2>When: {course.schedule || \"Dates to be announced\"}</h2>\n                    <h2>Recommended Grade Level: {course.recommendedGradeLevel || \"All grades\"}</h2>\n                    <h2>{course.description}</h2>\n                  </div>\n                  <div className=\"enrolled-button-container\">\n                    <button \n                      className=\"enrolled-zoom-btn\"\n                      onClick={() => handleButtonClick(course._id, 'Zoom')}\n                    >\n                      Zoom\n                      <span className=\"enrolled-tooltip\"> Zoom coming soon!</span>\n                    </button>\n                    <button \n                      className=\"enrolled-worksheet-btn\"\n                      onClick={() => handleButtonClick(course._id, 'Worksheet')}\n                    >\n                      Worksheet\n                      <span className=\"enrolled-tooltip\">Worksheet coming soon!</span>\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n  \n        <h3 className=\"header-recommended\">Recommended Courses</h3>\n        <div className=\"recommended-container\">\n          <div className=\"recommended-row\">\n            {[\n              {\n                id: 1,\n                name: \"Astronomy\",\n                description:\n                  \"In this course we will learn about galaxies, the universe, constellations and much more!\",\n                image: AstronomyImage,\n                link: \"/astronomy\",\n              },\n              {\n                id: 2,\n                name: \"Basics of coding\",\n                description:\n                  \"In this course we will learn about movement, variables, conditional statements and many more, using Scratch. No prior experience is needed!\",\n                image: Coding,\n                link: \"/basicsofcoding\",\n              },\n              {\n                id: 3,\n                name: \"Chemistry\",\n                description:\n                  \"In this course, your child will learn about matter, energy, and chemical reactions. The course culminates in a final project that serves as a launching pad to inspire your child to learn more! Parent supervision needed.\",\n                image: Chemistry,\n                link: \"/chemistry\",\n              },\n              {\n                id: 4,\n                name: \"Zoology\",\n                description:\n                  \"In this course, we will learn about biodiversity, the cycles of the earth, pollution, recycling, and more!\",\n                image: Zoology,\n                link: \"/zoology\",\n              },\n              {\n                id: 5,\n                name: \"Environmental Science\",\n                description:\n                  \"In this course we will learn about the field of zoology, some topics include biodiversity, taxonomy, and anatomy.\",\n                image: ES,\n                link: \"/environmentalscience\",\n              },\n            ].map((course) => (\n              <div key={course.id} className=\"course-card\">\n                <img\n                  src={course.image}\n                  alt={course.name}\n                  className=\"course-card-image\"\n                  onClick={() => navigate(course.link)}\n                  style={{ cursor: \"pointer\" }}\n                />\n                <div className=\"course-card-content\">\n                  <h3 className=\"course-card-title\">{course.name}</h3>\n                  <p className=\"course-card-description\">{course.description}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Dashboard;","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","Footer","_jsx","className","children","_jsxs","rel","FaFacebook","size","style","color","marginRight","FaLinkedin","FaTiktok","FaInstagram","FaTwitter","Navbar","check","setCheck","useState","click","setClick","setColor","activeDropdown","setActiveDropdown","navigate","useNavigate","addEventListener","changeColor","scrollY","scrollToTop","scrollTo","toggleDropdown","index","innerWidth","useEffect","axios","get","withCredentials","success","catch","Link","to","src","logo","alt","onClick","updateOnline","e","preventDefault","handleClick","prevState","FaTimes","FaBars","Dashbar","user","setUser","isLoading","setLoading","isAuthenticated","setIsAuthenticated","console","log","verifyToken","userId","jwtDecode","id","userResponse","fetchUserData","width","height","borderRadius","marginTop","marginBottom","display","marginLeft","name","email","handleSignOut","Dashboard","registeredCourses","setRegisteredCourses","coursesLoaded","setCoursesLoaded","removingCourses","setRemovingCourses","tooltipMessages","setTooltipMessages","userProgress","setUserProgress","spinnerStyle","document","createElement","textContent","head","appendChild","removeChild","fetchDashboardData","enrolled","fetchRegisteredCourses","fetchUserProgress","getCourseImage","courseName","courseImageMap","CodingBasics1","CodingBasics2","Biochemistry","Genetics","Microbiology","AstronomyImage","Chemistry","Zoology","ES","key","image","Object","entries","DefaultCourseImg","getImageClass","imageClassMap","cssClass","handleButtonClick","courseId","buttonType","alert","prev","setTimeout","newMessages","totalPoints","length","map","course","_id","confirm","filter","removeCourse","schedule","recommendedGradeLevel","description","link","Coding","cursor","InvalidTokenError","base64UrlDecode","str","output","replace","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","options","pos","header","part","split","decoded","parse","prototype"],"sourceRoot":""}