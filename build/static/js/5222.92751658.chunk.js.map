{"version":3,"file":"static/js/5222.92751658.chunk.js","mappings":"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","sources":["api.js","components/LoadingScreen.js","components/StatusMessage.js","components/BackButton.js","utils/updateProgress.js","pages/environmental_science/ESWorksheet1.js","hooks/useWorksheetProgress.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React from \"react\";\n\nexport const LoadingScreen = () => (\n  <div\n    style={{\n      minHeight: \"100vh\",\n      background: \"white\",\n      margin: 0,\n      padding: \"32px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontFamily: \"Arial, sans-serif\",\n    }}\n  >\n    <div style={{ textAlign: \"center\" }}>\n      <div\n        style={{\n          border: \"4px solid #f3f3f3\",\n          borderTop: \"4px solid #357717\",\n          borderRadius: \"50%\",\n          width: \"50px\",\n          height: \"50px\",\n          animation: \"spin 2s linear infinite\",\n          margin: \"0 auto 20px\",\n        }}\n      ></div>\n      <p>Loading worksheet content...</p>\n      <style>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nexport const StatusMessage = ({ message }) => {\n  if (!message) return null;\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: \"150px\",\n        right: \"20px\",\n        padding: \"10px 15px\",\n        backgroundColor: message.includes(\"Error\")\n          ? \"rgba(231, 76, 60, 0.8)\"\n          : \"#357717\",\n        color: \"white\",\n        borderRadius: \"5px\",\n        fontWeight: \"bold\",\n        zIndex: 1000,\n        boxShadow: \"0 2px 10px rgba(0,0,0,0.2)\",\n        animation: \"fadeIn 0.3s ease-out\",\n        fontSize: \"16px\",\n      }}\n    >\n      {message}\n      <style>{`\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport const BackButton = () => {\n  const [isHovering, setIsHovering] = useState(false);\n\n  return (\n    <button\n      onClick={() => window.history.back()}\n      style={{\n        position: \"absolute\",\n        top: \"20px\",\n        left: \"20px\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"50%\",\n        background: isHovering ? \"#3cb371\" : \"#357717\",\n        width: \"60px\",\n        height: \"60px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        cursor: \"pointer\",\n        transition: \"all 0.3s ease\",\n        fontSize: \"36px\",\n        fontWeight: \"bold\",\n        transform: isHovering ? \"scale(0.9)\" : \"scale(1)\",\n      }}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      &#8592;\n    </button>\n  );\n};\n","import { call_api } from \"../api\";\n\nexport const updateProgress = async (\n  userProgress,\n  courseKey,\n  lessonNumber,\n  earnedPoints,\n  worksheetTitle,\n  showStatus\n) => {\n  const updatedProgress = { ...userProgress };\n\n  // Ensure the path exists\n  if (!updatedProgress.courses) updatedProgress.courses = {};\n  if (!updatedProgress.courses[courseKey]) {\n    updatedProgress.courses[courseKey] = {\n      lessons: {},\n      title: courseKey.charAt(0).toUpperCase() + courseKey.slice(1),\n    };\n  }\n  if (!updatedProgress.courses[courseKey].lessons) {\n    updatedProgress.courses[courseKey].lessons = {};\n  }\n  if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n    updatedProgress.courses[courseKey].lessons[lessonNumber] = {\n      activities: {},\n      title: worksheetTitle,\n    };\n  }\n  if (!updatedProgress.courses[courseKey].lessons[lessonNumber].activities) {\n    updatedProgress.courses[courseKey].lessons[lessonNumber].activities = {};\n  }\n\n  // Set worksheet data\n  updatedProgress.courses[courseKey].lessons[\n    lessonNumber\n  ].activities.worksheet = {\n    completed: true,\n    earned: earnedPoints,\n    points: 5, // Total possible points is 5\n    type: \"worksheet\",\n    title: worksheetTitle,\n  };\n\n  // Update lesson points\n  updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints =\n    earnedPoints;\n\n  // Mark lesson as completed if video is also completed\n  if (\n    updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video\n      ?.completed\n  ) {\n    updatedProgress.courses[courseKey].lessons[lessonNumber].completed = true;\n  }\n\n  // Update course points\n  let coursePoints = 0;\n  Object.values(updatedProgress.courses[courseKey].lessons).forEach(\n    (lesson) => {\n      coursePoints += lesson.lessonPoints || 0;\n    }\n  );\n  updatedProgress.courses[courseKey].coursePoints = coursePoints;\n\n  // Update total points\n  let totalPoints = 0;\n  Object.values(updatedProgress.courses).forEach((course) => {\n    totalPoints += course.coursePoints || 0;\n  });\n  updatedProgress.totalPoints = totalPoints;\n\n  try {\n    const response = await call_api(updatedProgress, \"points\", \"POST\");\n    if (response) {\n      showStatus(\n        `✓ Progress saved! You've earned ${earnedPoints} points!`,\n        3000\n      );\n      return updatedProgress;\n    }\n  } catch (error) {\n    console.error(\"Update error:\", error);\n    showStatus(\"❌ Error saving progress\", 3000);\n    return null;\n  }\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport stemzLearningLogo from \"../../assets/logo.png\";\nimport { useWorksheetProgress } from \"../../hooks/useWorksheetProgress\";\nimport { LoadingScreen } from \"../../components/LoadingScreen\";\nimport { StatusMessage } from \"../../components/StatusMessage\";\nimport { BackButton } from \"../../components/BackButton\";\nimport { updateProgress } from \"../../utils/updateProgress\";\n\n// Original Worksheet\n// https://docs.google.com/document/d/e/2PACX-1vRUirVOL8YLkxol0nTrImCblQ0sB-Xu2LbLwvxLluYWSEPicxO7NpKWZ8avM_bjvTNsYJUGGffU_w8m/pub\nconst scavengerItems = [\n  { id: \"flower\", name: \"Flower\", image: \"🌻🌷\" },\n  { id: \"squirrel\", name: \"Squirrel\", image: \"🐿️🐿️\" },\n  { id: \"clover\", name: \"Clover\", image: \"☘️🍀\" },\n  { id: \"bird\", name: \"Bird\", image: \"🐦‍⬛🐦\" },\n  { id: \"pinecone\", name: \"Pinecone\", image: \"🌲🌰\" },\n  { id: \"bee\", name: \"Bee\", image: \"🐝🐝\" },\n  { id: \"tree\", name: \"Tree\", image: \"🌳🌴\" },\n  { id: \"rock\", name: \"Rock\", image: \"🪨🪨\" },\n  { id: \"grass\", name: \"Grass\", image: \"🌱🌿\" },\n  { id: \"water\", name: \"Water\", image: \"💧🌧️\" },\n  { id: \"nest\", name: \"Nest\", image: \"🪹🪺\" },\n  { id: \"ant\", name: \"Ant\", image: \"🐜🐜\" },\n];\n\nconst reflectionQuestions = [\n  \"What item was the most difficult to find?\",\n  \"Which item was the easiest to find?\",\n  \"How many of these objects have you seen before?\",\n  \"While doing the scavenger hunt, how many different animals did you find?\",\n];\n\nexport default function EsWorkSheet1() {\n  // State variables\n  const [foundItems, setFoundItems] = useState({});\n  const [reflectionAnswers, setReflectionAnswers] = useState({});\n  const [isHovering, setIsHovering] = useState(false);\n\n  // Use the custom hook for progress tracking\n  const {\n    userProgress,\n    setUserProgress,\n    loading,\n    worksheetCompleted,\n    setWorksheetCompleted,\n    pointsEarned,\n    setPointsEarned,\n    statusMessage,\n    showStatus,\n  } = useWorksheetProgress(\"environmentalScience\", \"lesson1\");\n\n  const handleCheckItem = (itemId) => {\n    setFoundItems((prev) => ({\n      ...prev,\n      [itemId]: !prev[itemId],\n    }));\n  };\n\n  const handleReflectionAnswer = (questionIndex, answer) => {\n    setReflectionAnswers((prev) => ({\n      ...prev,\n      [questionIndex]: answer,\n    }));\n  };\n\n  const handleDownload = () => {\n    window.open(\n      \"https://docs.google.com/document/d/e/2PACX-1vRUirVOL8YLkxol0nTrImCblQ0sB-Xu2LbLwvxLluYWSEPicxO7NpKWZ8avM_bjvTNsYJUGGffU_w8m/pub\",\n      \"_blank\"\n    );\n  };\n\n  // Mark worksheet as completed\n  const handleComplete = async () => {\n    // Always award full points (5) for this activity since it's self-reported\n    const earnedPoints = 5;\n\n    // Mark as completed\n    setWorksheetCompleted(true);\n    setPointsEarned(earnedPoints);\n\n    // Update progress using the utility function\n    const updatedProgress = await updateProgress(\n      userProgress,\n      \"environmentalScience\",\n      \"lesson1\",\n      earnedPoints,\n      \"Nature Scavenger Hunt\",\n      showStatus\n    );\n\n    if (updatedProgress) {\n      setUserProgress(updatedProgress);\n    }\n  };\n\n  // Loading screen\n  if (loading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        background: \"white\",\n        margin: \"0\",\n        padding: \"32px\",\n        fontFamily: \"Arial, sans-serif\",\n        position: \"relative\",\n      }}\n    >\n      <StatusMessage message={statusMessage} />\n      <BackButton />\n\n      <div style={{ maxWidth: \"896px\", margin: \"0 auto\" }}>\n        {/* Header */}\n        <img\n          src={stemzLearningLogo}\n          alt=\"STEMZ Learning\"\n          style={{\n            maxWidth: \"300px\",\n            display: \"block\",\n            margin: \"0 auto 30px\",\n          }}\n        />\n        <h1\n          style={{\n            color: \"#254E17\",\n            fontSize: \"48px\",\n            marginBottom: \"10px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Nature Scavenger Hunt\n        </h1>\n        <h2\n          style={{\n            color: \"#357717\",\n            fontSize: \"36px\",\n            marginBottom: \"30px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Environmental Science: Lesson 1\n        </h2>\n\n        {/* Progress status */}\n        <div\n          style={{\n            marginBottom: \"20px\",\n            padding: \"10px 15px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#f0f0f0\",\n            textAlign: \"center\",\n            borderLeft: worksheetCompleted\n              ? \"4px solid #3cb371\"\n              : \"4px solid #ccc\",\n          }}\n        >\n          <span\n            style={{\n              fontWeight: \"bold\",\n              marginRight: \"15px\",\n              color: \"#333333\",\n            }}\n          >\n            Worksheet:\n          </span>\n          <span\n            style={{\n              color: worksheetCompleted ? \"#3cb371\" : \"#666666\",\n              fontWeight: worksheetCompleted ? \"bold\" : \"normal\",\n            }}\n          >\n            {worksheetCompleted ? \"Completed\" : \"Not Completed\"}\n          </span>\n          <span\n            style={{\n              marginLeft: \"15px\",\n              color: \"#555555\",\n            }}\n          >\n            ({pointsEarned} {pointsEarned === 1 ? \"point\" : \"points\"})\n          </span>\n        </div>\n\n        {/* Instructions */}\n        <div\n          style={{\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n            padding: \"20px\",\n            marginBottom: \"30px\",\n          }}\n        >\n          <h3>Instructions:</h3>\n          <p>\n            <strong>Option 1: Fill out the online worksheet</strong>\n          </p>\n          <ul>\n            <li>Find each item on the list provided.</li>\n            <li>Check off each item on the worksheet once you find them.</li>\n            <li>Answer the reflection questions after completing your hunt.</li>\n            <li>\n              Click \"I've completed this worksheet\" when you're done to earn\n              points.\n            </li>\n          </ul>\n\n          <p>\n            <strong>\n              Option 2: Prefer a paper copy? Download the printable version\n              below\n            </strong>\n          </p>\n\n          <button\n            onClick={handleDownload}\n            style={{\n              backgroundColor: \"#357717\",\n              color: \"white\",\n              padding: \"10px 20px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"block\",\n              margin: \"20px auto\",\n              fontSize: \"14px\",\n              transition: \"all 0.3s ease\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n            }}\n          >\n            Download PDF Version\n          </button>\n        </div>\n\n        {/* Scavenger Hunt Grid */}\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(4, 1fr)\",\n            gap: \"20px\",\n            marginTop: \"20px\",\n          }}\n        >\n          {scavengerItems.map((item) => (\n            <div\n              key={item.id}\n              style={{\n                border: \"1px solid #ddd\",\n                borderRadius: \"8px\",\n                padding: \"15px\",\n                textAlign: \"center\",\n                backgroundColor: \"#ffffff\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n              }}\n            >\n              <div style={{ fontSize: \"40px\", marginBottom: \"10px\" }}>\n                {item.image}\n              </div>\n              <div>{item.name}</div>\n              <input\n                type=\"checkbox\"\n                checked={foundItems[item.id] || false}\n                onChange={() => handleCheckItem(item.id)}\n                style={{ width: \"20px\", height: \"20px\", margin: \"10px auto 0\" }}\n              />\n            </div>\n          ))}\n        </div>\n\n        {/* Reflection Section */}\n        <div\n          style={{\n            marginTop: \"40px\",\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            padding: \"20px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n          }}\n        >\n          <h3>Reflection:</h3>\n          {reflectionQuestions.map((question, index) => (\n            <div key={index} style={{ marginBottom: \"20px\" }}>\n              <label>\n                {index + 1}. {question}\n              </label>\n              <input\n                type=\"text\"\n                value={reflectionAnswers[index] || \"\"}\n                onChange={(e) => handleReflectionAnswer(index, e.target.value)}\n                style={{\n                  width: \"100%\",\n                  padding: \"8px\",\n                  marginTop: \"8px\",\n                  borderRadius: \"4px\",\n                  border: \"1px solid #ddd\",\n                }}\n              />\n            </div>\n          ))}\n        </div>\n\n        {/* Complete Worksheet Button */}\n        <button\n          onClick={handleComplete}\n          disabled={worksheetCompleted}\n          style={{\n            backgroundColor: worksheetCompleted ? \"#cccccc\" : \"#3cb371\",\n            color: \"white\",\n            padding: \"15px 30px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            cursor: worksheetCompleted ? \"default\" : \"pointer\",\n            display: \"block\",\n            margin: \"40px auto 20px\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\",\n            transition: \"all 0.3s ease\",\n            boxShadow: \"0 4px 8px rgba(0,0,0,0.15)\",\n          }}\n        >\n          {worksheetCompleted\n            ? \"Worksheet Completed ✓\"\n            : \"I've completed this worksheet\"}\n        </button>\n\n        {worksheetCompleted && (\n          <p\n            style={{\n              textAlign: \"center\",\n              color: \"#3cb371\",\n              marginTop: \"10px\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\",\n            }}\n          >\n            Great job completing this activity! You've earned all 5 points.\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { call_api } from \"../api\";\n\nexport function useWorksheetProgress(courseKey, lessonNumber) {\n  const navigate = useNavigate();\n  const [userProgress, setUserProgress] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [worksheetCompleted, setWorksheetCompleted] = useState(false);\n  const [pointsEarned, setPointsEarned] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const statusTimeoutRef = useRef(null);\n\n  const showStatus = (message, duration = 3000) => {\n    setStatusMessage(message);\n    if (statusTimeoutRef.current) clearTimeout(statusTimeoutRef.current);\n    statusTimeoutRef.current = setTimeout(() => setStatusMessage(\"\"), duration);\n  };\n\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      try {\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        if (response && response.success) {\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Token verification error:\", error);\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    const fetchUserProgress = async () => {\n      try {\n        const response = await call_api(null, \"points\", \"GET\");\n        if (response) {\n          setUserProgress(response);\n          if (response.courses && response.courses[courseKey]) {\n            const lesson = response.courses[courseKey].lessons[lessonNumber];\n            if (lesson?.activities?.worksheet) {\n              setWorksheetCompleted(\n                lesson.activities.worksheet.completed || false\n              );\n              setPointsEarned(lesson.activities.worksheet.earned || 0);\n            }\n          }\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error fetching course progress:\", err);\n        setLoading(false);\n      }\n    };\n    fetchUserProgress();\n  }, [isAuthenticated, courseKey, lessonNumber]);\n\n  return {\n    userProgress,\n    setUserProgress,\n    loading,\n    worksheetCompleted,\n    setWorksheetCompleted,\n    pointsEarned,\n    setPointsEarned,\n    statusMessage,\n    showStatus,\n  };\n}\n"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","LoadingScreen","_jsx","style","minHeight","background","margin","padding","display","justifyContent","alignItems","fontFamily","children","_jsxs","textAlign","border","borderTop","borderRadius","width","height","animation","StatusMessage","_ref","position","top","right","backgroundColor","color","fontWeight","zIndex","boxShadow","fontSize","BackButton","isHovering","setIsHovering","useState","onClick","history","back","left","cursor","transition","transform","onMouseEnter","onMouseLeave","updateProgress","userProgress","courseKey","lessonNumber","earnedPoints","worksheetTitle","showStatus","_updatedProgress$cour","updatedProgress","courses","lessons","title","charAt","toUpperCase","slice","activities","worksheet","completed","earned","points","type","lessonPoints","video","coursePoints","Object","values","forEach","lesson","totalPoints","course","console","scavengerItems","id","name","image","reflectionQuestions","EsWorkSheet1","foundItems","setFoundItems","reflectionAnswers","setReflectionAnswers","setUserProgress","loading","worksheetCompleted","setWorksheetCompleted","pointsEarned","setPointsEarned","statusMessage","navigate","useNavigate","setLoading","isAuthenticated","setIsAuthenticated","setStatusMessage","statusTimeoutRef","useRef","useEffect","success","verifyToken","_lesson$activities","err","fetchUserProgress","duration","arguments","length","undefined","current","clearTimeout","setTimeout","useWorksheetProgress","maxWidth","src","stemzLearningLogo","alt","marginBottom","borderLeft","marginRight","marginLeft","handleDownload","open","gridTemplateColumns","gap","marginTop","map","item","checked","onChange","handleCheckItem","itemId","prev","question","index","value","e","handleReflectionAnswer","questionIndex","answer","disabled"],"sourceRoot":""}