{"version":3,"file":"static/js/958.d8303ef3.chunk.js","mappings":"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","sources":["api.js","pages/statistics/StatWorksheet2.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React, { useState, useRef, useEffect } from \"react\";\nimport stemzLearningLogo from \"../../assets/logo.png\";\nimport fractionMenu from \"../../assets/fractionmenu.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { call_api } from \"../../api\";\n\nconst menuItems = {\n  salads: [\n    { name: \"Strawberry Blueberry Salad\", price: 9.0 },\n    { name: \"Banana Mandarin Salad\", price: 11.0 },\n    { name: \"Arugula Mandarin Salad\", price: 15.0 },\n  ],\n  mainMeals: [\n    { name: \"Pizza\", price: 18.0 },\n    { name: \"BLT Sandwich\", price: 21.0 },\n    { name: \"Sushi\", price: 24.0 },\n  ],\n  desserts: [\n    { name: \"Chocolate Bar\", price: 6.0 },\n    { name: \"Ice Cream Scoop\", price: 10.0 },\n    { name: \"Dozen Doughnuts\", price: 17.0 },\n  ],\n};\n\nconst discounts = {\n  salads: 30,\n  mainMeals: 20,\n  desserts: 45,\n};\n\nconst questions = [\n  {\n    id: 1,\n    text: \"What is the original price of Sushi?\",\n    correctAnswer: \"24.00\",\n    answerPrefix: \"$\",\n    answerSuffix: \"\",\n  },\n  {\n    id: 2,\n    text: \"How much does a Banana Mandarin Salad cost after the 30% discount?\",\n    correctAnswer: \"7.70\",\n    answerPrefix: \"$\",\n    answerSuffix: \"\",\n  },\n  {\n    id: 3,\n    text: \"If you buy one Ice Cream Scoop and one Pizza, what is your total cost after discounts?\",\n    correctAnswer: \"19.90\",\n    answerPrefix: \"$\",\n    answerSuffix: \"\",\n  },\n];\n\nexport default function StatWorkSheet3() {\n  // Navigation\n  const navigate = useNavigate();\n\n  // State variables\n  const [selectedItems, setSelectedItems] = useState({\n    salad: \"\",\n    mainMeal: \"\",\n    dessert: \"\",\n  });\n  const [isHovering, setIsHovering] = useState(false);\n  const [total, setTotal] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n\n  // Progress tracking states\n  const [userProgress, setUserProgress] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [worksheetCompleted, setWorksheetCompleted] = useState(false);\n  const [pointsEarned, setPointsEarned] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  // Constants for progress tracking\n  const lessonNumber = \"lesson3\";\n  const courseKey = \"statistics\";\n\n  // Refs\n  const statusTimeoutRef = useRef(null);\n\n  // Show status message with auto-fade\n  const showStatus = (message, duration = 3000) => {\n    setStatusMessage(message);\n    if (statusTimeoutRef.current) clearTimeout(statusTimeoutRef.current);\n    statusTimeoutRef.current = setTimeout(() => setStatusMessage(\"\"), duration);\n  };\n\n  // Token verification\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      try {\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        if (response && response.success) {\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Token verification error:\", error);\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n\n  // Fetch user progress data\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    const fetchUserProgress = async () => {\n      try {\n        const response = await call_api(null, \"points\", \"GET\");\n        if (response) {\n          setUserProgress(response);\n\n          // Check if there's course data available\n          if (response.courses && response.courses[courseKey]) {\n            const lesson = response.courses[courseKey].lessons[lessonNumber];\n\n            if (lesson && lesson.activities && lesson.activities.worksheet) {\n              const savedCompleted =\n                lesson.activities.worksheet.completed || false;\n              const savedPoints = lesson.activities.worksheet.earned || 0;\n\n              setWorksheetCompleted(savedCompleted);\n              setPointsEarned(savedPoints);\n            }\n          }\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error fetching course progress:\", err);\n        setLoading(false);\n      }\n    };\n    fetchUserProgress();\n  }, [isAuthenticated, courseKey, lessonNumber]);\n\n  const calculateTotal = (selections) => {\n    let sum = 0;\n\n    if (selections.salad) {\n      const saladPrice = menuItems.salads.find(\n        (item) => item.name === selections.salad\n      ).price;\n      sum += saladPrice * (1 - discounts.salads / 100);\n    }\n\n    if (selections.mainMeal) {\n      const mainPrice = menuItems.mainMeals.find(\n        (item) => item.name === selections.mainMeal\n      ).price;\n      sum += mainPrice * (1 - discounts.mainMeals / 100);\n    }\n\n    if (selections.dessert) {\n      const dessertPrice = menuItems.desserts.find(\n        (item) => item.name === selections.dessert\n      ).price;\n      sum += dessertPrice * (1 - discounts.desserts / 100);\n    }\n\n    return sum.toFixed(2);\n  };\n\n  const handleSelection = (category, itemName) => {\n    const newSelections = {\n      ...selectedItems,\n      [category]: itemName,\n    };\n    setSelectedItems(newSelections);\n    setTotal(calculateTotal(newSelections));\n  };\n\n  const handleAnswerChange = (questionId, value) => {\n    if (!showResults) {\n      setUserAnswers((prev) => ({\n        ...prev,\n        [questionId]: value,\n      }));\n    }\n  };\n\n  // Check answers and award partial credit\n  const handleCheckAnswers = () => {\n    setShowResults(true);\n\n    // Count correct answers\n    let correctCount = 0;\n    questions.forEach((question) => {\n      const userAnswer = userAnswers[question.id] || \"\";\n      if (\n        Math.abs(parseFloat(userAnswer) - parseFloat(question.correctAnswer)) <\n        0.01\n      ) {\n        correctCount++;\n      }\n    });\n\n    // Award points based on correct answers (scaled to 5 total points)\n    const totalPossiblePoints = 5;\n    const earnedPoints = Math.round(\n      (correctCount / questions.length) * totalPossiblePoints\n    );\n\n    // Mark as completed with partial credit\n    setWorksheetCompleted(true);\n    setPointsEarned(earnedPoints);\n\n    // Update the backend\n    setTimeout(() => {\n      const updatedProgress = { ...userProgress };\n\n      // Ensure the path exists\n      if (!updatedProgress.courses) updatedProgress.courses = {};\n      if (!updatedProgress.courses[courseKey]) {\n        updatedProgress.courses[courseKey] = {\n          lessons: {},\n          title: \"Statistics\",\n        };\n      }\n      if (!updatedProgress.courses[courseKey].lessons) {\n        updatedProgress.courses[courseKey].lessons = {};\n      }\n      if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber] = {\n          activities: {},\n          title: \"Fraction Restaurant\",\n        };\n      }\n      if (\n        !updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n      ) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities =\n          {};\n      }\n\n      // Set worksheet data\n      updatedProgress.courses[courseKey].lessons[\n        lessonNumber\n      ].activities.worksheet = {\n        completed: true,\n        earned: earnedPoints,\n        points: 5, // Total possible points is 5\n        type: \"worksheet\",\n        title: \"Fractions & Discounts\",\n      };\n\n      // Update lesson points\n      updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints =\n        earnedPoints;\n\n      // Mark lesson as completed if video is also completed\n      if (\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n          .video?.completed\n      ) {\n        updatedProgress.courses[courseKey].lessons[\n          lessonNumber\n        ].completed = true;\n      }\n\n      // Update course points\n      let coursePoints = 0;\n      Object.values(updatedProgress.courses[courseKey].lessons).forEach(\n        (lesson) => {\n          coursePoints += lesson.lessonPoints || 0;\n        }\n      );\n      updatedProgress.courses[courseKey].coursePoints = coursePoints;\n\n      // Update total points\n      let totalPoints = 0;\n      Object.values(updatedProgress.courses).forEach((course) => {\n        totalPoints += course.coursePoints || 0;\n      });\n      updatedProgress.totalPoints = totalPoints;\n\n      // Send to API\n      call_api(updatedProgress, \"points\", \"POST\")\n        .then((response) => {\n          if (response) {\n            setUserProgress(updatedProgress);\n            showStatus(\n              `✓ Progress saved! You've earned ${earnedPoints} points!`,\n              3000\n            );\n          }\n        })\n        .catch((error) => {\n          console.error(\"Update error:\", error);\n          showStatus(\"❌ Error saving progress\", 3000);\n        });\n    }, 500);\n  };\n\n  const handleReset = () => {\n    setSelectedItems({ salad: \"\", mainMeal: \"\", dessert: \"\" });\n    setTotal(0);\n    setUserAnswers({});\n    setShowResults(false);\n  };\n\n  const handleGoBack = () => {\n    window.history.back();\n  };\n\n  const isAnswerCorrect = (questionId) => {\n    const question = questions.find((q) => q.id === questionId);\n    const userAnswer = userAnswers[questionId] || \"\";\n    return (\n      Math.abs(parseFloat(userAnswer) - parseFloat(question.correctAnswer)) <\n      0.01\n    );\n  };\n\n  const getCorrectAnswerCount = () => {\n    return questions.filter((question) => isAnswerCorrect(question.id)).length;\n  };\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div\n        style={{\n          minHeight: \"100vh\",\n          background: \"white\",\n          margin: 0,\n          padding: \"32px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <div\n            style={{\n              border: \"4px solid #f3f3f3\",\n              borderTop: \"4px solid #357717\",\n              borderRadius: \"50%\",\n              width: \"50px\",\n              height: \"50px\",\n              animation: \"spin 2s linear infinite\",\n              margin: \"0 auto 20px\",\n            }}\n          ></div>\n          <p>Loading worksheet content...</p>\n          <style>{`\n            @keyframes spin {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n          `}</style>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        background: \"white\",\n        margin: \"0\",\n        padding: \"32px\",\n        fontFamily: \"Arial, sans-serif\",\n        position: \"relative\",\n      }}\n    >\n      {/* Status message */}\n      {statusMessage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"150px\",\n            right: \"20px\",\n            padding: \"10px 15px\",\n            backgroundColor: statusMessage.includes(\"Error\")\n              ? \"rgba(231, 76, 60, 0.8)\"\n              : \"#357717\",\n            color: \"white\",\n            borderRadius: \"5px\",\n            fontWeight: \"bold\",\n            zIndex: 1000,\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.2)\",\n            animation: \"fadeIn 0.3s ease-out\",\n            fontSize: \"16px\",\n          }}\n        >\n          {statusMessage}\n        </div>\n      )}\n\n      {/* Back button */}\n      <button\n        onClick={handleGoBack}\n        style={{\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"50%\",\n          background: isHovering ? \"#3cb371\" : \"#357717\",\n          width: \"60px\",\n          height: \"60px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          cursor: \"pointer\",\n          transition: \"all 0.3s ease\",\n          fontSize: \"36px\",\n          fontWeight: \"bold\",\n          transform: isHovering ? \"scale(0.9)\" : \"scale(1)\",\n        }}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n      >\n        &#8592;\n      </button>\n\n      <div style={{ maxWidth: \"896px\", margin: \"0 auto\" }}>\n        {/* Header */}\n        <img\n          src={stemzLearningLogo}\n          alt=\"STEMZ Learning\"\n          style={{\n            maxWidth: \"300px\",\n            display: \"block\",\n            margin: \"0 auto 30px\",\n          }}\n        />\n        <h1\n          style={{\n            color: \"#254E17\",\n            fontSize: \"48px\",\n            marginBottom: \"10px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Fraction Restaurant\n        </h1>\n        <h2\n          style={{\n            color: \"#357717\",\n            fontSize: \"36px\",\n            marginBottom: \"30px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Statistics: Lesson 3\n        </h2>\n\n        {/* Progress status */}\n        <div\n          style={{\n            marginBottom: \"20px\",\n            padding: \"10px 15px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#f0f0f0\",\n            textAlign: \"center\",\n            borderLeft: worksheetCompleted\n              ? \"4px solid #3cb371\"\n              : \"4px solid #ccc\",\n          }}\n        >\n          <span\n            style={{\n              fontWeight: \"bold\",\n              marginRight: \"15px\",\n              color: \"#333333\",\n            }}\n          >\n            Worksheet:\n          </span>\n          <span\n            style={{\n              color: worksheetCompleted ? \"#3cb371\" : \"#666666\",\n              fontWeight: worksheetCompleted ? \"bold\" : \"normal\",\n            }}\n          >\n            {worksheetCompleted ? \"Completed\" : \"Not Completed\"}\n          </span>\n          <span\n            style={{\n              marginLeft: \"15px\",\n              color: \"#555555\",\n            }}\n          >\n            ({pointsEarned} {pointsEarned === 1 ? \"point\" : \"points\"})\n          </span>\n        </div>\n\n        {/* Instructions */}\n        <div\n          style={{\n            marginBottom: \"30px\",\n            lineHeight: \"1.6\",\n            backgroundColor: \"#f9f9f9\",\n            padding: \"20px\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n          }}\n        >\n          <h3 style={{ marginTop: 0 }}>Materials Needed:</h3>\n          <ul>\n            <li>Scratch paper</li>\n          </ul>\n\n          <h3>Instructions:</h3>\n          <p>\n            Look at the menu from Fractions Restaurant and answer the questions\n            below. The menu shows original prices, and all items are discounted:\n          </p>\n          <ul>\n            <li>All salads are {discounts.salads}% off</li>\n            <li>Main meals are {discounts.mainMeals}% off</li>\n            <li>Desserts are {discounts.desserts}% off</li>\n          </ul>\n\n          <img\n            src={fractionMenu}\n            alt=\"Fraction Restaurant Menu\"\n            style={{\n              width: \"100%\",\n              maxWidth: \"600px\",\n              margin: \"20px auto\",\n              display: \"block\",\n              borderRadius: \"10px\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n            }}\n          />\n        </div>\n\n        {/* Menu Display */}\n        <div\n          style={{\n            backgroundColor: \"#e8f5e9\",\n            borderRadius: \"15px\",\n            padding: \"20px\",\n            marginBottom: \"30px\",\n          }}\n        >\n          <h3>Restaurant Menu</h3>\n\n          <div style={{ marginBottom: \"20px\" }}>\n            <h4 style={{ display: \"flex\", alignItems: \"center\" }}>\n              Salads\n              <span\n                style={{\n                  backgroundColor: \"#ff4444\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  borderRadius: \"15px\",\n                  marginLeft: \"10px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {discounts.salads}% OFF!\n              </span>\n            </h4>\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"repeat(3, 1fr)\",\n                gap: \"20px\",\n              }}\n            >\n              {menuItems.salads.map((item) => (\n                <div\n                  key={item.name}\n                  style={{\n                    padding: \"15px\",\n                    backgroundColor: \"white\",\n                    borderRadius: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  <div>{item.name}</div>\n                  <div style={{ fontWeight: \"bold\", color: \"#357717\" }}>\n                    ${item.price.toFixed(2)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div style={{ marginBottom: \"20px\" }}>\n            <h4 style={{ display: \"flex\", alignItems: \"center\" }}>\n              Main Meals\n              <span\n                style={{\n                  backgroundColor: \"#ff4444\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  borderRadius: \"15px\",\n                  marginLeft: \"10px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {discounts.mainMeals}% OFF!\n              </span>\n            </h4>\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"repeat(3, 1fr)\",\n                gap: \"20px\",\n              }}\n            >\n              {menuItems.mainMeals.map((item) => (\n                <div\n                  key={item.name}\n                  style={{\n                    padding: \"15px\",\n                    backgroundColor: \"white\",\n                    borderRadius: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  <div>{item.name}</div>\n                  <div style={{ fontWeight: \"bold\", color: \"#357717\" }}>\n                    ${item.price.toFixed(2)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <h4 style={{ display: \"flex\", alignItems: \"center\" }}>\n              Desserts\n              <span\n                style={{\n                  backgroundColor: \"#ff4444\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  borderRadius: \"15px\",\n                  marginLeft: \"10px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {discounts.desserts}% OFF!\n              </span>\n            </h4>\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"repeat(3, 1fr)\",\n                gap: \"20px\",\n              }}\n            >\n              {menuItems.desserts.map((item) => (\n                <div\n                  key={item.name}\n                  style={{\n                    padding: \"15px\",\n                    backgroundColor: \"white\",\n                    borderRadius: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  <div>{item.name}</div>\n                  <div style={{ fontWeight: \"bold\", color: \"#357717\" }}>\n                    ${item.price.toFixed(2)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Questions */}\n        <div\n          style={{\n            backgroundColor: \"#f5f5f5\",\n            padding: \"20px\",\n            borderRadius: \"10px\",\n            marginBottom: \"30px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n          }}\n        >\n          <h3>Answer the following questions:</h3>\n\n          {questions.map((question) => (\n            <div\n              key={question.id}\n              style={{\n                marginBottom: \"20px\",\n                padding: \"15px\",\n                backgroundColor: \"white\",\n                borderRadius: \"8px\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n              }}\n            >\n              <div\n                style={{\n                  fontWeight: \"bold\",\n                  marginBottom: \"10px\",\n                }}\n              >\n                {question.id}. {question.text}\n              </div>\n\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                {question.answerPrefix && (\n                  <span style={{ marginRight: \"5px\" }}>\n                    {question.answerPrefix}\n                  </span>\n                )}\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={userAnswers[question.id] || \"\"}\n                  onChange={(e) =>\n                    handleAnswerChange(question.id, e.target.value)\n                  }\n                  style={{\n                    padding: \"8px 12px\",\n                    fontSize: \"16px\",\n                    borderRadius: \"5px\",\n                    border: \"1px solid #ddd\",\n                    width: \"120px\",\n                  }}\n                  disabled={showResults}\n                />\n                {question.answerSuffix && (\n                  <span style={{ marginLeft: \"5px\" }}>\n                    {question.answerSuffix}\n                  </span>\n                )}\n              </div>\n\n              {showResults && (\n                <div\n                  style={{\n                    marginTop: \"10px\",\n                    padding: \"8px 12px\",\n                    borderRadius: \"5px\",\n                    backgroundColor: isAnswerCorrect(question.id)\n                      ? \"rgba(60, 179, 113, 0.2)\"\n                      : \"rgba(207, 52, 52, 0.2)\",\n                    color: isAnswerCorrect(question.id) ? \"#3cb371\" : \"#CF3434\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {isAnswerCorrect(question.id)\n                    ? \"✓ Correct!\"\n                    : `✗ The correct answer is ${question.answerPrefix}${question.correctAnswer}${question.answerSuffix}.`}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Buttons */}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"20px\",\n            marginBottom: \"40px\",\n          }}\n        >\n          <button\n            onClick={handleCheckAnswers}\n            disabled={showResults}\n            style={{\n              padding: \"12px 25px\",\n              fontSize: \"16px\",\n              backgroundColor: showResults ? \"#cccccc\" : \"#3cb371\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: showResults ? \"default\" : \"pointer\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n              transition: \"all 0.3s ease\",\n            }}\n          >\n            Check Answers\n          </button>\n          <button\n            onClick={handleReset}\n            style={{\n              padding: \"12px 25px\",\n              fontSize: \"16px\",\n              backgroundColor: \"#CF3434\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n              transition: \"all 0.3s ease\",\n            }}\n          >\n            Reset\n          </button>\n        </div>\n\n        {/* Results message */}\n        {showResults && (\n          <div\n            style={{\n              marginTop: \"30px\",\n              textAlign: \"center\",\n              padding: \"15px\",\n              backgroundColor:\n                getCorrectAnswerCount() === questions.length\n                  ? \"#e8f5e9\"\n                  : \"#ffebee\",\n              borderRadius: \"5px\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n              marginBottom: \"30px\",\n            }}\n          >\n            <p\n              style={{\n                color:\n                  getCorrectAnswerCount() === questions.length\n                    ? \"#3cb371\"\n                    : \"#CF3434\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {getCorrectAnswerCount() === 0\n                ? \"No correct answers. Review the material and try again!\"\n                : getCorrectAnswerCount() === questions.length\n                ? \"Congratulations! All answers are correct!\"\n                : `You got ${getCorrectAnswerCount()} out of ${\n                    questions.length\n                  } questions correct.`}\n            </p>\n            <p style={{ marginBottom: 0 }}>\n              You earned {pointsEarned} out of 5 possible points.\n            </p>\n          </div>\n        )}\n      </div>\n\n      <style jsx>{`\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        @keyframes fadeOut {\n          from {\n            opacity: 1;\n            transform: translateY(0);\n          }\n          to {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","menuItems","salads","name","price","mainMeals","desserts","discounts","questions","id","text","correctAnswer","answerPrefix","answerSuffix","StatWorkSheet3","navigate","useNavigate","selectedItems","setSelectedItems","useState","salad","mainMeal","dessert","isHovering","setIsHovering","total","setTotal","userAnswers","setUserAnswers","showResults","setShowResults","userProgress","setUserProgress","loading","setLoading","isAuthenticated","setIsAuthenticated","worksheetCompleted","setWorksheetCompleted","pointsEarned","setPointsEarned","statusMessage","setStatusMessage","lessonNumber","courseKey","statusTimeoutRef","useRef","showStatus","duration","arguments","length","undefined","current","clearTimeout","setTimeout","useEffect","success","console","verifyToken","courses","lesson","lessons","activities","worksheet","savedCompleted","completed","savedPoints","earned","err","fetchUserProgress","isAnswerCorrect","questionId","question","find","q","userAnswer","Math","abs","parseFloat","getCorrectAnswerCount","filter","_jsx","style","minHeight","background","margin","padding","display","justifyContent","alignItems","fontFamily","children","_jsxs","textAlign","border","borderTop","borderRadius","width","height","animation","position","top","right","backgroundColor","color","fontWeight","zIndex","boxShadow","fontSize","onClick","handleGoBack","history","back","left","cursor","transition","transform","onMouseEnter","onMouseLeave","maxWidth","src","stemzLearningLogo","alt","marginBottom","borderLeft","marginRight","marginLeft","lineHeight","marginTop","fractionMenu","gridTemplateColumns","gap","map","item","toFixed","type","step","value","onChange","e","handleAnswerChange","prev","disabled","handleCheckAnswers","correctCount","forEach","earnedPoints","round","_updatedProgress$cour","updatedProgress","title","points","lessonPoints","video","coursePoints","Object","values","totalPoints","course","catch","handleReset","jsx"],"sourceRoot":""}