{"version":3,"file":"static/js/9620.d721430c.chunk.js","mappings":"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","sources":["api.js","pages/zoology/ZooWorksheet3.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React, { useState, useRef, useEffect } from \"react\";\nimport stemzLearningLogo from \"../../assets/logo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { call_api } from \"../../api\";\n\nconst animals = [\"Elephants\", \"Lion\", \"Crocodile\", \"Horses\"];\nconst columnAnimals = [\"Mosquito\", \"Cheetah\", \"Giraffe\", \"Birds\"];\n\nconst relationshipTypes = [\n  { value: \"mutualism\", label: \"Mutualism (both benefit)\", color: \"#90EE90\" },\n  {\n    value: \"commensalism\",\n    label: \"Commensalism (one benefits, other neutral)\",\n    color: \"#87CEEB\",\n  },\n  { value: \"predation\", label: \"Predation (one eats other)\", color: \"#FFB6C1\" },\n  {\n    value: \"parasitism\",\n    label: \"Parasitism (one benefits, other is harmed)\",\n    color: \"#DDA0DD\",\n  },\n  {\n    value: \"competition\",\n    label: \"Competition (competing for resources)\",\n    color: \"#F0E68C\",\n  },\n  {\n    value: \"neutralism\",\n    label: \"Neutralism (unaffected by each other)\",\n    color: \"#D3D3D3\",\n  },\n];\n\n// Correct answers for the relationships\nconst correctAnswers = {\n  \"Elephants-Mosquito\": \"parasitism\",\n  \"Elephants-Cheetah\": \"neutralism\",\n  \"Elephants-Giraffe\": \"competition\",\n  \"Elephants-Birds\": \"commensalism\",\n  \"Lion-Mosquito\": \"parasitism\",\n  \"Lion-Cheetah\": \"competition\",\n  \"Lion-Giraffe\": \"predation\",\n  \"Lion-Birds\": \"neutralism\",\n  \"Crocodile-Mosquito\": \"parasitism\",\n  \"Crocodile-Cheetah\": \"neutralism\",\n  \"Crocodile-Giraffe\": \"predation\",\n  \"Crocodile-Birds\": \"commensalism\",\n  \"Horses-Mosquito\": \"parasitism\",\n  \"Horses-Cheetah\": \"predation\",\n  \"Horses-Giraffe\": \"competition\",\n  \"Horses-Birds\": \"mutualism\",\n};\n\nconst correctKeystoneSpecies = \"Elephants\";\n\nexport default function ZooWorkSheet4() {\n  // Navigation\n  const navigate = useNavigate();\n\n  // State variables\n  const [relationships, setRelationships] = useState({});\n  const [keystoneSpecies, setKeystoneSpecies] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState({});\n  const [isHovering, setIsHovering] = useState(false);\n\n  // Progress tracking states\n  const [userProgress, setUserProgress] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [worksheetCompleted, setWorksheetCompleted] = useState(false);\n  const [pointsEarned, setPointsEarned] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  // Constants for progress tracking\n  const lessonNumber = \"lesson4\";\n  const courseKey = \"zoology\";\n\n  // Refs\n  const statusTimeoutRef = useRef(null);\n\n  // Show status message with auto-fade\n  const showStatus = (message, duration = 3000) => {\n    setStatusMessage(message);\n    if (statusTimeoutRef.current) clearTimeout(statusTimeoutRef.current);\n    statusTimeoutRef.current = setTimeout(() => setStatusMessage(\"\"), duration);\n  };\n\n  // Token verification\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      try {\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        if (response && response.success) {\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Token verification error:\", error);\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n\n  // Fetch user progress data\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    const fetchUserProgress = async () => {\n      try {\n        const response = await call_api(null, \"points\", \"GET\");\n        if (response) {\n          setUserProgress(response);\n\n          // Check if there's course data available\n          if (response.courses && response.courses[courseKey]) {\n            const lesson = response.courses[courseKey].lessons[lessonNumber];\n\n            if (lesson && lesson.activities && lesson.activities.worksheet) {\n              const savedCompleted =\n                lesson.activities.worksheet.completed || false;\n              const savedPoints = lesson.activities.worksheet.earned || 0;\n\n              setWorksheetCompleted(savedCompleted);\n              setPointsEarned(savedPoints);\n            }\n          }\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error fetching course progress:\", err);\n        setLoading(false);\n      }\n    };\n    fetchUserProgress();\n  }, [isAuthenticated, courseKey, lessonNumber]);\n\n  const handleRelationshipChange = (rowAnimal, colAnimal, value) => {\n    if (!showResults) {\n      setRelationships((prev) => ({\n        ...prev,\n        [`${rowAnimal}-${colAnimal}`]: value,\n      }));\n    }\n  };\n\n  const handleKeystoneSelect = (animal) => {\n    if (!showResults) {\n      setKeystoneSpecies(animal);\n    }\n  };\n\n  const checkAnswer = (rowAnimal, colAnimal) => {\n    const key = `${rowAnimal}-${colAnimal}`;\n    const userAnswer = relationships[key];\n    return userAnswer === correctAnswers[key];\n  };\n\n  const handleCheckAnswers = () => {\n    // Make sure all relationships are filled in and a keystone species is selected\n    if (\n      Object.keys(relationships).length <\n        animals.length * columnAnimals.length ||\n      !keystoneSpecies\n    ) {\n      // Show results even if incomplete, but with appropriate message\n      const newResults = {};\n      animals.forEach((rowAnimal) => {\n        columnAnimals.forEach((colAnimal) => {\n          const key = `${rowAnimal}-${colAnimal}`;\n          if (relationships[key]) {\n            newResults[key] = checkAnswer(rowAnimal, colAnimal);\n          }\n        });\n      });\n      setResults(newResults);\n      setShowResults(true);\n      return;\n    }\n\n    const newResults = {};\n    animals.forEach((rowAnimal) => {\n      columnAnimals.forEach((colAnimal) => {\n        const key = `${rowAnimal}-${colAnimal}`;\n        newResults[key] = checkAnswer(rowAnimal, colAnimal);\n      });\n    });\n    setResults(newResults);\n    setShowResults(true);\n\n    // Calculate points based on correct answers\n    let correctCount = 0;\n\n    // Count correct relationships\n    Object.values(newResults).forEach((isCorrect) => {\n      if (isCorrect) correctCount++;\n    });\n\n    // Add point for correct keystone species\n    if (keystoneSpecies === correctKeystoneSpecies) {\n      correctCount++;\n    }\n\n    // Calculate points (scale to 5 total possible points)\n    // Total possible correct answers: 16 relationships + 1 keystone = 17\n    const totalPossibleCorrect = animals.length * columnAnimals.length + 1;\n    const earnedPoints = Math.round((correctCount / totalPossibleCorrect) * 5);\n\n    // Mark as completed and save progress\n    setWorksheetCompleted(true);\n    setPointsEarned(earnedPoints);\n\n    // Save progress to backend\n    const updatedProgress = { ...userProgress };\n\n    // Ensure the path exists\n    if (!updatedProgress.courses) updatedProgress.courses = {};\n    if (!updatedProgress.courses[courseKey]) {\n      updatedProgress.courses[courseKey] = { lessons: {}, title: \"Zoology\" };\n    }\n    if (!updatedProgress.courses[courseKey].lessons) {\n      updatedProgress.courses[courseKey].lessons = {};\n    }\n    if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n      updatedProgress.courses[courseKey].lessons[lessonNumber] = {\n        activities: {},\n        title: \"Animal Behaviors\",\n      };\n    }\n    if (!updatedProgress.courses[courseKey].lessons[lessonNumber].activities) {\n      updatedProgress.courses[courseKey].lessons[lessonNumber].activities = {};\n    }\n\n    // Get current worksheet data to check for highest score\n    const currentWorksheet =\n      updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n        .worksheet || {};\n    const highestPoints = Math.max(earnedPoints, currentWorksheet.earned || 0);\n\n    // Set worksheet data\n    updatedProgress.courses[courseKey].lessons[\n      lessonNumber\n    ].activities.worksheet = {\n      completed: true,\n      earned: highestPoints,\n      points: 5, // Total possible points is 5\n      type: \"worksheet\",\n      title: \"Animal Behaviors\",\n    };\n\n    // Update lesson points\n    updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints =\n      highestPoints;\n\n    // Mark lesson as completed if video is also completed\n    if (\n      updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video\n        ?.completed\n    ) {\n      updatedProgress.courses[courseKey].lessons[lessonNumber].completed = true;\n    }\n\n    // Update course points\n    let coursePoints = 0;\n    Object.values(updatedProgress.courses[courseKey].lessons).forEach(\n      (lesson) => {\n        coursePoints += lesson.lessonPoints || 0;\n      }\n    );\n    updatedProgress.courses[courseKey].coursePoints = coursePoints;\n\n    // Update total points\n    let totalPoints = 0;\n    Object.values(updatedProgress.courses).forEach((course) => {\n      totalPoints += course.coursePoints || 0;\n    });\n    updatedProgress.totalPoints = totalPoints;\n\n    // Send to API\n    call_api(updatedProgress, \"points\", \"POST\")\n      .then((response) => {\n        if (response) {\n          setUserProgress(updatedProgress);\n          showStatus(\n            `✓ Progress saved! You've earned ${earnedPoints} points!`,\n            3000\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(\"Update error:\", error);\n        showStatus(\"❌ Error saving progress\", 3000);\n      });\n  };\n\n  const handleReset = () => {\n    setRelationships({});\n    setKeystoneSpecies(null);\n    setShowResults(false);\n    setResults({});\n  };\n\n  const handleGoBack = () => {\n    window.history.back();\n  };\n\n  // Calculate percentage of correct answers for display\n  const calculateCorrectPercentage = () => {\n    if (!showResults) return 0;\n\n    // If nothing is filled in, return 0\n    if (Object.keys(results).length === 0) return 0;\n\n    const totalQuestions = animals.length * columnAnimals.length + 1; // Relationships + keystone\n    let correctCount = 0;\n\n    // Count correct relationships\n    Object.values(results).forEach((isCorrect) => {\n      if (isCorrect) correctCount++;\n    });\n\n    // Add point for correct keystone species\n    if (keystoneSpecies === correctKeystoneSpecies) {\n      correctCount++;\n    }\n\n    return Math.round((correctCount / totalQuestions) * 100);\n  };\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div\n        style={{\n          minHeight: \"100vh\",\n          background: \"white\",\n          margin: 0,\n          padding: \"32px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <div\n            style={{\n              border: \"4px solid #f3f3f3\",\n              borderTop: \"4px solid #357717\",\n              borderRadius: \"50%\",\n              width: \"50px\",\n              height: \"50px\",\n              animation: \"spin 2s linear infinite\",\n              margin: \"0 auto 20px\",\n            }}\n          ></div>\n          <p>Loading worksheet content...</p>\n          <style>{`\n            @keyframes spin {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n          `}</style>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        background: \"white\",\n        margin: \"0\",\n        padding: \"32px\",\n        fontFamily: \"Arial, sans-serif\",\n        position: \"relative\",\n      }}\n    >\n      {/* Status message */}\n      {statusMessage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"150px\",\n            right: \"20px\",\n            padding: \"10px 15px\",\n            backgroundColor: statusMessage.includes(\"Error\")\n              ? \"rgba(231, 76, 60, 0.8)\"\n              : \"#357717\",\n            color: \"white\",\n            borderRadius: \"5px\",\n            fontWeight: \"bold\",\n            zIndex: 1000,\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.2)\",\n            animation: \"fadeIn 0.3s ease-out\",\n            fontSize: \"16px\",\n          }}\n        >\n          {statusMessage}\n        </div>\n      )}\n\n      {/* Back button */}\n      <button\n        onClick={handleGoBack}\n        style={{\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"50%\",\n          background: isHovering ? \"#3cb371\" : \"#357717\",\n          width: \"60px\",\n          height: \"60px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          cursor: \"pointer\",\n          transition: \"all 0.3s ease\",\n          fontSize: \"36px\",\n          fontWeight: \"bold\",\n          transform: isHovering ? \"scale(0.9)\" : \"scale(1)\",\n        }}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n      >\n        &#8592;\n      </button>\n\n      <div style={{ maxWidth: \"1200px\", margin: \"0 auto\" }}>\n        {/* Header */}\n        <img\n          src={stemzLearningLogo}\n          alt=\"STEMZ Learning\"\n          style={{\n            maxWidth: \"300px\",\n            display: \"block\",\n            margin: \"0 auto 30px\",\n          }}\n        />\n        <h1\n          style={{\n            color: \"#254E17\",\n            fontSize: \"48px\",\n            marginBottom: \"10px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Animal Behaviors\n        </h1>\n        <h2\n          style={{\n            color: \"#357717\",\n            fontSize: \"36px\",\n            marginBottom: \"30px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Zoology: Lesson 4\n        </h2>\n\n        {/* Progress status */}\n        <div\n          style={{\n            marginBottom: \"20px\",\n            padding: \"10px 15px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#f0f0f0\",\n            textAlign: \"center\",\n            borderLeft: worksheetCompleted\n              ? \"4px solid #3cb371\"\n              : \"4px solid #ccc\",\n          }}\n        >\n          <span\n            style={{\n              fontWeight: \"bold\",\n              marginRight: \"15px\",\n              color: \"#333333\",\n            }}\n          >\n            Worksheet:\n          </span>\n          <span\n            style={{\n              color: worksheetCompleted ? \"#3cb371\" : \"#666666\",\n              fontWeight: worksheetCompleted ? \"bold\" : \"normal\",\n            }}\n          >\n            {worksheetCompleted ? \"Completed\" : \"Not Completed\"}\n          </span>\n          <span\n            style={{\n              marginLeft: \"15px\",\n              color: \"#555555\",\n            }}\n          >\n            ({pointsEarned} {pointsEarned === 1 ? \"point\" : \"points\"})\n          </span>\n        </div>\n\n        {/* Instructions */}\n        <div\n          style={{\n            marginBottom: \"30px\",\n            padding: \"20px\",\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n          }}\n        >\n          <h3 style={{ marginTop: 0 }}>Instructions:</h3>\n          <ul>\n            <li>\n              Identify the symbiotic relationship between the animals.\n              <ul>\n                <li>\n                  In each box, select the symbiotic relationship between the\n                  animals in each row/column.\n                </li>\n              </ul>\n            </li>\n            <li>\n              Click on the animal that is most likely to be a keystone species.\n            </li>\n          </ul>\n        </div>\n\n        {/* Definitions */}\n        <div\n          style={{\n            marginBottom: \"30px\",\n            padding: \"20px\",\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n          }}\n        >\n          <h3 style={{ marginTop: 0 }}>Helpful Definitions:</h3>\n          <h4>Symbiotic relationships:</h4>\n          {relationshipTypes.map((type) => (\n            <div\n              key={type.value}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"20px\",\n                  height: \"20px\",\n                  marginRight: \"10px\",\n                  borderRadius: \"4px\",\n                  backgroundColor: type.color,\n                }}\n              ></div>\n              <div>{type.label}</div>\n            </div>\n          ))}\n          <h4>\n            Keystone species: a species that other species in the ecosystem\n            depend on a lot\n          </h4>\n        </div>\n\n        {/* Relationship Table */}\n        <table\n          style={{\n            width: \"100%\",\n            borderCollapse: \"collapse\",\n            marginTop: \"30px\",\n            marginBottom: \"30px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n          }}\n        >\n          <thead>\n            <tr>\n              <th\n                style={{\n                  padding: \"15px\",\n                  border: \"1px solid #ddd\",\n                  backgroundColor: \"#f5f5f5\",\n                  textAlign: \"center\",\n                }}\n              >\n                Safari Ecosystem\n              </th>\n              {columnAnimals.map((animal) => (\n                <th\n                  key={animal}\n                  style={{\n                    padding: \"15px\",\n                    border: \"1px solid #ddd\",\n                    backgroundColor: \"#f5f5f5\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  {animal}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {animals.map((rowAnimal) => (\n              <tr key={rowAnimal}>\n                <td\n                  style={{\n                    padding: \"15px\",\n                    border: \"1px solid #ddd\",\n                    cursor: \"pointer\",\n                    transition: \"all 0.3s ease\",\n                    ...(keystoneSpecies === rowAnimal\n                      ? {\n                          backgroundColor: \"#FFD700\",\n                          fontWeight: \"bold\",\n                        }\n                      : {}),\n                    ...(showResults && keystoneSpecies === rowAnimal\n                      ? keystoneSpecies === correctKeystoneSpecies\n                        ? {\n                            background:\n                              \"linear-gradient(#e8f5e9, #e8f5e9), #FFD700\",\n                          }\n                        : {\n                            background:\n                              \"linear-gradient(#ffebee, #ffebee), #FFD700\",\n                          }\n                      : {}),\n                  }}\n                  onClick={() => handleKeystoneSelect(rowAnimal)}\n                >\n                  {rowAnimal}\n                </td>\n                {columnAnimals.map((colAnimal) => {\n                  const key = `${rowAnimal}-${colAnimal}`;\n                  const relationship = relationships[key];\n                  const relationshipColor = relationship\n                    ? relationshipTypes.find((t) => t.value === relationship)\n                        ?.color\n                    : \"white\";\n\n                  return (\n                    <td\n                      key={colAnimal}\n                      style={{\n                        padding: \"15px\",\n                        border: \"1px solid #ddd\",\n                        position: \"relative\",\n                        transition: \"all 0.3s ease\",\n                        background: showResults\n                          ? `linear-gradient(${\n                              results[key] ? \"#e8f5e9\" : \"#ffebee\"\n                            }, ${\n                              results[key] ? \"#e8f5e9\" : \"#ffebee\"\n                            }), ${relationshipColor}`\n                          : relationshipColor,\n                      }}\n                    >\n                      <select\n                        style={{\n                          width: \"100%\",\n                          padding: \"8px\",\n                          border: \"1px solid #ddd\",\n                          borderRadius: \"4px\",\n                          backgroundColor: \"transparent\",\n                        }}\n                        value={relationship || \"\"}\n                        onChange={(e) =>\n                          handleRelationshipChange(\n                            rowAnimal,\n                            colAnimal,\n                            e.target.value\n                          )\n                        }\n                        disabled={showResults}\n                      >\n                        <option value=\"\">Select relationship...</option>\n                        {relationshipTypes.map((type) => (\n                          <option key={type.value} value={type.value}>\n                            {type.label}\n                          </option>\n                        ))}\n                      </select>\n                    </td>\n                  );\n                })}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        {/* Buttons */}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"20px\",\n            marginTop: \"30px\",\n            marginBottom: \"30px\",\n          }}\n        >\n          <button\n            onClick={handleCheckAnswers}\n            style={{\n              padding: \"12px 25px\",\n              fontSize: \"16px\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: !showResults ? \"pointer\" : \"default\",\n              transition: \"all 0.3s ease\",\n              backgroundColor: !showResults ? \"#3cb371\" : \"#cccccc\",\n            }}\n            disabled={showResults}\n          >\n            Check Answers\n          </button>\n          <button\n            onClick={handleReset}\n            style={{\n              padding: \"12px 25px\",\n              fontSize: \"16px\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n              transition: \"all 0.3s ease\",\n              backgroundColor: \"#CF3434\",\n            }}\n          >\n            Reset\n          </button>\n        </div>\n\n        {/* Results message */}\n        {showResults && (\n          <div\n            style={{\n              marginTop: \"30px\",\n              textAlign: \"center\",\n              padding: \"15px\",\n              backgroundColor:\n                Object.values(results).every(Boolean) &&\n                keystoneSpecies === correctKeystoneSpecies\n                  ? \"#e8f5e9\"\n                  : \"#ffebee\",\n              borderRadius: \"5px\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n              marginBottom: \"30px\",\n            }}\n          >\n            <p\n              style={{\n                color:\n                  Object.values(results).every(Boolean) &&\n                  keystoneSpecies === correctKeystoneSpecies\n                    ? \"#3cb371\"\n                    : \"#CF3434\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n                marginBottom: \"10px\",\n              }}\n            >\n              {!Object.keys(relationships).length\n                ? \"Please fill in all relationships and keystone species.\"\n                : Object.keys(relationships).length <\n                  animals.length * columnAnimals.length\n                ? \"Please fill in all relationships and keystone species.\"\n                : !keystoneSpecies\n                ? \"Please select a keystone species before checking.\"\n                : Object.values(results).every(Boolean) &&\n                  keystoneSpecies === correctKeystoneSpecies\n                ? \"Congratulations! All answers are correct!\"\n                : \"Some answers are incorrect. Review the highlighted answers.\"}\n            </p>\n\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                gap: \"15px\",\n                marginTop: \"15px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"120px\",\n                  height: \"120px\",\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#f5f5f5\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  fontSize: \"28px\",\n                  fontWeight: \"bold\",\n                  color: \"#357717\",\n                  boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\",\n                }}\n              >\n                {calculateCorrectPercentage()}%\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  gap: \"5px\",\n                }}\n              >\n                <div>\n                  <strong>Your Score:</strong> {pointsEarned} out of 5 points\n                </div>\n                <div>\n                  <span\n                    style={{\n                      display: \"inline-block\",\n                      width: \"12px\",\n                      height: \"12px\",\n                      backgroundColor: \"#e8f5e9\",\n                      marginRight: \"5px\",\n                      borderRadius: \"2px\",\n                    }}\n                  ></span>\n                  Correct answers\n                </div>\n                <div>\n                  <span\n                    style={{\n                      display: \"inline-block\",\n                      width: \"12px\",\n                      height: \"12px\",\n                      backgroundColor: \"#ff90ee\",\n                      marginRight: \"5px\",\n                      borderRadius: \"2px\",\n                    }}\n                  ></span>\n                  Incorrect answers\n                </div>\n                <div>\n                  <span\n                    style={{\n                      display: \"inline-block\",\n                      width: \"12px\",\n                      height: \"12px\",\n                      backgroundColor: \"#FFD700\",\n                      marginRight: \"5px\",\n                      borderRadius: \"2px\",\n                    }}\n                  ></span>\n                  Selected keystone species\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <style jsx>{`\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        @keyframes fadeOut {\n          from {\n            opacity: 1;\n            transform: translateY(0);\n          }\n          to {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","animals","columnAnimals","relationshipTypes","value","label","color","correctAnswers","correctKeystoneSpecies","ZooWorkSheet4","navigate","useNavigate","relationships","setRelationships","useState","keystoneSpecies","setKeystoneSpecies","showResults","setShowResults","results","setResults","isHovering","setIsHovering","userProgress","setUserProgress","loading","setLoading","isAuthenticated","setIsAuthenticated","worksheetCompleted","setWorksheetCompleted","pointsEarned","setPointsEarned","statusMessage","setStatusMessage","lessonNumber","courseKey","statusTimeoutRef","useRef","showStatus","duration","arguments","length","undefined","current","clearTimeout","setTimeout","useEffect","success","console","verifyToken","courses","lesson","lessons","activities","worksheet","savedCompleted","completed","savedPoints","earned","err","fetchUserProgress","checkAnswer","rowAnimal","colAnimal","key","_jsx","style","minHeight","background","margin","padding","display","justifyContent","alignItems","fontFamily","children","_jsxs","textAlign","border","borderTop","borderRadius","width","height","animation","position","top","right","backgroundColor","fontWeight","zIndex","boxShadow","fontSize","onClick","handleGoBack","history","back","left","cursor","transition","transform","onMouseEnter","onMouseLeave","maxWidth","src","stemzLearningLogo","alt","marginBottom","borderLeft","marginRight","marginLeft","marginTop","map","type","borderCollapse","animal","handleKeystoneSelect","_relationshipTypes$fi","relationship","relationshipColor","find","t","onChange","e","handleRelationshipChange","prev","disabled","gap","handleCheckAnswers","_updatedProgress$cour","Object","keys","newResults","forEach","correctCount","values","isCorrect","totalPossibleCorrect","earnedPoints","Math","round","updatedProgress","title","currentWorksheet","highestPoints","max","points","lessonPoints","video","coursePoints","totalPoints","course","catch","handleReset","every","Boolean","calculateCorrectPercentage","totalQuestions","flexDirection","jsx"],"sourceRoot":""}