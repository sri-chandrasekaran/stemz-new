{"version":3,"file":"static/js/6183.d8a90945.chunk.js","mappings":"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","sources":["api.js","components/Footer.js","components/HeroOther.js","components/Navbar.js","components/Quiz.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React from 'react';\nimport './Footer.css';\nimport {FaFacebook, FaLinkedin, FaTiktok, FaInstagram, FaTwitter} from 'react-icons/fa'\n\nconst Footer = () => {\n  return (\n    <div className='footer fixed-footer'>\n      <div className='footer-container'>\n        <div className='social'>\n          <a href=\"https://www.facebook.com/alice.gao.96558/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaFacebook size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.linkedin.com/company/stemz-learning/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaLinkedin size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.tiktok.com/@stemzlearning?_t=8edHU0jxuuUI&_r=1\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaTiktok size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.instagram.com/stemzlearning\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaInstagram size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n          <a href=\"https://www.twitter.com/stemzlearning\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaTwitter size={40} style={{color:'black', marginRight: '1rem'}} />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react';\nimport './HeroOther.css'\n\nconst Hero = ({ overlayText }) => {\n  return (\n    <div className='hero-other'>\n        <div className=\"hero-overlay\">\n            <p className=\"overlay-text\">{overlayText}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default Hero\n","import React, { useState, useEffect } from 'react';\nimport './Navbar.css';\nimport {FaBars, FaTimes} from 'react-icons/fa';\nimport { Link, useNavigate } from 'react-router-dom';\nimport logo from '../assets/logo.png'\nimport axios from \"axios\";\n\nconst Navbar = () => {\n    const [check, setCheck] = useState(null);\n    const [click, setClick] = useState(false);\n    const [color, setColor] = useState(false);\n    const [activeDropdown, setActiveDropdown] = useState(null);\n    const navigate = useNavigate();\n  \n    const handleClick = () => setClick((prevState) => !prevState);\n  \n    const changeColor = () => {\n      if (window.scrollY >= 45) {\n        setColor(true);\n      } else {\n        setColor(false);\n      }\n    };\n  \n    window.addEventListener('scroll', changeColor);\n  \n    const scrollToTop = () => {\n      window.scrollTo(0, 0);\n      setClick(false); // Close mobile menu when clicking a link\n    };\n\n    const toggleDropdown = (index) => {\n      if (window.innerWidth <= 1100) {\n        setActiveDropdown(activeDropdown === index ? null : index);\n      }\n    };\n\n    const updateDashboard = () => {\n        window.location.href = '/dashboard';\n    };\n\n    const updateOnline = () => {\n        window.location.href = '/online-classes';\n        setClick(false); // Close mobile menu\n    };\n\n    const navigateToDashboard = (e) => {\n        e.preventDefault();\n        navigate('/dashboard');\n        setClick(false); // Close mobile menu\n    };\n    \n    const handleLogout = (e) => {\n      e.preventDefault();\n      // Clear the token from localStorage\n      localStorage.removeItem('token');\n      // Update authentication state\n      setCheck(false);\n      // Navigate to login page\n      navigate('/login');\n    };\n  \n    useEffect(() => {\n      // Check for token in localStorage first\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        // If token exists in localStorage, we consider user as logged in\n        setCheck(true);\n      } else {\n        // If no token in localStorage, check with the server\n        axios\n          .get('https://www.stemzlearning.org/dashboard', {\n            withCredentials: true,\n          })\n          .then((response) => {\n            if (response.data.success) {\n              setCheck(true);\n            } else {\n              setCheck(false);\n            }\n          })\n          .catch(() => {\n            setCheck(false);\n          });\n      }\n    }, []);\n  \n    if (check === null) {\n      return null; // Render nothing while fetching data\n    }\n  \n    return (\n        <div className={color ? 'header header-bg' : 'header'}>\n            <Link to='/'>\n                <img src={logo} alt=\"STEMz Learning\" className=\"logo\"/>\n            </Link>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li>\n                    <Link to='/' onClick={scrollToTop}>Home</Link>\n                </li>\n                <li>\n                    <Link to='/about-us' onClick={scrollToTop}>About Us</Link>\n                </li>\n                <li>\n                    <Link to='/online-classes' onClick={updateOnline}>Online Classes</Link>\n                </li>\n                <li className={activeDropdown === 0 ? 'active' : ''} onClick={() => toggleDropdown(0)}>\n                    <Link to='/self-paced-classes' onClick={(e) => window.innerWidth <= 1100 && e.preventDefault()}>\n                        Self-Paced Classes\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <Link to=\"/astronomy\" onClick={scrollToTop}>Astronomy</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/basicsofcoding\" onClick={scrollToTop}>Basics of Coding</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/biochemistry\" onClick={scrollToTop}>Biochemistry</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/chemistry\" onClick={scrollToTop}>Chemistry</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/circuits\" onClick={scrollToTop}>Circuits</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/environmentalscience\" onClick={scrollToTop}>Environmental Science</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/psychology\" onClick={scrollToTop}>Psychology</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/statistics\" onClick={scrollToTop}>Statistics</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/zoology\" onClick={scrollToTop}>Zoology</Link>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <Link to='/course-boxes' onClick={scrollToTop}>Course Boxes</Link>\n                </li>\n                <li>\n                    <Link to='https://substack.com/@STEMZLEARNING' onClick={scrollToTop}>News</Link>\n                </li>\n                <li className={activeDropdown === 1 ? 'active' : ''} onClick={() => toggleDropdown(1)}>\n                    <Link to='/get-involved' onClick={(e) => window.innerWidth <= 1100 && e.preventDefault()}>\n                        Get Involved\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <Link to=\"/volunteer\" onClick={scrollToTop}>Volunteers</Link>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <Link to='/contact' onClick={scrollToTop}>Contact</Link>\n                </li>\n                <li className=\"login-item\">\n                    {check ? (\n                        <Link to=\"/dashboard\" onClick={navigateToDashboard} className=\"login-link\">Dashboard</Link>\n                    ) : (\n                        <Link to=\"/login\" onClick={scrollToTop} className=\"login-link\">Log In</Link>\n                    )}\n                </li>\n            </ul>\n            <div className='hamburger' onClick={handleClick}>\n                {click ? (<FaTimes size={20} style={{color: 'black'}} />) : (<FaBars size={20} style={{color: 'black'}}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React, { useState, useEffect, useCallback } from 'react';\nimport './Form.css'\nimport PropTypes from 'prop-types';\nimport { call_api } from '../api';\nimport './Quiz.css';\n\nconst Quiz = ({ src, courseKey, lessonNumber }) => {\n  // State variables\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [total, setTotal] = useState(0);\n  const [quizTitle, setQuizTitle] = useState('');\n  const [userProgress, setUserProgress] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [pointsEarned, setPointsEarned] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [percentCorrect, setPercentCorrect] = useState(0);\n  const [savingPoints, setSavingPoints] = useState(false);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [statusTimeoutRef, setStatusTimeoutRef] = useState(null);\n\n  // Show status message with auto-fade\n  const showStatus = useCallback((message, duration = 3000) => {\n    setStatusMessage(message);\n    \n    // Clear any existing timeout\n    if (statusTimeoutRef) {\n      clearTimeout(statusTimeoutRef);\n    }\n    \n    // Set new timeout to clear message\n    const timeoutId = setTimeout(() => {\n      setStatusMessage(\"\");\n    }, duration);\n    \n    setStatusTimeoutRef(timeoutId);\n  }, [statusTimeoutRef]);\n\n  // Load quiz data\n  useEffect(() => {\n    console.log(`Loading quiz from source: ${src}`);\n    console.log(`Quiz parameters - courseKey: ${courseKey}, lessonNumber: ${lessonNumber}`);\n    \n    fetch(src)\n      .then(response => response.text())\n      .then(data => {\n        const parsedData = JSON.parse(data);\n        console.log('Quiz data loaded:', parsedData);\n        setQuestions(parsedData.questions);\n        setTotal(parsedData.total);\n        setQuizTitle(parsedData.title || 'Quiz');\n      })\n      .catch(error => console.error('Error fetching quiz data:', error));\n  }, [src, courseKey, lessonNumber]);\n\n  // Fetch user progress data\n  useEffect(() => {\n    const fetchUserProgress = async () => {\n      try {\n        console.log('Fetching user progress data...');\n        const response = await call_api(null, \"points\", \"GET\");\n        \n        if (response) {\n          console.log('User progress data received:', JSON.stringify(response, null, 2));\n          setUserProgress(response);\n          \n          // Check if there's quiz data available\n          if (response.courses && \n              response.courses[courseKey] && \n              response.courses[courseKey].lessons && \n              response.courses[courseKey].lessons[lessonNumber] && \n              response.courses[courseKey].lessons[lessonNumber].activities && \n              response.courses[courseKey].lessons[lessonNumber].activities.quiz) {\n            \n            const quizData = response.courses[courseKey].lessons[lessonNumber].activities.quiz;\n            console.log('Existing quiz data found:', quizData);\n            \n            // Load previous scores for display, but don't automatically show results\n            // This allows the student to take the quiz again immediately\n            if (quizData.completed) {\n              // Just store the previous scores for comparison, don't show results yet\n              setPointsEarned(quizData.earned || 0);\n              setCorrectAnswers(quizData.correctAnswers || 0);\n              setPercentCorrect(quizData.percentCorrect || 0);\n              \n              // Optional: Show a welcome back message\n              if (showStatus) {\n                showStatus(`Your best score: ${quizData.earned} points`, 5000);\n              }\n            }\n          } else {\n            console.log('No existing quiz data found for this course/lesson');\n          }\n          \n          setLoading(false);\n        }\n      } catch (err) {\n        console.error('Error fetching course progress:', err);\n        setLoading(false);\n      }\n    };\n\n    fetchUserProgress();\n  }, [courseKey, lessonNumber, showStatus]);\n\n  // Handle answer selection\n  const handleAnswerChange = (questionIndex, optionIndex) => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionIndex]: optionIndex,\n    });\n  };\n\n  // Calculate score and update points on quiz submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    // Calculate correctAnswers\n    let correctCount = 0;\n    \n    questions.forEach((q, questionIndex) => {\n      const isCorrect = selectedAnswers[questionIndex] === q.correctAnswerIndex;\n      if (isCorrect) {\n        correctCount++;\n      }\n    });\n    \n    // Calculate percentage correct\n    const percentCorrect = Math.round((correctCount / questions.length) * 100);\n    console.log(`Quiz results: ${correctCount}/${questions.length} correct (${percentCorrect}%)`);\n    \n    // Calculate points earned based on quiz structure\n    // If all answers correct (100%), award 5 + 5 bonus = 10 points\n    // Otherwise, award based on percentage of 5 points (rounded)\n    let earnedPoints = 0;\n    \n    if (correctCount === questions.length) {\n      // Perfect score - gets full points plus bonus\n      earnedPoints = 10; // 5 regular + 5 bonus\n      console.log('Perfect score! Awarding 10 points (5 regular + 5 bonus)');\n    } else {\n      // Calculate based on percentage of base points (5)\n      // For example: 50% correct = 2.5 → rounds to 3 points\n      earnedPoints = Math.round((5 * correctCount) / questions.length);\n      console.log(`Partial score. Awarding ${earnedPoints} points`);\n    }\n    \n    // Update state\n    setCorrectAnswers(correctCount);\n    setPercentCorrect(percentCorrect);\n    setPointsEarned(earnedPoints);\n    setShowResults(true);\n    \n    // Only update backend if new score is higher than previous\n    const previousPoints = userProgress?.courses?.[courseKey]?.lessons?.[lessonNumber]?.activities?.quiz?.earned || 0;\n    console.log(`Previous best score: ${previousPoints} points`);\n    \n    if (earnedPoints > previousPoints) {\n      console.log(`New high score! Updating backend with ${earnedPoints} points`);\n      await updateBackend(earnedPoints, correctCount, percentCorrect);\n      showStatus(`✓ New high score: ${earnedPoints} points!`, 3000);\n    } else if (earnedPoints === previousPoints) {\n      console.log('Score matches previous best. Not updating backend.');\n      showStatus(\"You matched your previous score!\", 3000);\n    } else {\n      console.log('Score is lower than previous best. Not updating backend.');\n      showStatus(`Previous best: ${previousPoints} points`, 3000);\n    }\n  };\n  \n  // Update points in backend\n  const updateBackend = async (earnedPoints, correctCount, percentCorrect) => {\n    if (!userProgress) {\n      console.error('No user progress data available. Cannot update backend.');\n      return;\n    }\n    \n    try {\n      setSavingPoints(true);\n      showStatus(\"Saving quiz results...\");\n      \n      // Debug info\n      console.log('Quiz update parameters:', {\n        courseKey, \n        lessonNumber,\n        quizTitle,\n        earnedPoints,\n        correctCount,\n        percentCorrect\n      });\n      \n      console.log('User progress before update:', JSON.stringify(userProgress, null, 2));\n      \n      // Create a deep clone of the userProgress\n      const updatedProgress = JSON.parse(JSON.stringify(userProgress));\n      \n      // Ensure all needed objects exist with correct structure\n      if (!updatedProgress.courses[courseKey]) {\n        console.log(`Creating missing course: ${courseKey}`);\n        updatedProgress.courses[courseKey] = { \n          title: courseKey === \"astronomy\" ? \"Astronomy\" : courseKey,\n          coursePoints: 0, \n          completed: false,\n          lessons: {}\n        };\n      }\n      \n      if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n        console.log(`Creating missing lesson: ${lessonNumber}`);\n        updatedProgress.courses[courseKey].lessons[lessonNumber] = { \n          title: lessonNumber === \"lesson4\" ? \"The Universe\" : lessonNumber,\n          lessonPoints: 0, \n          completed: false,\n          activities: {} \n        };\n      }\n      \n      if (!updatedProgress.courses[courseKey].lessons[lessonNumber].activities) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities = {};\n      }\n      \n      // Get or create quiz activity\n      if (!updatedProgress.courses[courseKey].lessons[lessonNumber].activities.quiz) {\n        console.log('Creating missing quiz activity');\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities.quiz = {\n          title: quizTitle || \"Astronomy Quiz\",\n          type: \"quiz\",\n          completed: false,\n          points: 5,\n          extraPoints: 5,\n          questionsCount: questions.length,\n          correctAnswers: 0,\n          percentCorrect: 0,\n          earned: 0\n        };\n      }\n      \n      // Update quiz data\n      console.log('Updating quiz data with new results');\n      const quizData = updatedProgress.courses[courseKey].lessons[lessonNumber].activities.quiz;\n      quizData.completed = true;\n      quizData.correctAnswers = correctCount;\n      quizData.percentCorrect = percentCorrect;\n      quizData.earned = earnedPoints;\n      quizData.questionsCount = questions.length;\n      \n      // Recalculate lesson points from ALL activities\n      let lessonPoints = 0;\n      const activities = updatedProgress.courses[courseKey].lessons[lessonNumber].activities;\n      \n      Object.keys(activities).forEach(activityKey => {\n        const points = activities[activityKey].earned || 0;\n        lessonPoints += points;\n        console.log(`Activity ${activityKey} contributes ${points} points`);\n      });\n      \n      // Update lesson points\n      console.log(`Setting lesson points to ${lessonPoints}`);\n      updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints = lessonPoints;\n      \n      // Check if video is complete before marking lesson as completed\n      const videoComplete = updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video?.completed || \n                        (updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video?.percentWatched >= 95);\n      \n      // Only set lesson to complete if both quiz and video are complete\n      updatedProgress.courses[courseKey].lessons[lessonNumber].completed = videoComplete;\n      \n      console.log(`Setting lesson completion to ${videoComplete} (video completed: ${videoComplete}, quiz completed: true)`);\n      \n      // Recalculate course points\n      let coursePoints = 0;\n      Object.values(updatedProgress.courses[courseKey].lessons).forEach(lesson => {\n        const points = lesson.lessonPoints || 0;\n        coursePoints += points;\n        console.log(`Lesson \"${lesson.title}\" contributes ${points} points`);\n      });\n      \n      // Update course points\n      console.log(`Setting course points to ${coursePoints}`);\n      updatedProgress.courses[courseKey].coursePoints = coursePoints;\n      \n      // Recalculate total points\n      let totalPoints = 0;\n      Object.values(updatedProgress.courses).forEach(course => {\n        const points = course.coursePoints || 0;\n        totalPoints += points;\n        console.log(`Course \"${course.title}\" contributes ${points} points`);\n      });\n      \n      // Update total points\n      console.log(`Setting total points to ${totalPoints}`);\n      updatedProgress.totalPoints = totalPoints;\n      \n      console.log('Updated progress to be sent to backend:', JSON.stringify(updatedProgress, null, 2));\n      \n      // Send to backend and log response\n      console.log('Calling API with path \"points\" and method \"POST\"');\n      const response = await call_api(updatedProgress, \"points\", \"POST\");\n      \n      console.log('API response:', response);\n      \n      if (response) {\n        setUserProgress(updatedProgress);\n        showStatus(\"✓ Quiz results saved!\", 3000);\n      } else {\n        throw new Error(\"No response from API\");\n      }\n    } catch (error) {\n      console.error(\"Error updating points:\", error);\n      showStatus(\"❌ Error saving quiz results\", 3000);\n    } finally {\n      setSavingPoints(false);\n    }\n  };\n  \n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (statusTimeoutRef) {\n        clearTimeout(statusTimeoutRef);\n      }\n    };\n  }, [statusTimeoutRef]);\n\n  if (loading) {\n    return (\n      <div className=\"quiz-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading quiz content...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"quiz-container\">\n      <h2>{quizTitle}</h2>\n      \n      <div className=\"bonus-points-note\">\n        Getting all questions correct will reward you with extra points!\n      </div>\n      \n      {/* Previous best score banner */}\n      {!showResults && userProgress?.courses?.[courseKey]?.lessons?.[lessonNumber]?.activities?.quiz?.completed && (\n        <div className=\"previous-score-banner\">\n          <div className=\"score-info\">\n            <p className=\"previous-score-text\">\n              <span className=\"previous-label\">Your best score:</span> \n              <span className=\"previous-value\">{userProgress.courses[courseKey].lessons[lessonNumber].activities.quiz.earned} points</span>\n              <span className=\"previous-details\">\n                ({userProgress.courses[courseKey].lessons[lessonNumber].activities.quiz.correctAnswers} of {userProgress.courses[courseKey].lessons[lessonNumber].activities.quiz.questionsCount} correct)\n              </span>\n            </p>\n            {userProgress.courses[courseKey].lessons[lessonNumber].activities.quiz.earned === 10 && (\n              <p className=\"perfect-score-message\">Perfect score achieved! 🏆</p>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* Status message notification */}\n      {statusMessage && (\n        <div className=\"status-notification\" style={{\n          position: 'fixed',\n          top: '150px',\n          right: '20px',\n          padding: '10px 15px',\n          backgroundColor: statusMessage.includes(\"Error\") ? 'rgba(231, 76, 60, 0.8)' : '#357717',\n          color: 'white',\n          borderRadius: '5px',\n          fontWeight: 'bold',\n          zIndex: 1000,\n          boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n          animation: 'fadeIn 0.3s ease-out',\n          fontSize: '16px'\n        }}>\n          {statusMessage}\n        </div>\n      )}\n      \n      {showResults && (\n        <div className=\"quiz-results\">\n          <div className=\"results-summary\">\n            <div className=\"result-row\">\n              <span className=\"result-label\">Correct answers:</span> \n              <span className=\"result-value\">{correctAnswers} out of {questions.length}</span>\n              <span className=\"result-percentage\">({percentCorrect}%)</span>\n            </div>\n            <div className=\"result-row\">\n              <span className=\"result-label\">Points earned:</span>\n              <span className=\"result-value\">{pointsEarned} out of {correctAnswers === questions.length ? 10 : 5} points</span>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {questions.length > 0 ? (\n        <form onSubmit={handleSubmit}>\n          {questions.map((q, questionIndex) => (\n            <div key={questionIndex} className=\"quiz-question\">\n              <p>{q.question}</p>\n              {q.options.map((option, optionIndex) => {\n                const isCorrect = optionIndex === q.correctAnswerIndex;\n                const isSelected = selectedAnswers[questionIndex] === optionIndex;\n                const isIncorrect = isSelected && !isCorrect;\n                \n                return (\n                  <label\n                    key={optionIndex}\n                    style={{\n                      backgroundColor: showResults\n                        ? isCorrect\n                          ? 'lightgreen'\n                          : isIncorrect\n                          ? 'salmon'\n                          : 'transparent'\n                        : 'transparent',\n                    }}\n                    className={showResults && isCorrect ? 'correct-answer' : ''}\n                  >\n                    <input\n                      type=\"radio\"\n                      name={`question-${questionIndex}`}\n                      value={optionIndex}\n                      onChange={() => handleAnswerChange(questionIndex, optionIndex)}\n                      disabled={showResults}\n                      checked={selectedAnswers[questionIndex] === optionIndex}\n                    />\n                    {option}\n                  </label>\n                );\n              })}\n            </div>\n          ))}\n          {!showResults && (\n            <button type=\"submit\" disabled={Object.keys(selectedAnswers).length !== questions.length}>\n              Submit Answers\n            </button>\n          )}\n          {showResults && (\n            <div className=\"quiz-complete-container\">\n              <div className=\"quiz-complete-message\">\n                Quiz completed! {pointsEarned > (userProgress?.courses?.[courseKey]?.lessons?.[lessonNumber]?.activities?.quiz?.earned || 0) ? \n                  \"New high score saved!\" : \n                  \"Your best score is still saved.\"}\n              </div>\n              <button \n                onClick={() => {\n                  setShowResults(false);\n                  setSelectedAnswers({});\n                }}\n                className=\"retake-quiz-button\"\n              >\n                Retake Quiz\n              </button>\n            </div>\n          )}\n        </form>\n      ) : (\n        <p>Quiz data could not be loaded.</p>\n      )}\n    </div>\n  );\n};\n\nQuiz.propTypes = {\n  src: PropTypes.string.isRequired,\n  courseKey: PropTypes.string.isRequired,\n  lessonNumber: PropTypes.string.isRequired\n};\n\nexport default Quiz;"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","Footer","_jsx","className","children","_jsxs","rel","FaFacebook","size","style","color","marginRight","FaLinkedin","FaTiktok","FaInstagram","FaTwitter","_ref","overlayText","Navbar","check","setCheck","useState","click","setClick","setColor","activeDropdown","setActiveDropdown","navigate","useNavigate","addEventListener","changeColor","scrollY","scrollToTop","scrollTo","toggleDropdown","index","innerWidth","useEffect","axios","get","withCredentials","success","catch","Link","to","src","logo","alt","onClick","updateOnline","e","preventDefault","handleClick","prevState","FaTimes","FaBars","_userProgress$courses7","_userProgress$courses8","_userProgress$courses9","_userProgress$courses10","_userProgress$courses11","_userProgress$courses12","_userProgress$courses13","_userProgress$courses14","_userProgress$courses15","_userProgress$courses16","_userProgress$courses17","_userProgress$courses18","courseKey","lessonNumber","questions","setQuestions","selectedAnswers","setSelectedAnswers","showResults","setShowResults","total","setTotal","quizTitle","setQuizTitle","userProgress","setUserProgress","loading","setLoading","pointsEarned","setPointsEarned","correctAnswers","setCorrectAnswers","percentCorrect","setPercentCorrect","savingPoints","setSavingPoints","statusMessage","setStatusMessage","statusTimeoutRef","setStatusTimeoutRef","showStatus","useCallback","duration","arguments","length","undefined","clearTimeout","timeoutId","setTimeout","console","log","text","parsedData","parse","title","courses","lessons","activities","quiz","quizData","completed","earned","err","fetchUserProgress","updateBackend","earnedPoints","correctCount","_updatedProgress$cour","_updatedProgress$cour2","updatedProgress","coursePoints","lessonPoints","type","points","extraPoints","questionsCount","Object","keys","forEach","activityKey","videoComplete","video","percentWatched","values","lesson","totalPoints","course","position","top","right","padding","backgroundColor","borderRadius","fontWeight","zIndex","boxShadow","animation","fontSize","onSubmit","_userProgress$courses","_userProgress$courses2","_userProgress$courses3","_userProgress$courses4","_userProgress$courses5","_userProgress$courses6","event","q","questionIndex","correctAnswerIndex","Math","round","previousPoints","map","question","options","option","optionIndex","isCorrect","isIncorrect","name","value","onChange","handleAnswerChange","disabled","checked"],"sourceRoot":""}