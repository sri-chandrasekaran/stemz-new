{"version":3,"file":"static/js/6214.e70072d4.chunk.js","mappings":"mFA6FAA,EAAOC,QAAU,CAAEC,SA7DnB,SAAkBC,EAASC,EAAQC,GACjC,MAAMC,EAAMC,2CAAyBH,EAC/BI,EAAQC,aAAaC,QAAQ,SAE7BC,EAAU,CACd,eAAgB,oBAGdH,IACFG,EAAuB,cAAI,UAAUH,KAGvC,MAqCMI,EAAe,CACnBP,OAAQA,EACRM,QAASA,GAOX,MAJI,CAAC,OAAQ,MAAO,QAAS,UAAUE,SAASR,IAAWF,IACzDS,EAAaE,KAAOC,KAAKC,UAAUb,IAG9Bc,MAAMX,EAAKM,GAAcM,MA9CTC,UACrB,IAAIC,EAEJ,IACEA,QAAaC,EAASC,MACxB,CAAE,MAAOC,GACPH,EAAO,CACLI,QAASH,EAASI,YAAc,gBAChCC,OAAQL,EAASK,OAErB,CAGA,GAnD0BC,EAACN,EAAUD,KAAU,IAADQ,EAAAC,EAAAC,EAAAC,EAAAC,EAUhD,GARsB,MAApBX,EAASK,QACW,MAApBL,EAASK,SACL,OAAJN,QAAI,IAAJA,GAAa,QAATQ,EAAJR,EAAMI,eAAO,IAAAI,OAAT,EAAJA,EAAeK,cAAcpB,SAAS,YAClC,OAAJO,QAAI,IAAJA,GAAa,QAATS,EAAJT,EAAMI,eAAO,IAAAK,OAAT,EAAJA,EAAeI,cAAcpB,SAAS,mBAClC,OAAJO,QAAI,IAAJA,GAAa,QAATU,EAAJV,EAAMI,eAAO,IAAAM,OAAT,EAAJA,EAAeG,cAAcpB,SAAS,cAClC,OAAJO,QAAI,IAAJA,GAAW,QAAPW,EAAJX,EAAMG,aAAK,IAAAQ,OAAP,EAAJA,EAAaE,cAAcpB,SAAS,YAChC,OAAJO,QAAI,IAAJA,GAAW,QAAPY,EAAJZ,EAAMG,aAAK,IAAAS,OAAP,EAAJA,EAAaC,cAAcpB,SAAS,iBAElB,CAElBJ,aAAayB,WAAW,SAGxB,MAAMC,EAAcC,OAAOC,SAASC,SAC9BC,EAAYC,mBAAmBL,GAC/BX,EAAUgB,mBAAmB,kDAGnC,OADAJ,OAAOC,SAASI,KAAO,oBAAoBF,aAAqBf,KACzD,CACT,CAEA,OAAO,CAAK,EA4BNG,CAAsBN,EAAUD,GAAO,CACzC,MAAMG,EAAQ,IAAImB,MAAM,wCAMxB,MALAnB,EAAMF,SAAW,CACfK,OAAQL,EAASK,OACjBD,WAAYJ,EAASI,WACrBL,KAAMA,GAEFG,CACR,CAGA,IAAKF,EAASsB,GAAI,CAChB,MAAMpB,EAAQ,IAAImB,MAAM,QAAQrB,EAASK,WAAWL,EAASI,cAM7D,MALAF,EAAMF,SAAW,CACfK,OAAQL,EAASK,OACjBD,WAAYJ,EAASI,WACrBL,KAAMA,GAEFG,CACR,CAEA,OAAOH,CAAI,GAaf,E,yLCpFA,MAAMwB,EAAgB,CACpBC,EAAG,KACHC,EAAG,IACHC,EAAG,KAGU,SAASC,IAEtB,MAAMC,GAAWC,EAAAA,EAAAA,OAGVC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,CACrCG,UAAW,GACXC,UAAW,GACXC,cAAe,CACbb,EAAG,GACHC,EAAG,GACHC,EAAG,OAGAY,EAAaC,IAAkBP,EAAAA,EAAAA,WAAS,IACxCQ,EAAgBC,IAAqBT,EAAAA,EAAAA,WAAS,IAG9CU,EAAcC,IAAmBX,EAAAA,EAAAA,UAAS,OAC1CY,EAASC,IAAcb,EAAAA,EAAAA,WAAS,IAChCc,EAAiBC,IAAsBf,EAAAA,EAAAA,WAAS,IAChDgB,EAAoBC,IAAyBjB,EAAAA,EAAAA,WAAS,IACtDkB,EAAcC,IAAmBnB,EAAAA,EAAAA,UAAS,IAC1CoB,EAAeC,IAAoBrB,EAAAA,EAAAA,UAAS,IAG7CsB,EAAe,UACfC,EAAY,aAGZC,GAAmBC,EAAAA,EAAAA,QAAO,MAG1BC,EAAa,SAACvD,GAA8B,IAArBwD,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACtCP,EAAiBlD,GACbqD,EAAiBO,SAASC,aAAaR,EAAiBO,SAC5DP,EAAiBO,QAAUE,YAAW,IAAMZ,EAAiB,KAAKM,EACpE,GAGAO,EAAAA,EAAAA,YAAU,KACYpE,WAElB,GADcV,aAAaC,QAAQ,SAMnC,IACE,MAAMW,QAAiBnB,EAAAA,EAAAA,UAAS,KAAM,cAAe,QACjDmB,GAAYA,EAASmE,SACvBpB,GAAmB,GACnBF,GAAW,KAEXzD,aAAayB,WAAW,SACxBe,EAAS,UAEb,CAAE,MAAO1B,GACPkE,QAAQlE,MAAM,4BAA6BA,GAC3Cd,aAAayB,WAAW,SACxBe,EAAS,SACX,MAjBEA,EAAS,SAiBX,EAEFyC,EAAa,GACZ,CAACzC,KAGJsC,EAAAA,EAAAA,YAAU,KACR,IAAKpB,EAAiB,OAEIhD,WACxB,IACE,MAAME,QAAiBnB,EAAAA,EAAAA,UAAS,KAAM,SAAU,OAChD,GAAImB,EAAU,CAIZ,GAHA2C,EAAgB3C,GAGZA,EAASsE,SAAWtE,EAASsE,QAAQf,GAAY,CACnD,MAAMgB,EAASvE,EAASsE,QAAQf,GAAWiB,QAAQlB,GAEnD,GAAIiB,GAAUA,EAAOE,YAAcF,EAAOE,WAAWC,UAAW,CAC9D,MAAMC,EACJJ,EAAOE,WAAWC,UAAUE,YAAa,EACrCC,EAAcN,EAAOE,WAAWC,UAAUI,QAAU,EAE1D7B,EAAsB0B,GACtBxB,EAAgB0B,EAClB,CACF,CACAhC,GAAW,EACb,CACF,CAAE,MAAOkC,GACPX,QAAQlE,MAAM,kCAAmC6E,GACjDlC,GAAW,EACb,GAEFmC,EAAmB,GAClB,CAAClC,EAAiBS,EAAWD,IAEhC,MAAM2B,EAAoBA,CAACC,EAAOC,KAChC,GAAID,EAAME,WAAW,kBAAmB,CACtC,MAAMC,EAAQH,EAAMI,MAAM,KAAK,GAC/BpD,GAAYqD,IAAI,IACXA,EACHlD,cAAe,IACVkD,EAAKlD,cACR,CAACgD,GAAQF,MAGf,MACEjD,GAAYqD,IAAI,IACXA,EACH,CAACL,GAAQC,KAEb,EAsBIK,EAAyBH,GACtBpD,EAAQI,cAAcgD,KAAW9D,EAAc8D,GAGlDI,EAAsBA,IACnBC,OAAOC,KAAKpE,GAAeqE,OAAOP,GACvCG,EAAsBH,KAuHpBQ,EAAuBA,IACpB5D,EAAQG,UAAU0D,OAAOjC,OAAS,GAAKrB,EAIhD,OAAII,GAEAmD,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLC,UAAW,QACXC,WAAY,QACZC,OAAQ,EACRC,QAAS,OACTC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,qBACZC,UAEFC,EAAAA,EAAAA,MAAA,OAAKV,MAAO,CAAEW,UAAW,UAAWF,SAAA,EAClCV,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLY,OAAQ,oBACRC,UAAW,oBACXC,aAAc,MACdC,MAAO,OACPC,OAAQ,OACRC,UAAW,0BACXd,OAAQ,kBAGZJ,EAAAA,EAAAA,KAAA,KAAAU,SAAG,kCACHV,EAAAA,EAAAA,KAAA,SAAAU,SAAQ,uKAYdC,EAAAA,EAAAA,MAAA,OACEV,MAAO,CACLC,UAAW,QACXC,WAAY,QACZC,OAAQ,IACRC,QAAS,OACTI,WAAY,oBACZU,SAAU,YACVT,SAAA,CAGDrD,IACC2C,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLkB,SAAU,QACVC,IAAK,QACLC,MAAO,OACPhB,QAAS,YACTiB,gBAAiBjE,EAAc5D,SAAS,SACpC,yBACA,UACJ8H,MAAO,QACPR,aAAc,MACdS,WAAY,OACZC,OAAQ,IACRC,UAAW,6BACXR,UAAW,uBACXS,SAAU,QACVjB,SAEDrD,KAKL2C,EAAAA,EAAAA,KAAA,UACE4B,QAnMeC,KACnB7G,OAAO8G,QAAQC,MAAM,EAmMjB9B,MAAO,CACLkB,SAAU,WACVC,IAAK,OACLY,KAAM,OACNT,MAAO,QACPV,OAAQ,OACRE,aAAc,MACdZ,WAAYpE,EAAa,UAAY,UACrCiF,MAAO,OACPC,OAAQ,OACRX,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChB0B,OAAQ,UACRC,WAAY,gBACZP,SAAU,OACVH,WAAY,OACZW,UAAWpG,EAAa,aAAe,YAEzCqG,aAAcA,IAAMpG,GAAc,GAClCqG,aAAcA,IAAMrG,GAAc,GAAO0E,SAC1C,YAIDC,EAAAA,EAAAA,MAAA,OAAKV,MAAO,CAAEqC,SAAU,QAASlC,OAAQ,UAAWM,SAAA,EAElDV,EAAAA,EAAAA,KAAA,OACEuC,IAAKC,EACLC,IAAI,iBACJxC,MAAO,CACLqC,SAAU,QACVhC,QAAS,QACTF,OAAQ,kBAGZJ,EAAAA,EAAAA,KAAA,MACEC,MAAO,CACLsB,MAAO,UACPI,SAAU,OACVe,aAAc,OACdjC,WAAY,uBACZG,UAAW,UACXF,SACH,4BAGDV,EAAAA,EAAAA,KAAA,MACEC,MAAO,CACLsB,MAAO,UACPI,SAAU,OACVe,aAAc,OACdjC,WAAY,uBACZG,UAAW,UACXF,SACH,0BAKDC,EAAAA,EAAAA,MAAA,OACEV,MAAO,CACLyC,aAAc,OACdrC,QAAS,YACTU,aAAc,MACdO,gBAAiB,UACjBV,UAAW,SACX+B,WAAY1F,EACR,oBACA,kBACJyD,SAAA,EAEFV,EAAAA,EAAAA,KAAA,QACEC,MAAO,CACLuB,WAAY,OACZoB,YAAa,OACbrB,MAAO,WACPb,SACH,gBAGDV,EAAAA,EAAAA,KAAA,QACEC,MAAO,CACLsB,MAAOtE,EAAqB,UAAY,UACxCuE,WAAYvE,EAAqB,OAAS,UAC1CyD,SAEDzD,EAAqB,YAAc,mBAEtC0D,EAAAA,EAAAA,MAAA,QACEV,MAAO,CACL4C,WAAY,OACZtB,MAAO,WACPb,SAAA,CACH,IACGvD,EAAa,IAAmB,IAAjBA,EAAqB,QAAU,SAAS,WAK7DwD,EAAAA,EAAAA,MAAA,OACEV,MAAO,CACLqB,gBAAiB,UACjBP,aAAc,OACdV,QAAS,OACTqC,aAAc,OACdhB,UAAW,6BACXhB,SAAA,EAEFV,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL0B,SAAU,OACVH,WAAY,OACZkB,aAAc,OACdnB,MAAO,WACPb,SACH,uBAGDC,EAAAA,EAAAA,MAAA,MACEV,MAAO,CACL6C,cAAe,OACfC,YAAa,OACbL,aAAc,QACdhC,SAAA,EAEFV,EAAAA,EAAAA,KAAA,MACEC,MAAO,CACLyC,aAAc,MACdM,WAAY,OACZtC,SACH,mBAGDV,EAAAA,EAAAA,KAAA,MACEC,MAAO,CACLyC,aAAc,MACdM,WAAY,OACZtC,SACH,sCAKHV,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL0B,SAAU,OACVH,WAAY,OACZkB,aAAc,OACdnB,MAAO,WACPb,SACH,mBAGDV,EAAAA,EAAAA,KAAA,KACEC,MAAO,CACLyC,aAAc,MACdM,WAAY,OACZtC,SACH,wSAUHV,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLqC,SAAU,QACVlC,OAAQ,YACRQ,UAAW,UACXF,UAEFV,EAAAA,EAAAA,KAAA,OACEuC,IAAKU,EACLR,IAAI,6BACJxC,MAAO,CACLe,MAAO,OACPsB,SAAU,QACVrB,OAAQ,OACRyB,aAAc,aAMpB/B,EAAAA,EAAAA,MAAA,OACEV,MAAO,CACLqB,gBAAiB,UACjBP,aAAc,OACdV,QAAS,OACTqC,aAAc,OACdhB,UAAW,6BACXhB,SAAA,EAGFC,EAAAA,EAAAA,MAAA,OACEV,MAAO,CACLyC,aAAc,OACdf,SAAU,OACVqB,WAAY,OACZtC,SAAA,EAEFV,EAAAA,EAAAA,KAAA,QACEC,MAAO,CACLuB,WAAY,OACZoB,YAAa,OACblC,SACH,OAEM,yCAEPV,EAAAA,EAAAA,KAAA,YACEZ,MAAOlD,EAAQG,UACf6G,SAAWC,GAAMjE,EAAkB,YAAaiE,EAAEnK,OAAOoG,OACzDgE,YAAY,uEACZnD,MAAO,CACLe,MAAO,OACPX,QAAS,OACTgD,UAAW,OACXX,aAAc,OACd3B,aAAc,MACdF,OAAQ,iBACRc,SAAU,OACVV,OAAQ,eAMdN,EAAAA,EAAAA,MAAA,OACEV,MAAO,CACLyC,aAAc,OACdf,SAAU,OACVqB,WAAY,OACZtC,SAAA,EAEFV,EAAAA,EAAAA,KAAA,QACEC,MAAO,CACLuB,WAAY,OACZoB,YAAa,OACblC,SACH,OAEM,sEAEPV,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLK,QAAS,OACTgD,oBAAqB,iBACrBC,IAAK,OACLF,UAAW,QACX3C,SAED,CAAC,IAAK,IAAK,KAAK8C,KAAKlE,IACpBqB,EAAAA,EAAAA,MAAA,OAEEV,MAAO,CACLK,QAAS,OACTmD,cAAe,SACfjD,WAAY,UACZE,SAAA,EAEFC,EAAAA,EAAAA,MAAA,SACEV,MAAO,CACLuB,WAAY,OACZkB,aAAc,OACdhC,SAAA,CACH,SACQpB,MAETU,EAAAA,EAAAA,KAAA,SACE0D,KAAK,SACLC,IAAI,IACJC,IAAI,KACJxE,MAAOlD,EAAQI,cAAcgD,GAC7B4D,SAAWC,GACTjE,EACE,iBAAiBI,IACjB6D,EAAEnK,OAAOoG,OAGba,MAAO,CACLe,MAAO,OACPX,QAAS,MACTU,aAAc,MACdF,OAAQ,iBACRD,UAAW,YACPrE,GAAe,CACjB+E,gBAAiB7B,EAAsBH,GACnC,UACA,UACJuB,OAAQpB,EAAsBH,GAC1B,oBACA,wBAIT/C,IACCyD,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLsB,MAAO9B,EAAsBH,GACzB,UACA,UACJ+D,UAAW,OACX3C,SAEDjB,EAAsBH,GAAS,SAAM,aAnDrCA,OA0DV/C,IACCyD,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLoD,UAAW,OACXzC,UAAW,SACXP,QAAS,OACTiB,gBAAiB5B,IACb,UACA,UACJqB,aAAc,MACdW,UAAW,8BACXhB,UAEFV,EAAAA,EAAAA,KAAA,KACEC,MAAO,CACLsB,MAAO7B,IAAwB,UAAY,UAC3CiC,SAAU,OACVH,WAAY,OACZpB,OAAQ,GACRM,SAEAxE,EAAQI,cAAcb,GACvBS,EAAQI,cAAcZ,GACtBQ,EAAQI,cAAcX,EAEnB+D,IACA,oDACA,2EAHA,+DAUZiB,EAAAA,EAAAA,MAAA,OACEV,MAAO,CACLyC,aAAc,OACdf,SAAU,OACVqB,WAAY,OACZtC,SAAA,EAEFV,EAAAA,EAAAA,KAAA,QACEC,MAAO,CACLuB,WAAY,OACZoB,YAAa,OACblC,SACH,OAEM,yBAKTC,EAAAA,EAAAA,MAAA,OACEV,MAAO,CACLK,QAAS,OACTC,eAAgB,SAChB8C,UAAW,OACXX,aAAc,QACdhC,SAAA,EAEFV,EAAAA,EAAAA,KAAA,UACE4B,QA5lBSiC,KACnBrH,GAAe,GACfE,GAAkB,EAAK,EA2lBbuD,MAAO,CACLqB,gBAAiB,UACjBC,MAAO,QACPlB,QAAS,YACTU,aAAc,MACdF,OAAQ,OACRoB,OAAQ,UACRW,YAAa,OACbjB,SAAU,OACVO,WAAY,iBACZxB,SACH,mBAGDV,EAAAA,EAAAA,KAAA,UACE4B,QAvmBSkC,KACnB3H,EAAW,CACTC,UAAW,GACXC,UAAW,GACXC,cAAe,CACbb,EAAG,GACHC,EAAG,GACHC,EAAG,MAGPa,GAAe,GACfE,GAAkB,EAAM,EA6lBduD,MAAO,CACLqB,gBAAiB,UACjBC,MAAO,QACPlB,QAAS,YACTU,aAAc,MACdF,OAAQ,OACRoB,OAAQ,UACRN,SAAU,OACVO,WAAY,iBACZxB,SACH,cAMHV,EAAAA,EAAAA,KAAA,UACE4B,QA5lBamC,KAAO,IAADC,EAE3B,IAAIC,EAAe,EAGf/H,EAAQG,WAAaH,EAAQG,UAAU0D,OAAOjC,OAAS,IACzDmG,GAAgB,GAIlB,MAAMC,EAAqBvE,OAAOC,KAAKpE,GAAe2I,QAAQ7E,GAC5DG,EAAsBH,KACtBxB,OAGFmG,GAAgBC,EAGhBD,EAAeG,KAAKT,IAAIM,EAAc,GAGtC,MAAMI,EAAgBD,KAAKR,IAAIK,EAAc9G,GAG7CD,GAAsB,GACtBE,EAAgBiH,GAGhB,MAAMC,EAAkB,IAAK3H,GAGxB2H,EAAgB/F,UAAS+F,EAAgB/F,QAAU,CAAC,GACpD+F,EAAgB/F,QAAQf,KAC3B8G,EAAgB/F,QAAQf,GAAa,CAAEiB,QAAS,CAAC,EAAG8F,MAAO,eAExDD,EAAgB/F,QAAQf,GAAWiB,UACtC6F,EAAgB/F,QAAQf,GAAWiB,QAAU,CAAC,GAE3C6F,EAAgB/F,QAAQf,GAAWiB,QAAQlB,KAC9C+G,EAAgB/F,QAAQf,GAAWiB,QAAQlB,GAAgB,CACzDmB,WAAY,CAAC,EACb6F,MAAO,0BAGND,EAAgB/F,QAAQf,GAAWiB,QAAQlB,GAAcmB,aAC5D4F,EAAgB/F,QAAQf,GAAWiB,QAAQlB,GAAcmB,WAAa,CAAC,GAKvE4F,EAAgB/F,QAAQf,GAAWiB,QAAQlB,GAAcmB,WACtDC,UAGL2F,EAAgB/F,QAAQf,GAAWiB,QACjClB,GACAmB,WAAWC,UAAY,CACvBE,WAAW,EACXE,OAAQsF,EACRG,OAAQ,EACRd,KAAM,YACNa,MAAO,yBAITD,EAAgB/F,QAAQf,GAAWiB,QAAQlB,GAAckH,aACvDR,EAIyE,QAD3ED,EACEM,EAAgB/F,QAAQf,GAAWiB,QAAQlB,GAAcmB,WAAWgG,aAAK,IAAAV,GAAzEA,EACInF,YAEJyF,EAAgB/F,QAAQf,GAAWiB,QAAQlB,GAAcsB,WAAY,GAIvE,IAAI8F,EAAe,EACnBhF,OAAOiF,OAAON,EAAgB/F,QAAQf,GAAWiB,SAASoG,SACvDrG,IACCmG,GAAgBnG,EAAOiG,cAAgB,CAAC,IAG5CH,EAAgB/F,QAAQf,GAAWmH,aAAeA,EAGlD,IAAIG,EAAc,EAClBnF,OAAOiF,OAAON,EAAgB/F,SAASsG,SAASE,IAC9CD,GAAeC,EAAOJ,cAAgB,CAAC,IAEzCL,EAAgBQ,YAAcA,GAG9BhM,EAAAA,EAAAA,UAASwL,EAAiB,SAAU,QACjCxK,MAAMG,IACDA,IACF2C,EAAgB0H,GAChB3G,EACE,wCAAmCsG,YACnC,KAEJ,IAEDe,OAAO7K,IACNkE,QAAQlE,MAAM,gBAAiBA,GAC/BwD,EAAW,+BAA2B,IAAK,GAC3C,EAmfIsH,UAAWnF,IACXG,MAAO,CACLqB,gBAAiBxB,IAAyB,UAAY,UACtDyB,MAAO,QACPlB,QAAS,YACTU,aAAc,MACdF,OAAQ,OACRoB,OAAQnC,IAAyB,UAAY,UAC7CQ,QAAS,QACTF,OAAQ,iBACRuB,SAAU,OACVH,WAAY,OACZU,WAAY,gBACZR,UAAW,6BACXV,MAAO,MACPsB,SAAU,SACV5B,SAEDzD,IAAuB6C,IACpB,6BACA7C,GAAsB6C,IACtB,kCACAA,IACA,gCACA,iCAGL7C,IACC0D,EAAAA,EAAAA,MAAA,KACEV,MAAO,CACLW,UAAW,SACXW,MAAO,UACP8B,UAAW,QACX3C,SAAA,CACH,qDACoDvD,EAAc,IAAI,4BAEpE2C,KACC,gDAINE,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLoD,UAAW,OACXzC,UAAW,SACXW,MAAO,OACPI,SAAU,QACVjB,SACH,uDAMLV,EAAAA,EAAAA,KAAA,SAAOkF,KAAG,EAAAxE,SAAE,keAyBlB,C","sources":["api.js","pages/statistics/StatWorksheet3.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React, { useState, useRef, useEffect } from \"react\";\nimport stemzLearningLogo from \"../../assets/logo.png\";\nimport statsWorksheet4 from \"../../assets/statsworksheet4.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { call_api } from \"../../api\";\n\n// Correct answers for student counts\nconst correctCounts = {\n  A: \"10\",\n  B: \"7\",\n  C: \"3\",\n};\n\nexport default function StatWorkSheet4() {\n  // Navigation\n  const navigate = useNavigate();\n\n  // State variables\n  const [isHovering, setIsHovering] = useState(false);\n  const [answers, setAnswers] = useState({\n    graphType: \"\",\n    reasoning: \"\",\n    studentCounts: {\n      A: \"\",\n      B: \"\",\n      C: \"\",\n    },\n  });\n  const [showResults, setShowResults] = useState(false);\n  const [answersChecked, setAnswersChecked] = useState(false);\n\n  // Progress tracking states\n  const [userProgress, setUserProgress] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [worksheetCompleted, setWorksheetCompleted] = useState(false);\n  const [pointsEarned, setPointsEarned] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  // Constants for progress tracking\n  const lessonNumber = \"lesson4\";\n  const courseKey = \"statistics\";\n\n  // Refs\n  const statusTimeoutRef = useRef(null);\n\n  // Show status message with auto-fade\n  const showStatus = (message, duration = 3000) => {\n    setStatusMessage(message);\n    if (statusTimeoutRef.current) clearTimeout(statusTimeoutRef.current);\n    statusTimeoutRef.current = setTimeout(() => setStatusMessage(\"\"), duration);\n  };\n\n  // Token verification\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      try {\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        if (response && response.success) {\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Token verification error:\", error);\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n\n  // Fetch user progress data\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    const fetchUserProgress = async () => {\n      try {\n        const response = await call_api(null, \"points\", \"GET\");\n        if (response) {\n          setUserProgress(response);\n\n          // Check if there's course data available\n          if (response.courses && response.courses[courseKey]) {\n            const lesson = response.courses[courseKey].lessons[lessonNumber];\n\n            if (lesson && lesson.activities && lesson.activities.worksheet) {\n              const savedCompleted =\n                lesson.activities.worksheet.completed || false;\n              const savedPoints = lesson.activities.worksheet.earned || 0;\n\n              setWorksheetCompleted(savedCompleted);\n              setPointsEarned(savedPoints);\n            }\n          }\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error fetching course progress:\", err);\n        setLoading(false);\n      }\n    };\n    fetchUserProgress();\n  }, [isAuthenticated, courseKey, lessonNumber]);\n\n  const handleInputChange = (field, value) => {\n    if (field.startsWith(\"studentCounts.\")) {\n      const grade = field.split(\".\")[1];\n      setAnswers((prev) => ({\n        ...prev,\n        studentCounts: {\n          ...prev.studentCounts,\n          [grade]: value,\n        },\n      }));\n    } else {\n      setAnswers((prev) => ({\n        ...prev,\n        [field]: value,\n      }));\n    }\n  };\n\n  const checkAnswers = () => {\n    setShowResults(true);\n    setAnswersChecked(true);\n  };\n\n  const resetAnswers = () => {\n    setAnswers({\n      graphType: \"\",\n      reasoning: \"\",\n      studentCounts: {\n        A: \"\",\n        B: \"\",\n        C: \"\",\n      },\n    });\n    setShowResults(false);\n    setAnswersChecked(false);\n  };\n\n  const isStudentCountCorrect = (grade) => {\n    return answers.studentCounts[grade] === correctCounts[grade];\n  };\n\n  const areAllCountsCorrect = () => {\n    return Object.keys(correctCounts).every((grade) =>\n      isStudentCountCorrect(grade)\n    );\n  };\n\n  const handleGoBack = () => {\n    window.history.back();\n  };\n\n  // Mark worksheet as completed\n  const handleComplete = () => {\n    // Calculate points based on correct answers (up to 5 total points)\n    let earnedPoints = 0;\n\n    // Award points for question 1 (reasoning/graph type)\n    if (answers.reasoning && answers.reasoning.trim().length > 0) {\n      earnedPoints += 2; // 2 points for writing something meaningful\n    }\n\n    // Award points for question 2 (student counts)\n    const correctCountsCount = Object.keys(correctCounts).filter((grade) =>\n      isStudentCountCorrect(grade)\n    ).length;\n\n    // Scale the points: 0 correct = 0 points, 1 correct = 1 point, 2 correct = 2 points, 3 correct = 3 points\n    earnedPoints += correctCountsCount;\n\n    // Ensure maximum points is 5\n    earnedPoints = Math.min(earnedPoints, 5);\n\n    // Keep the highest score ever achieved\n    const highestPoints = Math.max(earnedPoints, pointsEarned);\n\n    // Mark as completed\n    setWorksheetCompleted(true);\n    setPointsEarned(highestPoints);\n\n    // Update the backend\n    const updatedProgress = { ...userProgress };\n\n    // Ensure the path exists\n    if (!updatedProgress.courses) updatedProgress.courses = {};\n    if (!updatedProgress.courses[courseKey]) {\n      updatedProgress.courses[courseKey] = { lessons: {}, title: \"Statistics\" };\n    }\n    if (!updatedProgress.courses[courseKey].lessons) {\n      updatedProgress.courses[courseKey].lessons = {};\n    }\n    if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n      updatedProgress.courses[courseKey].lessons[lessonNumber] = {\n        activities: {},\n        title: \"Create Your Own Graph\",\n      };\n    }\n    if (!updatedProgress.courses[courseKey].lessons[lessonNumber].activities) {\n      updatedProgress.courses[courseKey].lessons[lessonNumber].activities = {};\n    }\n\n    // Get the current worksheet data\n    const currentWorksheet =\n      updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n        .worksheet || {};\n\n    // Set worksheet data\n    updatedProgress.courses[courseKey].lessons[\n      lessonNumber\n    ].activities.worksheet = {\n      completed: true,\n      earned: highestPoints,\n      points: 5, // Total possible points is 5\n      type: \"worksheet\",\n      title: \"Create Your Own Graph\",\n    };\n\n    // Update lesson points\n    updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints =\n      earnedPoints;\n\n    // Mark lesson as completed if video is also completed\n    if (\n      updatedProgress.courses[courseKey].lessons[lessonNumber].activities.video\n        ?.completed\n    ) {\n      updatedProgress.courses[courseKey].lessons[lessonNumber].completed = true;\n    }\n\n    // Update course points\n    let coursePoints = 0;\n    Object.values(updatedProgress.courses[courseKey].lessons).forEach(\n      (lesson) => {\n        coursePoints += lesson.lessonPoints || 0;\n      }\n    );\n    updatedProgress.courses[courseKey].coursePoints = coursePoints;\n\n    // Update total points\n    let totalPoints = 0;\n    Object.values(updatedProgress.courses).forEach((course) => {\n      totalPoints += course.coursePoints || 0;\n    });\n    updatedProgress.totalPoints = totalPoints;\n\n    // Send to API\n    call_api(updatedProgress, \"points\", \"POST\")\n      .then((response) => {\n        if (response) {\n          setUserProgress(updatedProgress);\n          showStatus(\n            `✓ Progress saved! You've earned ${earnedPoints} points!`,\n            3000\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(\"Update error:\", error);\n        showStatus(\"❌ Error saving progress\", 3000);\n      });\n  };\n\n  // Check if completion button should be enabled - allow resubmission even when already completed\n  const canCompleteWorksheet = () => {\n    return answers.reasoning.trim().length > 0 && answersChecked;\n  };\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div\n        style={{\n          minHeight: \"100vh\",\n          background: \"white\",\n          margin: 0,\n          padding: \"32px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <div\n            style={{\n              border: \"4px solid #f3f3f3\",\n              borderTop: \"4px solid #357717\",\n              borderRadius: \"50%\",\n              width: \"50px\",\n              height: \"50px\",\n              animation: \"spin 2s linear infinite\",\n              margin: \"0 auto 20px\",\n            }}\n          ></div>\n          <p>Loading worksheet content...</p>\n          <style>{`\n            @keyframes spin {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n          `}</style>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        background: \"white\",\n        margin: \"0\",\n        padding: \"32px\",\n        fontFamily: \"Arial, sans-serif\",\n        position: \"relative\",\n      }}\n    >\n      {/* Status message */}\n      {statusMessage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"150px\",\n            right: \"20px\",\n            padding: \"10px 15px\",\n            backgroundColor: statusMessage.includes(\"Error\")\n              ? \"rgba(231, 76, 60, 0.8)\"\n              : \"#357717\",\n            color: \"white\",\n            borderRadius: \"5px\",\n            fontWeight: \"bold\",\n            zIndex: 1000,\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.2)\",\n            animation: \"fadeIn 0.3s ease-out\",\n            fontSize: \"16px\",\n          }}\n        >\n          {statusMessage}\n        </div>\n      )}\n\n      {/* Back button */}\n      <button\n        onClick={handleGoBack}\n        style={{\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"50%\",\n          background: isHovering ? \"#3cb371\" : \"#357717\",\n          width: \"60px\",\n          height: \"60px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          cursor: \"pointer\",\n          transition: \"all 0.3s ease\",\n          fontSize: \"36px\",\n          fontWeight: \"bold\",\n          transform: isHovering ? \"scale(0.9)\" : \"scale(1)\",\n        }}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n      >\n        &#8592;\n      </button>\n\n      <div style={{ maxWidth: \"896px\", margin: \"0 auto\" }}>\n        {/* Header */}\n        <img\n          src={stemzLearningLogo}\n          alt=\"STEMZ Learning\"\n          style={{\n            maxWidth: \"300px\",\n            display: \"block\",\n            margin: \"0 auto 30px\",\n          }}\n        />\n        <h1\n          style={{\n            color: \"#254E17\",\n            fontSize: \"48px\",\n            marginBottom: \"10px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Create Your Own Graph!\n        </h1>\n        <h2\n          style={{\n            color: \"#357717\",\n            fontSize: \"36px\",\n            marginBottom: \"30px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Statistics: Lesson 4\n        </h2>\n\n        {/* Progress status */}\n        <div\n          style={{\n            marginBottom: \"20px\",\n            padding: \"10px 15px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#f0f0f0\",\n            textAlign: \"center\",\n            borderLeft: worksheetCompleted\n              ? \"4px solid #3cb371\"\n              : \"4px solid #ccc\",\n          }}\n        >\n          <span\n            style={{\n              fontWeight: \"bold\",\n              marginRight: \"15px\",\n              color: \"#333333\",\n            }}\n          >\n            Worksheet:\n          </span>\n          <span\n            style={{\n              color: worksheetCompleted ? \"#3cb371\" : \"#666666\",\n              fontWeight: worksheetCompleted ? \"bold\" : \"normal\",\n            }}\n          >\n            {worksheetCompleted ? \"Completed\" : \"Not Completed\"}\n          </span>\n          <span\n            style={{\n              marginLeft: \"15px\",\n              color: \"#555555\",\n            }}\n          >\n            ({pointsEarned} {pointsEarned === 1 ? \"point\" : \"points\"})\n          </span>\n        </div>\n\n        {/* Instructions */}\n        <div\n          style={{\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            padding: \"20px\",\n            marginBottom: \"20px\",\n            boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"20px\",\n              fontWeight: \"bold\",\n              marginBottom: \"15px\",\n              color: \"#254E17\",\n            }}\n          >\n            Materials Needed:\n          </div>\n          <ul\n            style={{\n              listStyleType: \"disc\",\n              paddingLeft: \"20px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            <li\n              style={{\n                marginBottom: \"8px\",\n                lineHeight: \"1.6\",\n              }}\n            >\n              Scratch Paper\n            </li>\n            <li\n              style={{\n                marginBottom: \"8px\",\n                lineHeight: \"1.6\",\n              }}\n            >\n              Coloring pencils/pens/crayons\n            </li>\n          </ul>\n\n          <div\n            style={{\n              fontSize: \"20px\",\n              fontWeight: \"bold\",\n              marginBottom: \"15px\",\n              color: \"#254E17\",\n            }}\n          >\n            Instructions:\n          </div>\n          <p\n            style={{\n              marginBottom: \"8px\",\n              lineHeight: \"1.6\",\n            }}\n          >\n            Look at the pie chart below. It shows the grades of 20 students in\n            third grade. The teacher of the class wants to see how her students\n            are doing more clearly. Turn the pie chart into a different type of\n            graph where the teacher can more clearly see how many students are\n            in each category.\n          </p>\n        </div>\n\n        {/* Chart Image */}\n        <div\n          style={{\n            maxWidth: \"600px\",\n            margin: \"30px auto\",\n            textAlign: \"center\",\n          }}\n        >\n          <img\n            src={statsWorksheet4}\n            alt=\"Student's Grades Pie Chart\"\n            style={{\n              width: \"100%\",\n              maxWidth: \"500px\",\n              height: \"auto\",\n              marginBottom: \"30px\",\n            }}\n          />\n        </div>\n\n        {/* Questions Section */}\n        <div\n          style={{\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            padding: \"20px\",\n            marginBottom: \"20px\",\n            boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n          }}\n        >\n          {/* Question 1 */}\n          <div\n            style={{\n              marginBottom: \"20px\",\n              fontSize: \"16px\",\n              lineHeight: \"1.6\",\n            }}\n          >\n            <span\n              style={{\n                fontWeight: \"bold\",\n                marginRight: \"8px\",\n              }}\n            >\n              1.\n            </span>\n            What type of graph will you use? Why?\n            <textarea\n              value={answers.reasoning}\n              onChange={(e) => handleInputChange(\"reasoning\", e.target.value)}\n              placeholder=\"Enter the type of graph and explain why you chose this type of graph\"\n              style={{\n                width: \"100%\",\n                padding: \"10px\",\n                marginTop: \"10px\",\n                marginBottom: \"15px\",\n                borderRadius: \"5px\",\n                border: \"1px solid #ddd\",\n                fontSize: \"16px\",\n                height: \"100px\",\n              }}\n            />\n          </div>\n\n          {/* Question 2 */}\n          <div\n            style={{\n              marginBottom: \"20px\",\n              fontSize: \"16px\",\n              lineHeight: \"1.6\",\n            }}\n          >\n            <span\n              style={{\n                fontWeight: \"bold\",\n                marginRight: \"8px\",\n              }}\n            >\n              2.\n            </span>\n            How many students are in each grade category? (Total: 20 students)\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"repeat(3, 1fr)\",\n                gap: \"15px\",\n                marginTop: \"15px\",\n              }}\n            >\n              {[\"A\", \"B\", \"C\"].map((grade) => (\n                <div\n                  key={grade}\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <label\n                    style={{\n                      fontWeight: \"bold\",\n                      marginBottom: \"5px\",\n                    }}\n                  >\n                    Grade {grade}\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"20\"\n                    value={answers.studentCounts[grade]}\n                    onChange={(e) =>\n                      handleInputChange(\n                        `studentCounts.${grade}`,\n                        e.target.value\n                      )\n                    }\n                    style={{\n                      width: \"60px\",\n                      padding: \"8px\",\n                      borderRadius: \"5px\",\n                      border: \"1px solid #ddd\",\n                      textAlign: \"center\",\n                      ...(showResults && {\n                        backgroundColor: isStudentCountCorrect(grade)\n                          ? \"#e8f5e9\"\n                          : \"#ffebee\",\n                        border: isStudentCountCorrect(grade)\n                          ? \"1px solid #3cb371\"\n                          : \"1px solid #CF3434\",\n                      }),\n                    }}\n                  />\n                  {showResults && (\n                    <div\n                      style={{\n                        color: isStudentCountCorrect(grade)\n                          ? \"#3cb371\"\n                          : \"#CF3434\",\n                        marginTop: \"5px\",\n                      }}\n                    >\n                      {isStudentCountCorrect(grade) ? \"✓\" : \"✗\"}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n            {/* Results message for question 2 */}\n            {showResults && (\n              <div\n                style={{\n                  marginTop: \"30px\",\n                  textAlign: \"center\",\n                  padding: \"15px\",\n                  backgroundColor: areAllCountsCorrect()\n                    ? \"#e8f5e9\"\n                    : \"#ffebee\",\n                  borderRadius: \"5px\",\n                  boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n                }}\n              >\n                <p\n                  style={{\n                    color: areAllCountsCorrect() ? \"#3cb371\" : \"#CF3434\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\",\n                    margin: 0,\n                  }}\n                >\n                  {!answers.studentCounts.A &&\n                  !answers.studentCounts.B &&\n                  !answers.studentCounts.C\n                    ? \"Please enter student counts before checking answers.\"\n                    : areAllCountsCorrect()\n                    ? \"Congratulations! Your student counts are correct.\"\n                    : \"Some counts are incorrect. Remember, we're looking at 20 students total.\"}\n                </p>\n              </div>\n            )}\n          </div>\n\n          {/* Question 3 */}\n          <div\n            style={{\n              marginBottom: \"20px\",\n              fontSize: \"16px\",\n              lineHeight: \"1.6\",\n            }}\n          >\n            <span\n              style={{\n                fontWeight: \"bold\",\n                marginRight: \"8px\",\n              }}\n            >\n              3.\n            </span>\n            Create your graph!\n          </div>\n\n          {/* Check/Reset Buttons */}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"20px\",\n              marginBottom: \"30px\",\n            }}\n          >\n            <button\n              onClick={checkAnswers}\n              style={{\n                backgroundColor: \"#3cb371\",\n                color: \"white\",\n                padding: \"12px 25px\",\n                borderRadius: \"5px\",\n                border: \"none\",\n                cursor: \"pointer\",\n                marginRight: \"10px\",\n                fontSize: \"16px\",\n                transition: \"all 0.3s ease\",\n              }}\n            >\n              Check Answers\n            </button>\n            <button\n              onClick={resetAnswers}\n              style={{\n                backgroundColor: \"#CF3434\",\n                color: \"white\",\n                padding: \"12px 25px\",\n                borderRadius: \"5px\",\n                border: \"none\",\n                cursor: \"pointer\",\n                fontSize: \"16px\",\n                transition: \"all 0.3s ease\",\n              }}\n            >\n              Reset\n            </button>\n          </div>\n\n          {/* Complete Worksheet Button */}\n          <button\n            onClick={handleComplete}\n            disabled={!canCompleteWorksheet()}\n            style={{\n              backgroundColor: canCompleteWorksheet() ? \"#3cb371\" : \"#cccccc\",\n              color: \"white\",\n              padding: \"15px 30px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: canCompleteWorksheet() ? \"pointer\" : \"default\",\n              display: \"block\",\n              margin: \"40px auto 20px\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\",\n              transition: \"all 0.3s ease\",\n              boxShadow: \"0 4px 8px rgba(0,0,0,0.15)\",\n              width: \"80%\",\n              maxWidth: \"400px\",\n            }}\n          >\n            {worksheetCompleted && !canCompleteWorksheet()\n              ? \"Worksheet Completed ✓\"\n              : worksheetCompleted && canCompleteWorksheet()\n              ? \"Submit again for a better score\"\n              : canCompleteWorksheet()\n              ? \"I've completed this worksheet\"\n              : \"Complete all questions first\"}\n          </button>\n\n          {worksheetCompleted && (\n            <p\n              style={{\n                textAlign: \"center\",\n                color: \"#3cb371\",\n                marginTop: \"10px\",\n              }}\n            >\n              Great job completing this activity! You've earned {pointsEarned}{\" \"}\n              out of 5 possible points.\n              {canCompleteWorksheet() &&\n                \" You can try again to improve your score!\"}\n            </p>\n          )}\n\n          <div\n            style={{\n              marginTop: \"40px\",\n              textAlign: \"center\",\n              color: \"#666\",\n              fontSize: \"16px\",\n            }}\n          >\n            Go back to the slides once you've finished.\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        @keyframes fadeOut {\n          from {\n            opacity: 1;\n            transform: translateY(0);\n          }\n          to {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","correctCounts","A","B","C","StatWorkSheet4","navigate","useNavigate","isHovering","setIsHovering","useState","answers","setAnswers","graphType","reasoning","studentCounts","showResults","setShowResults","answersChecked","setAnswersChecked","userProgress","setUserProgress","loading","setLoading","isAuthenticated","setIsAuthenticated","worksheetCompleted","setWorksheetCompleted","pointsEarned","setPointsEarned","statusMessage","setStatusMessage","lessonNumber","courseKey","statusTimeoutRef","useRef","showStatus","duration","arguments","length","undefined","current","clearTimeout","setTimeout","useEffect","success","console","verifyToken","courses","lesson","lessons","activities","worksheet","savedCompleted","completed","savedPoints","earned","err","fetchUserProgress","handleInputChange","field","value","startsWith","grade","split","prev","isStudentCountCorrect","areAllCountsCorrect","Object","keys","every","canCompleteWorksheet","trim","_jsx","style","minHeight","background","margin","padding","display","justifyContent","alignItems","fontFamily","children","_jsxs","textAlign","border","borderTop","borderRadius","width","height","animation","position","top","right","backgroundColor","color","fontWeight","zIndex","boxShadow","fontSize","onClick","handleGoBack","history","back","left","cursor","transition","transform","onMouseEnter","onMouseLeave","maxWidth","src","stemzLearningLogo","alt","marginBottom","borderLeft","marginRight","marginLeft","listStyleType","paddingLeft","lineHeight","statsWorksheet4","onChange","e","placeholder","marginTop","gridTemplateColumns","gap","map","flexDirection","type","min","max","checkAnswers","resetAnswers","handleComplete","_updatedProgress$cour","earnedPoints","correctCountsCount","filter","Math","highestPoints","updatedProgress","title","points","lessonPoints","video","coursePoints","values","forEach","totalPoints","course","catch","disabled","jsx"],"sourceRoot":""}