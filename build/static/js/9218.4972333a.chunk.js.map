{"version":3,"file":"static/js/9218.4972333a.chunk.js","mappings":"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","sources":["api.js","pages/circuit/CircuitWorksheet.js"],"sourcesContent":["const CORE_API_URL = \"https://core-server-nine.vercel.app\";\n\n// FOR LOCAL BACKEND DEVELOPMENTS\n// const CORE_API_URL = \"http://localhost:3000\";\n\n// Handle token expiration and redirect to login\nconst handleTokenExpiration = (response, data) => {\n  const isTokenExpired = \n    response.status === 401 || \n    response.status === 403 || \n    data?.message?.toLowerCase().includes('token') ||\n    data?.message?.toLowerCase().includes('unauthorized') ||\n    data?.message?.toLowerCase().includes('expired') ||\n    data?.error?.toLowerCase().includes('token') ||\n    data?.error?.toLowerCase().includes('unauthorized');\n\n  if (isTokenExpired) {\n    // Clear expired token\n    localStorage.removeItem('token');\n    \n    // Redirect to login with return URL\n    const currentPath = window.location.pathname;\n    const returnUrl = encodeURIComponent(currentPath);\n    const message = encodeURIComponent('Your session has expired. Please log in again.');\n    \n    window.location.href = `/login?returnUrl=${returnUrl}&message=${message}`;\n    return true;\n  }\n  \n  return false;\n};\n\nfunction call_api(payload, target, method) {\n  const url = CORE_API_URL + \"/api/\" + target;\n  const token = localStorage.getItem(\"token\");\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const handleResponse = async (response) => {\n    let data;\n    \n    try {\n      data = await response.json();\n    } catch (error) {\n      data = { \n        message: response.statusText || 'Unknown error',\n        status: response.status \n      };\n    }\n    \n    // Check for token expiration first\n    if (handleTokenExpiration(response, data)) {\n      const error = new Error('Token expired - redirecting to login');\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    // Handle other HTTP errors\n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n      error.response = {\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      };\n      throw error;\n    }\n    \n    return data;\n  };\n\n  const fetchOptions = {\n    method: method,\n    headers: headers,\n  };\n\n  if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && payload) {\n    fetchOptions.body = JSON.stringify(payload);\n  }\n\n  return fetch(url, fetchOptions).then(handleResponse);\n}\n\nmodule.exports = { call_api };","import React, { useState, useRef, useEffect } from \"react\";\nimport stemzLearningLogo from \"../../assets/logo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { call_api } from \"../../api\";\n\n// Configuration data\nconst terms = [\n  { id: \"capacitor\", term: \"Capacitor\" },\n  { id: \"resistors\", term: \"Resistors\" },\n  { id: \"diodes\", term: \"Diodes\" },\n  { id: \"conductors\", term: \"Conductors\" },\n  { id: \"inductors\", term: \"Inductors\" },\n];\n\nconst definitions = [\n  {\n    id: \"def1\",\n    text: \"Part of an electric circuit that limits the power of an electric current in a circuit.\",\n  },\n  {\n    id: \"def2\",\n    text: \"An object that allows the flow of electric current, in one or more directions.\",\n  },\n  {\n    id: \"def3\",\n    text: \"Electrical part that is in charge of storing electrical energy in the form of magnetic energy.\",\n  },\n  {\n    id: \"def4\",\n    text: \"Devices used to store electrical energy in an electric field.\",\n  },\n  {\n    id: \"def5\",\n    text: \"An electronic piece that conducts current in a singular direction.\",\n  },\n];\n\nconst correctMatches = {\n  capacitor: \"def4\",\n  resistors: \"def1\",\n  diodes: \"def5\",\n  conductors: \"def2\",\n  inductors: \"def3\",\n};\n\nconst colors = [\"#FFCB6B\", \"#CCBADA\", \"#45B7D1\", \"#FFA07A\", \"#98D8C8\"];\n\nexport default function CircuitWorkSheet1() {\n  // Navigation\n  const navigate = useNavigate();\n\n  // State variables\n  const [selectedTerm, setSelectedTerm] = useState(null);\n  const [matches, setMatches] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [clickedTerms, setClickedTerms] = useState({});\n  const [isHovering, setIsHovering] = useState(false);\n\n  // Progress tracking states\n  const [userProgress, setUserProgress] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [worksheetCompleted, setWorksheetCompleted] = useState(false);\n  const [pointsEarned, setPointsEarned] = useState(0);\n  const [savingPoints, setSavingPoints] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  // Constants for progress tracking\n  const lessonNumber = \"lesson2\";\n  const courseKey = \"circuits\";\n\n  // Refs\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const termsRef = useRef({});\n  const defsRef = useRef({});\n  const statusTimeoutRef = useRef(null);\n\n  // Show status message with auto-fade\n  const showStatus = (message, duration = 3000) => {\n    setStatusMessage(message);\n    if (statusTimeoutRef.current) clearTimeout(statusTimeoutRef.current);\n    statusTimeoutRef.current = setTimeout(() => setStatusMessage(\"\"), duration);\n  };\n\n  // Token verification\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      try {\n        const response = await call_api(null, \"auth/verify\", \"POST\");\n        if (response && response.success) {\n          setIsAuthenticated(true);\n          setLoading(false);\n        } else {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Token verification error:\", error);\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n\n  // Fetch user progress data\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    const fetchUserProgress = async () => {\n      try {\n        const response = await call_api(null, \"points\", \"GET\");\n        if (response) {\n          setUserProgress(response);\n\n          // Check if there's course data available\n          if (response.courses && response.courses[courseKey]) {\n            const lesson = response.courses[courseKey].lessons[lessonNumber];\n\n            if (lesson && lesson.activities && lesson.activities.worksheet) {\n              const savedCompleted =\n                lesson.activities.worksheet.completed || false;\n              const savedPoints = lesson.activities.worksheet.earned || 0;\n\n              setWorksheetCompleted(savedCompleted);\n              setPointsEarned(savedPoints);\n            }\n          }\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error fetching course progress:\", err);\n        setLoading(false);\n      }\n    };\n    fetchUserProgress();\n  }, [isAuthenticated, courseKey, lessonNumber]);\n\n  // Helper functions\n  const getTermForDefinition = (defId) => {\n    return Object.entries(matches).find(([_, value]) => value === defId)?.[0];\n  };\n\n  const isDefinitionMatched = (defId) => {\n    return Object.values(matches).some(\n      (matchedDefId) => matchedDefId === defId\n    );\n  };\n\n  const isAllCorrect = () => {\n    if (Object.keys(matches).length !== terms.length) return false;\n    return Object.keys(matches).every(\n      (termId) => correctMatches[termId] === matches[termId]\n    );\n  };\n\n  const handleTermClick = (termId) => {\n    setSelectedTerm(termId);\n    setClickedTerms((prev) => ({ ...prev, [termId]: true }));\n  };\n\n  const handleDefinitionClick = (defId) => {\n    if (!selectedTerm) return;\n    if (matches[selectedTerm] === defId) return;\n    if (\n      isDefinitionMatched(defId) &&\n      getTermForDefinition(defId) !== selectedTerm\n    )\n      return;\n\n    setMatches((prev) => ({\n      ...prev,\n      [selectedTerm]: defId,\n    }));\n  };\n\n  // Check answers and award partial credit\n  const checkAnswers = () => {\n    setShowResults(true);\n\n    // First check if all terms are matched\n    if (Object.keys(matches).length !== terms.length) return;\n\n    // Count correct matches\n    let correctCount = 0;\n    Object.keys(matches).forEach((termId) => {\n      if (correctMatches[termId] === matches[termId]) {\n        correctCount++;\n      }\n    });\n\n    // Award points based on correct answers (1 point per correct answer)\n    const earnedPoints = correctCount;\n\n    // Always mark as completed with partial credit\n    setWorksheetCompleted(true);\n    setPointsEarned(earnedPoints);\n\n    // Update the backend\n    setTimeout(() => {\n      const updatedProgress = { ...userProgress };\n\n      // Ensure the path exists\n      if (!updatedProgress.courses) updatedProgress.courses = {};\n      if (!updatedProgress.courses[courseKey]) {\n        updatedProgress.courses[courseKey] = { lessons: {}, title: \"Circuits\" };\n      }\n      if (!updatedProgress.courses[courseKey].lessons) {\n        updatedProgress.courses[courseKey].lessons = {};\n      }\n      if (!updatedProgress.courses[courseKey].lessons[lessonNumber]) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber] = {\n          activities: {},\n          title: \"More Circuit Board Tools\",\n        };\n      }\n      if (\n        !updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n      ) {\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities =\n          {};\n      }\n\n      // Set worksheet data\n      updatedProgress.courses[courseKey].lessons[\n        lessonNumber\n      ].activities.worksheet = {\n        completed: true,\n        earned: earnedPoints,\n        points: terms.length,\n        type: \"worksheet\",\n      };\n\n      // Update lesson points\n      updatedProgress.courses[courseKey].lessons[lessonNumber].lessonPoints =\n        earnedPoints;\n\n      // Mark lesson as completed if video is also completed\n      if (\n        updatedProgress.courses[courseKey].lessons[lessonNumber].activities\n          .video?.completed\n      ) {\n        updatedProgress.courses[courseKey].lessons[\n          lessonNumber\n        ].completed = true;\n      }\n\n      // Update course points\n      let coursePoints = 0;\n      Object.values(updatedProgress.courses[courseKey].lessons).forEach(\n        (lesson) => {\n          coursePoints += lesson.lessonPoints || 0;\n        }\n      );\n      updatedProgress.courses[courseKey].coursePoints = coursePoints;\n\n      // Update total points\n      let totalPoints = 0;\n      Object.values(updatedProgress.courses).forEach((course) => {\n        totalPoints += course.coursePoints || 0;\n      });\n      updatedProgress.totalPoints = totalPoints;\n\n      // Send to API\n      call_api(updatedProgress, \"points\", \"POST\")\n        .then((response) => {\n          if (response) {\n            setUserProgress(updatedProgress);\n            showStatus(\"✓ Progress saved!\", 3000);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Update error:\", error);\n          showStatus(\"❌ Error saving progress\", 3000);\n        });\n    }, 500);\n  };\n\n  const resetQuiz = () => {\n    setMatches({});\n    setShowResults(false);\n    setSelectedTerm(null);\n    setClickedTerms({});\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      if (ctx)\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n  };\n\n  const handleGoBack = () => {\n    window.history.back();\n  };\n\n  // Draw the connection lines\n  const drawLines = () => {\n    if (!canvasRef.current || !containerRef.current) return;\n\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    canvas.width = container.offsetWidth;\n    canvas.height = container.offsetHeight;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    Object.entries(matches).forEach(([termId, defId]) => {\n      const termElement = termsRef.current[termId];\n      const defElement = defsRef.current[defId];\n      if (termElement && defElement) {\n        const termRect = termElement.getBoundingClientRect();\n        const defRect = defElement.getBoundingClientRect();\n        const containerRect = container.getBoundingClientRect();\n\n        const startX = termRect.right - containerRect.left;\n        const startY = termRect.top + termRect.height / 2 - containerRect.top;\n        const endX = defRect.left - containerRect.left;\n        const endY = defRect.top + defRect.height / 2 - containerRect.top;\n\n        ctx.beginPath();\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        ctx.strokeStyle = colors[terms.findIndex((t) => t.id === termId)];\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    });\n  };\n\n  // Setup resize handler\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      if (canvasRef.current && containerRef.current) drawLines();\n    });\n    return () => window.removeEventListener(\"resize\", drawLines);\n  }, []);\n\n  // Redraw lines when matches change\n  useEffect(() => {\n    const timer = setTimeout(() => drawLines(), 200);\n    return () => clearTimeout(timer);\n  }, [matches, showResults]);\n\n  // Styling for items\n  const getItemStyle = (id, isDefinition = false) => {\n    if (showResults) {\n      if (isDefinition) {\n        const matchedTerm = Object.keys(matches).find(\n          (term) => matches[term] === id\n        );\n        return matchedTerm && correctMatches[matchedTerm] === id\n          ? {\n              backgroundColor: \"#3cb371\",\n              color: \"#ffffff\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n            }\n          : {\n              backgroundColor: \"#CF3434\",\n              color: \"#ffffff\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n            };\n      } else {\n        return matches[id] === correctMatches[id]\n          ? {\n              backgroundColor: \"#3cb371\",\n              color: \"#ffffff\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n            }\n          : {\n              backgroundColor: \"#CF3434\",\n              color: \"#ffffff\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n            };\n      }\n    }\n    if (isDefinition) {\n      const matchedTerm = getTermForDefinition(id);\n      if (matchedTerm) {\n        const isCurrentSelectedTerm = matchedTerm === selectedTerm;\n        return {\n          backgroundColor: colors[terms.findIndex((t) => t.id === matchedTerm)],\n          color: \"#ffffff\",\n          boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n          cursor: isCurrentSelectedTerm ? \"pointer\" : \"not-allowed\",\n          opacity: isCurrentSelectedTerm ? \"1\" : \"0.9\",\n        };\n      }\n      return {\n        backgroundColor: \"#f0f0f0\",\n        color: \"#333333\",\n        border: \"1px solid #cccccc\",\n        boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n        cursor: \"pointer\",\n      };\n    } else {\n      return clickedTerms[id]\n        ? {\n            backgroundColor: colors[terms.findIndex((t) => t.id === id)],\n            color: \"#ffffff\",\n            boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n            border: \"2px solid #333333\",\n          }\n        : {\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333333\",\n            border: \"1px solid #cccccc\",\n            boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n          };\n    }\n  };\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div\n        style={{\n          minHeight: \"100vh\",\n          background: \"white\",\n          margin: 0,\n          padding: \"32px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <div\n            style={{\n              border: \"4px solid #f3f3f3\",\n              borderTop: \"4px solid #357717\",\n              borderRadius: \"50%\",\n              width: \"50px\",\n              height: \"50px\",\n              animation: \"spin 2s linear infinite\",\n              margin: \"0 auto 20px\",\n            }}\n          ></div>\n          <p>Loading worksheet content...</p>\n          <style>{`\n            @keyframes spin {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n          `}</style>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        background: \"white\",\n        margin: \"0\",\n        padding: \"32px\",\n        fontFamily: \"Arial, sans-serif\",\n        position: \"relative\",\n      }}\n    >\n      {/* Status message */}\n      {statusMessage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"150px\",\n            right: \"20px\",\n            padding: \"10px 15px\",\n            backgroundColor: statusMessage.includes(\"Error\")\n              ? \"rgba(231, 76, 60, 0.8)\"\n              : \"#357717\",\n            color: \"white\",\n            borderRadius: \"5px\",\n            fontWeight: \"bold\",\n            zIndex: 1000,\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.2)\",\n            animation: \"fadeIn 0.3s ease-out\",\n            fontSize: \"16px\",\n          }}\n        >\n          {statusMessage}\n        </div>\n      )}\n\n      {/* Back button */}\n      <button\n        onClick={handleGoBack}\n        style={{\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"50%\",\n          background: isHovering ? \"#3cb371\" : \"#357717\",\n          width: \"60px\",\n          height: \"60px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          cursor: \"pointer\",\n          transition: \"all 0.3s ease\",\n          fontSize: \"36px\",\n          fontWeight: \"bold\",\n          transform: isHovering ? \"scale(0.9)\" : \"scale(1)\",\n        }}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n      >\n        &#8592;\n      </button>\n\n      <div style={{ maxWidth: \"896px\", margin: \"0 auto\" }}>\n        {/* Header */}\n        <img\n          src={stemzLearningLogo}\n          alt=\"STEMZ Learning\"\n          style={{\n            maxWidth: \"300px\",\n            display: \"block\",\n            margin: \"0 auto 30px\",\n          }}\n        />\n        <h1\n          style={{\n            color: \"#254E17\",\n            fontSize: \"48px\",\n            marginBottom: \"10px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Circuit Components Quiz\n        </h1>\n        <h2\n          style={{\n            color: \"#357717\",\n            fontSize: \"36px\",\n            marginBottom: \"30px\",\n            fontFamily: \"Orbitron, sans-serif\",\n            textAlign: \"center\",\n          }}\n        >\n          Circuit: Lesson 2\n        </h2>\n\n        {/* Main container */}\n        <div\n          ref={containerRef}\n          style={{\n            position: \"relative\",\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n            padding: \"20px\",\n          }}\n        >\n          {/* Progress status inside main container */}\n          <div\n            style={{\n              marginBottom: \"20px\",\n              padding: \"10px 15px\",\n              borderRadius: \"5px\",\n              backgroundColor: \"#f0f0f0\",\n              textAlign: \"center\",\n              borderLeft: worksheetCompleted\n                ? \"4px solid #3cb371\"\n                : \"4px solid #ccc\",\n            }}\n          >\n            <span\n              style={{\n                fontWeight: \"bold\",\n                marginRight: \"15px\",\n                color: \"#333333\",\n              }}\n            >\n              Worksheet:\n            </span>\n            <span\n              style={{\n                color: worksheetCompleted ? \"#3cb371\" : \"#666666\",\n                fontWeight: worksheetCompleted ? \"bold\" : \"normal\",\n              }}\n            >\n              {worksheetCompleted ? \"Completed\" : \"Not Completed\"}\n            </span>\n            <span\n              style={{\n                marginLeft: \"15px\",\n                color: \"#555555\",\n              }}\n            >\n              ({pointsEarned} {pointsEarned === 1 ? \"point\" : \"points\"})\n            </span>\n          </div>\n\n          <p\n            style={{\n              textAlign: \"center\",\n              color: \"#666666\",\n              marginBottom: \"30px\",\n            }}\n          >\n            Match each circuit component with its correct definition. Click\n            \"Check Answers\" when you're done.\n          </p>\n\n          {/* Terms and definitions */}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: \"20px\",\n            }}\n          >\n            {/* Components column */}\n            <div style={{ width: \"45%\", paddingLeft: \"20px\" }}>\n              <h3 style={{ color: \"#333333\", marginBottom: \"15px\" }}>\n                Components\n              </h3>\n              {terms.map((term) => (\n                <div\n                  key={term.id}\n                  ref={(el) => (termsRef.current[term.id] = el)}\n                  onClick={() => handleTermClick(term.id)}\n                  style={{\n                    padding: \"12px 15px\",\n                    margin: \"10px 0\",\n                    borderRadius: \"5px\",\n                    cursor: \"pointer\",\n                    transition: \"all 0.3s ease\",\n                    fontWeight: \"bold\",\n                    ...getItemStyle(term.id),\n                  }}\n                >\n                  {term.term}\n                </div>\n              ))}\n            </div>\n\n            {/* Definitions column */}\n            <div style={{ width: \"45%\" }}>\n              <h3 style={{ color: \"#333333\", marginBottom: \"15px\" }}>\n                Definitions\n              </h3>\n              {definitions.map((def) => (\n                <div\n                  key={def.id}\n                  ref={(el) => (defsRef.current[def.id] = el)}\n                  onClick={() => handleDefinitionClick(def.id)}\n                  style={{\n                    padding: \"12px 15px\",\n                    margin: \"10px 0\",\n                    borderRadius: \"5px\",\n                    cursor: \"pointer\",\n                    transition: \"all 0.3s ease\",\n                    ...getItemStyle(def.id, true),\n                  }}\n                >\n                  {def.text}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Canvas for drawing lines */}\n          <canvas\n            ref={canvasRef}\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              width: \"100%\",\n              height: \"100%\",\n              pointerEvents: \"none\",\n            }}\n          />\n\n          {/* Buttons */}\n          <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\n            <button\n              onClick={checkAnswers}\n              style={{\n                padding: \"12px 25px\",\n                fontSize: \"16px\",\n                backgroundColor: \"#3cb371\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                marginRight: \"15px\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n                transition: \"all 0.3s ease\",\n              }}\n            >\n              Check Answers\n            </button>\n            <button\n              onClick={resetQuiz}\n              style={{\n                padding: \"12px 25px\",\n                fontSize: \"16px\",\n                backgroundColor: \"#CF3434\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n                transition: \"all 0.3s ease\",\n              }}\n            >\n              Reset Quiz\n            </button>\n          </div>\n\n          {/* Results message */}\n          {showResults && (\n            <div\n              style={{\n                marginTop: \"30px\",\n                textAlign: \"center\",\n                padding: \"15px\",\n                backgroundColor: isAllCorrect() ? \"#e8f5e9\" : \"#ffebee\",\n                borderRadius: \"5px\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n              }}\n            >\n              <p\n                style={{\n                  color: isAllCorrect() ? \"#3cb371\" : \"#CF3434\",\n                  fontSize: \"18px\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                {isAllCorrect()\n                  ? `Congratulations! All answers are correct.`\n                  : \"Some answers are incorrect or missing. Review and try again for full points!\"}\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <style jsx>{`\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        @keyframes fadeOut {\n          from {\n            opacity: 1;\n            transform: translateY(0);\n          }\n          to {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":["module","exports","call_api","payload","target","method","url","CORE_API_URL","token","localStorage","getItem","headers","fetchOptions","includes","body","JSON","stringify","fetch","then","async","data","response","json","error","message","statusText","status","handleTokenExpiration","_data$message","_data$message2","_data$message3","_data$error","_data$error2","toLowerCase","removeItem","currentPath","window","location","pathname","returnUrl","encodeURIComponent","href","Error","ok","terms","id","term","definitions","text","correctMatches","capacitor","resistors","diodes","conductors","inductors","colors","CircuitWorkSheet1","navigate","useNavigate","selectedTerm","setSelectedTerm","useState","matches","setMatches","showResults","setShowResults","clickedTerms","setClickedTerms","isHovering","setIsHovering","userProgress","setUserProgress","loading","setLoading","isAuthenticated","setIsAuthenticated","worksheetCompleted","setWorksheetCompleted","pointsEarned","setPointsEarned","savingPoints","setSavingPoints","statusMessage","setStatusMessage","lessonNumber","courseKey","canvasRef","useRef","containerRef","termsRef","defsRef","statusTimeoutRef","showStatus","duration","arguments","length","undefined","current","clearTimeout","setTimeout","useEffect","success","console","verifyToken","courses","lesson","lessons","activities","worksheet","savedCompleted","completed","savedPoints","earned","err","fetchUserProgress","getTermForDefinition","defId","_Object$entries$find","Object","entries","find","_ref","_","value","isAllCorrect","keys","every","termId","handleDefinitionClick","values","some","matchedDefId","isDefinitionMatched","prev","drawLines","canvas","container","ctx","getContext","width","offsetWidth","height","offsetHeight","clearRect","forEach","_ref2","termElement","defElement","termRect","getBoundingClientRect","defRect","containerRect","startX","right","left","startY","top","endX","endY","beginPath","moveTo","lineTo","strokeStyle","findIndex","t","lineWidth","stroke","addEventListener","removeEventListener","timer","getItemStyle","isDefinition","matchedTerm","backgroundColor","color","boxShadow","isCurrentSelectedTerm","cursor","opacity","border","_jsx","style","minHeight","background","margin","padding","display","justifyContent","alignItems","fontFamily","children","_jsxs","textAlign","borderTop","borderRadius","animation","position","fontWeight","zIndex","fontSize","onClick","handleGoBack","history","back","transition","transform","onMouseEnter","onMouseLeave","maxWidth","src","stemzLearningLogo","alt","marginBottom","ref","borderLeft","marginRight","marginLeft","paddingLeft","map","el","handleTermClick","def","pointerEvents","marginTop","checkAnswers","correctCount","earnedPoints","_updatedProgress$cour","updatedProgress","title","points","type","lessonPoints","video","coursePoints","totalPoints","course","catch","resetQuiz","jsx"],"sourceRoot":""}